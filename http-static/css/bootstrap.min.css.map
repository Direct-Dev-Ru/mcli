{
    version: 3,
    sources: [
    "../../scss/mixins/_banner.scss",
    "../../scss/_root.scss",
    "../../scss/vendor/_rfs.scss",
    "../../scss/_reboot.scss",
    "dist/css/bootstrap.css",
    "../../scss/mixins/_border-radius.scss",
    "../../scss/_type.scss",
    "../../scss/mixins/_lists.scss",
    "../../scss/_images.scss",
    "../../scss/mixins/_image.scss",
    "../../scss/_containers.scss",
    "../../scss/mixins/_container.scss",
    "../../scss/mixins/_breakpoints.scss",
    "../../scss/_grid.scss",
    "../../scss/mixins/_grid.scss",
    "../../scss/_tables.scss",
    "../../scss/mixins/_table-variants.scss",
    "../../scss/forms/_labels.scss",
    "../../scss/forms/_form-text.scss",
    "../../scss/forms/_form-control.scss",
    "../../scss/mixins/_transition.scss",
    "../../scss/mixins/_gradients.scss",
    "../../scss/forms/_form-select.scss",
    "../../scss/forms/_form-check.scss",
    "../../scss/forms/_form-range.scss",
    "../../scss/forms/_floating-labels.scss",
    "../../scss/forms/_input-group.scss",
    "../../scss/mixins/_forms.scss",
    "../../scss/_buttons.scss",
    "../../scss/mixins/_buttons.scss",
    "../../scss/_transitions.scss",
    "../../scss/_dropdown.scss",
    "../../scss/mixins/_caret.scss",
    "../../scss/_button-group.scss",
    "../../scss/_nav.scss",
    "../../scss/_navbar.scss",
    "../../scss/_card.scss",
    "../../scss/_accordion.scss",
    "../../scss/_breadcrumb.scss",
    "../../scss/_pagination.scss",
    "../../scss/mixins/_pagination.scss",
    "../../scss/_badge.scss",
    "../../scss/_alert.scss",
    "../../scss/mixins/_alert.scss",
    "../../scss/_progress.scss",
    "../../scss/_list-group.scss",
    "../../scss/mixins/_list-group.scss",
    "../../scss/_close.scss",
    "../../scss/_toasts.scss",
    "../../scss/_modal.scss",
    "../../scss/mixins/_backdrop.scss",
    "../../scss/_tooltip.scss",
    "../../scss/mixins/_reset-text.scss",
    "../../scss/_popover.scss",
    "../../scss/_carousel.scss",
    "../../scss/mixins/_clearfix.scss",
    "../../scss/_spinners.scss",
    "../../scss/_offcanvas.scss",
    "../../scss/_placeholders.scss",
    "../../scss/helpers/_color-bg.scss",
    "../../scss/helpers/_colored-links.scss",
    "../../scss/helpers/_ratio.scss",
    "../../scss/helpers/_position.scss",
    "../../scss/helpers/_stacks.scss",
    "../../scss/helpers/_visually-hidden.scss",
    "../../scss/mixins/_visually-hidden.scss",
    "../../scss/helpers/_stretched-link.scss",
    "../../scss/helpers/_text-truncation.scss",
    "../../scss/mixins/_text-truncate.scss",
    "../../scss/helpers/_vr.scss",
    "../../scss/mixins/_utilities.scss",
    "../../scss/utilities/_api.scss"
    ],
    names: [ ],
    mappings: "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",
    sourcesContent: [
    "@mixin bsBanner($file, $suffix:"") {
      /*!
       * Bootstrap #{$file} v5.2.0 (https://getbootstrap.com/)
       * Copyright 2011-2022 The Bootstrap Authors
       * Copyright 2011-2022 Twitter, Inc.
       * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
       */
    }
    
    ",
    ":root {
      // Note: Custom variable values only support SassScript inside `#{}`.
    
      // Colors
      //
      // Generate palettes for full colors, grays, and theme colors.
    
      @each $color, $value in $colors {
        --#{$prefix}#{$color}: #{$value};
      }
    
      @each $color, $value in $grays {
        --#{$prefix}gray-#{$color}: #{$value};
      }
    
      @each $color, $value in $theme-colors {
        --#{$prefix}#{$color}: #{$value};
      }
    
      @each $color, $value in $theme-colors-rgb {
        --#{$prefix}#{$color}-rgb: #{$value};
      }
    
      --#{$prefix}white-rgb: #{to-rgb($white)};
      --#{$prefix}black-rgb: #{to-rgb($black)};
      --#{$prefix}body-color-rgb: #{to-rgb($body-color)};
      --#{$prefix}body-bg-rgb: #{to-rgb($body-bg)};
    
      // Fonts
    
      // Note: Use `inspect` for lists so that quoted items keep the quotes.
      // See https://github.com/sass/sass/issues/2383#issuecomment-336349172
      --#{$prefix}font-sans-serif: #{inspect($font-family-sans-serif)};
      --#{$prefix}font-monospace: #{inspect($font-family-monospace)};
      --#{$prefix}gradient: #{$gradient};
    
      // Root and body
      // scss-docs-start root-body-variables
      @if $font-size-root != null {
        --#{$prefix}root-font-size: #{$font-size-root};
      }
      --#{$prefix}body-font-family: #{$font-family-base};
      @include rfs($font-size-base, --#{$prefix}body-font-size);
      --#{$prefix}body-font-weight: #{$font-weight-base};
      --#{$prefix}body-line-height: #{$line-height-base};
      --#{$prefix}body-color: #{$body-color};
      @if $body-text-align != null {
        --#{$prefix}body-text-align: #{$body-text-align};
      }
      --#{$prefix}body-bg: #{$body-bg};
      // scss-docs-end root-body-variables
    
      // scss-docs-start root-border-var
      --#{$prefix}border-width: #{$border-width};
      --#{$prefix}border-style: #{$border-style};
      --#{$prefix}border-color: #{$border-color};
      --#{$prefix}border-color-translucent: #{$border-color-translucent};
    
      --#{$prefix}border-radius: #{$border-radius};
      --#{$prefix}border-radius-sm: #{$border-radius-sm};
      --#{$prefix}border-radius-lg: #{$border-radius-lg};
      --#{$prefix}border-radius-xl: #{$border-radius-xl};
      --#{$prefix}border-radius-2xl: #{$border-radius-2xl};
      --#{$prefix}border-radius-pill: #{$border-radius-pill};
      // scss-docs-end root-border-var
    
      --#{$prefix}link-color: #{$link-color};
      --#{$prefix}link-hover-color: #{$link-hover-color};
    
      --#{$prefix}code-color: #{$code-color};
    
      --#{$prefix}highlight-bg: #{$mark-bg};
    }
    ",
    "// stylelint-disable property-blacklist, scss/dollar-variable-default
    
    // SCSS RFS mixin
    //
    // Automated responsive values for font sizes, paddings, margins and much more
    //
    // Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)
    
    // Configuration
    
    // Base value
    $rfs-base-value: 1.25rem !default;
    $rfs-unit: rem !default;
    
    @if $rfs-unit != rem and $rfs-unit != px {
      @error "`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.";
    }
    
    // Breakpoint at where values start decreasing if screen width is smaller
    $rfs-breakpoint: 1200px !default;
    $rfs-breakpoint-unit: px !default;
    
    @if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {
      @error "`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.";
    }
    
    // Resize values based on screen height and width
    $rfs-two-dimensional: false !default;
    
    // Factor of decrease
    $rfs-factor: 10 !default;
    
    @if type-of($rfs-factor) != number or $rfs-factor <= 1 {
      @error "`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.";
    }
    
    // Mode. Possibilities: "min-media-query", "max-media-query"
    $rfs-mode: min-media-query !default;
    
    // Generate enable or disable classes. Possibilities: false, "enable" or "disable"
    $rfs-class: false !default;
    
    // 1 rem = $rfs-rem-value px
    $rfs-rem-value: 16 !default;
    
    // Safari iframe resize bug: https://github.com/twbs/rfs/issues/14
    $rfs-safari-iframe-resize-bug-fix: false !default;
    
    // Disable RFS by setting $enable-rfs to false
    $enable-rfs: true !default;
    
    // Cache $rfs-base-value unit
    $rfs-base-value-unit: unit($rfs-base-value);
    
    @function divide($dividend, $divisor, $precision: 10) {
      $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);
      $dividend: abs($dividend);
      $divisor: abs($divisor);
      @if $dividend == 0 {
        @return 0;
      }
      @if $divisor == 0 {
        @error "Cannot divide by 0";
      }
      $remainder: $dividend;
      $result: 0;
      $factor: 10;
      @while ($remainder > 0 and $precision >= 0) {
        $quotient: 0;
        @while ($remainder >= $divisor) {
          $remainder: $remainder - $divisor;
          $quotient: $quotient + 1;
        }
        $result: $result * 10 + $quotient;
        $factor: $factor * .1;
        $remainder: $remainder * 10;
        $precision: $precision - 1;
        @if ($precision < 0 and $remainder >= $divisor * 5) {
          $result: $result + 1;
        }
      }
      $result: $result * $factor * $sign;
      $dividend-unit: unit($dividend);
      $divisor-unit: unit($divisor);
      $unit-map: (
        "px": 1px,
        "rem": 1rem,
        "em": 1em,
        "%": 1%
      );
      @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {
        $result: $result * map-get($unit-map, $dividend-unit);
      }
      @return $result;
    }
    
    // Remove px-unit from $rfs-base-value for calculations
    @if $rfs-base-value-unit == px {
      $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);
    }
    @else if $rfs-base-value-unit == rem {
      $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));
    }
    
    // Cache $rfs-breakpoint unit to prevent multiple calls
    $rfs-breakpoint-unit-cache: unit($rfs-breakpoint);
    
    // Remove unit from $rfs-breakpoint for calculations
    @if $rfs-breakpoint-unit-cache == px {
      $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);
    }
    @else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == "em" {
      $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));
    }
    
    // Calculate the media query value
    $rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});
    $rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);
    $rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);
    
    // Internal mixin used to determine which media query needs to be used
    @mixin _rfs-media-query {
      @if $rfs-two-dimensional {
        @if $rfs-mode == max-media-query {
          @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {
            @content;
          }
        }
        @else {
          @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {
            @content;
          }
        }
      }
      @else {
        @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {
          @content;
        }
      }
    }
    
    // Internal mixin that adds disable classes to the selector if needed.
    @mixin _rfs-rule {
      @if $rfs-class == disable and $rfs-mode == max-media-query {
        // Adding an extra class increases specificity, which prevents the media query to override the property
        &,
        .disable-rfs &,
        &.disable-rfs {
          @content;
        }
      }
      @else if $rfs-class == enable and $rfs-mode == min-media-query {
        .enable-rfs &,
        &.enable-rfs {
          @content;
        }
      }
      @else {
        @content;
      }
    }
    
    // Internal mixin that adds enable classes to the selector if needed.
    @mixin _rfs-media-query-rule {
    
      @if $rfs-class == enable {
        @if $rfs-mode == min-media-query {
          @content;
        }
    
        @include _rfs-media-query {
          .enable-rfs &,
          &.enable-rfs {
            @content;
          }
        }
      }
      @else {
        @if $rfs-class == disable and $rfs-mode == min-media-query {
          .disable-rfs &,
          &.disable-rfs {
            @content;
          }
        }
        @include _rfs-media-query {
          @content;
        }
      }
    }
    
    // Helper function to get the formatted non-responsive value
    @function rfs-value($values) {
      // Convert to list
      $values: if(type-of($values) != list, ($values,), $values);
    
      $val: '';
    
      // Loop over each value and calculate value
      @each $value in $values {
        @if $value == 0 {
          $val: $val + ' 0';
        }
        @else {
          // Cache $value unit
          $unit: if(type-of($value) == "number", unit($value), false);
    
          @if $unit == px {
            // Convert to rem if needed
            $val: $val + ' ' + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);
          }
          @else if $unit == rem {
            // Convert to px if needed
            $val: $val + ' ' + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);
          }
          @else {
            // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value
            $val: $val + ' ' + $value;
          }
        }
      }
    
      // Remove first space
      @return unquote(str-slice($val, 2));
    }
    
    // Helper function to get the responsive value calculated by RFS
    @function rfs-fluid-value($values) {
      // Convert to list
      $values: if(type-of($values) != list, ($values,), $values);
    
      $val: '';
    
      // Loop over each value and calculate value
      @each $value in $values {
        @if $value == 0 {
          $val: $val + ' 0';
        }
    
        @else {
          // Cache $value unit
          $unit: if(type-of($value) == "number", unit($value), false);
    
          // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value
          @if not $unit or $unit != px and $unit != rem {
            $val: $val + ' ' + $value;
          }
    
          @else {
            // Remove unit from $value for calculations
            $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));
    
            // Only add the media query if the value is greater than the minimum value
            @if abs($value) <= $rfs-base-value or not $enable-rfs {
              $val: $val + ' ' +  if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);
            }
            @else {
              // Calculate the minimum value
              $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);
    
              // Calculate difference between $value and the minimum value
              $value-diff: abs($value) - $value-min;
    
              // Base value formatting
              $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);
    
              // Use negative value if needed
              $min-width: if($value < 0, -$min-width, $min-width);
    
              // Use `vmin` if two-dimensional is enabled
              $variable-unit: if($rfs-two-dimensional, vmin, vw);
    
              // Calculate the variable width between 0 and $rfs-breakpoint
              $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};
    
              // Return the calculated value
              $val: $val + ' calc(' + $min-width + if($value < 0, ' - ', ' + ') + $variable-width + ')';
            }
          }
        }
      }
    
      // Remove first space
      @return unquote(str-slice($val, 2));
    }
    
    // RFS mixin
    @mixin rfs($values, $property: font-size) {
      @if $values != null {
        $val: rfs-value($values);
        $fluidVal: rfs-fluid-value($values);
    
        // Do not print the media query if responsive & non-responsive values are the same
        @if $val == $fluidVal {
          #{$property}: $val;
        }
        @else {
          @include _rfs-rule {
            #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);
    
            // Include safari iframe resize fix if needed
            min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);
          }
    
          @include _rfs-media-query-rule {
            #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);
          }
        }
      }
    }
    
    // Shorthand helper mixins
    @mixin font-size($value) {
      @include rfs($value);
    }
    
    @mixin padding($value) {
      @include rfs($value, padding);
    }
    
    @mixin padding-top($value) {
      @include rfs($value, padding-top);
    }
    
    @mixin padding-right($value) {
      @include rfs($value, padding-right);
    }
    
    @mixin padding-bottom($value) {
      @include rfs($value, padding-bottom);
    }
    
    @mixin padding-left($value) {
      @include rfs($value, padding-left);
    }
    
    @mixin margin($value) {
      @include rfs($value, margin);
    }
    
    @mixin margin-top($value) {
      @include rfs($value, margin-top);
    }
    
    @mixin margin-right($value) {
      @include rfs($value, margin-right);
    }
    
    @mixin margin-bottom($value) {
      @include rfs($value, margin-bottom);
    }
    
    @mixin margin-left($value) {
      @include rfs($value, margin-left);
    }
    ",
    "// stylelint-disable declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix
    
    
    // Reboot
    //
    // Normalization of HTML elements, manually forked from Normalize.css to remove
    // styles targeting irrelevant browsers while applying new styles.
    //
    // Normalize is licensed MIT. https://github.com/necolas/normalize.css
    
    
    // Document
    //
    // Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.
    
    *,
    *::before,
    *::after {
      box-sizing: border-box;
    }
    
    
    // Root
    //
    // Ability to the value of the root font sizes, affecting the value of `rem`.
    // null by default, thus nothing is generated.
    
    :root {
      @if $font-size-root != null {
        @include font-size(var(--#{$prefix}root-font-size));
      }
    
      @if $enable-smooth-scroll {
        @media (prefers-reduced-motion: no-preference) {
          scroll-behavior: smooth;
        }
      }
    }
    
    
    // Body
    //
    // 1. Remove the margin in all browsers.
    // 2. As a best practice, apply a default `background-color`.
    // 3. Prevent adjustments of font size after orientation changes in iOS.
    // 4. Change the default tap highlight to be completely transparent in iOS.
    
    // scss-docs-start reboot-body-rules
    body {
      margin: 0; // 1
      font-family: var(--#{$prefix}body-font-family);
      @include font-size(var(--#{$prefix}body-font-size));
      font-weight: var(--#{$prefix}body-font-weight);
      line-height: var(--#{$prefix}body-line-height);
      color: var(--#{$prefix}body-color);
      text-align: var(--#{$prefix}body-text-align);
      background-color: var(--#{$prefix}body-bg); // 2
      -webkit-text-size-adjust: 100%; // 3
      -webkit-tap-highlight-color: rgba($black, 0); // 4
    }
    // scss-docs-end reboot-body-rules
    
    
    // Content grouping
    //
    // 1. Reset Firefox's gray color
    
    hr {
      margin: $hr-margin-y 0;
      color: $hr-color; // 1
      border: 0;
      border-top: $hr-border-width solid $hr-border-color;
      opacity: $hr-opacity;
    }
    
    
    // Typography
    //
    // 1. Remove top margins from headings
    //    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
    //    margin for easier control within type scales as it avoids margin collapsing.
    
    %heading {
      margin-top: 0; // 1
      margin-bottom: $headings-margin-bottom;
      font-family: $headings-font-family;
      font-style: $headings-font-style;
      font-weight: $headings-font-weight;
      line-height: $headings-line-height;
      color: $headings-color;
    }
    
    h1 {
      @extend %heading;
      @include font-size($h1-font-size);
    }
    
    h2 {
      @extend %heading;
      @include font-size($h2-font-size);
    }
    
    h3 {
      @extend %heading;
      @include font-size($h3-font-size);
    }
    
    h4 {
      @extend %heading;
      @include font-size($h4-font-size);
    }
    
    h5 {
      @extend %heading;
      @include font-size($h5-font-size);
    }
    
    h6 {
      @extend %heading;
      @include font-size($h6-font-size);
    }
    
    
    // Reset margins on paragraphs
    //
    // Similarly, the top margin on `<p>`s get reset. However, we also reset the
    // bottom margin to use `rem` units instead of `em`.
    
    p {
      margin-top: 0;
      margin-bottom: $paragraph-margin-bottom;
    }
    
    
    // Abbreviations
    //
    // 1. Add the correct text decoration in Chrome, Edge, Opera, and Safari.
    // 2. Add explicit cursor to indicate changed behavior.
    // 3. Prevent the text-decoration to be skipped.
    
    abbr[title] {
      text-decoration: underline dotted; // 1
      cursor: help; // 2
      text-decoration-skip-ink: none; // 3
    }
    
    
    // Address
    
    address {
      margin-bottom: 1rem;
      font-style: normal;
      line-height: inherit;
    }
    
    
    // Lists
    
    ol,
    ul {
      padding-left: 2rem;
    }
    
    ol,
    ul,
    dl {
      margin-top: 0;
      margin-bottom: 1rem;
    }
    
    ol ol,
    ul ul,
    ol ul,
    ul ol {
      margin-bottom: 0;
    }
    
    dt {
      font-weight: $dt-font-weight;
    }
    
    // 1. Undo browser default
    
    dd {
      margin-bottom: .5rem;
      margin-left: 0; // 1
    }
    
    
    // Blockquote
    
    blockquote {
      margin: 0 0 1rem;
    }
    
    
    // Strong
    //
    // Add the correct font weight in Chrome, Edge, and Safari
    
    b,
    strong {
      font-weight: $font-weight-bolder;
    }
    
    
    // Small
    //
    // Add the correct font size in all browsers
    
    small {
      @include font-size($small-font-size);
    }
    
    
    // Mark
    
    mark {
      padding: $mark-padding;
      background-color: var(--#{$prefix}highlight-bg);
    }
    
    
    // Sub and Sup
    //
    // Prevent `sub` and `sup` elements from affecting the line height in
    // all browsers.
    
    sub,
    sup {
      position: relative;
      @include font-size($sub-sup-font-size);
      line-height: 0;
      vertical-align: baseline;
    }
    
    sub { bottom: -.25em; }
    sup { top: -.5em; }
    
    
    // Links
    
    a {
      color: var(--#{$prefix}link-color);
      text-decoration: $link-decoration;
    
      &:hover {
        color: var(--#{$prefix}link-hover-color);
        text-decoration: $link-hover-decoration;
      }
    }
    
    // And undo these styles for placeholder links/named anchors (without href).
    // It would be more straightforward to just use a[href] in previous block, but that
    // causes specificity issues in many other styles that are too complex to fix.
    // See https://github.com/twbs/bootstrap/issues/19402
    
    a:not([href]):not([class]) {
      &,
      &:hover {
        color: inherit;
        text-decoration: none;
      }
    }
    
    
    // Code
    
    pre,
    code,
    kbd,
    samp {
      font-family: $font-family-code;
      @include font-size(1em); // Correct the odd `em` font sizing in all browsers.
    }
    
    // 1. Remove browser default top margin
    // 2. Reset browser default of `1em` to use `rem`s
    // 3. Don't allow content to break outside
    
    pre {
      display: block;
      margin-top: 0; // 1
      margin-bottom: 1rem; // 2
      overflow: auto; // 3
      @include font-size($code-font-size);
      color: $pre-color;
    
      // Account for some code outputs that place code tags in pre tags
      code {
        @include font-size(inherit);
        color: inherit;
        word-break: normal;
      }
    }
    
    code {
      @include font-size($code-font-size);
      color: var(--#{$prefix}code-color);
      word-wrap: break-word;
    
      // Streamline the style when inside anchors to avoid broken underline and more
      a > & {
        color: inherit;
      }
    }
    
    kbd {
      padding: $kbd-padding-y $kbd-padding-x;
      @include font-size($kbd-font-size);
      color: $kbd-color;
      background-color: $kbd-bg;
      @include border-radius($border-radius-sm);
    
      kbd {
        padding: 0;
        @include font-size(1em);
        font-weight: $nested-kbd-font-weight;
      }
    }
    
    
    // Figures
    //
    // Apply a consistent margin strategy (matches our type styles).
    
    figure {
      margin: 0 0 1rem;
    }
    
    
    // Images and content
    
    img,
    svg {
      vertical-align: middle;
    }
    
    
    // Tables
    //
    // Prevent double borders
    
    table {
      caption-side: bottom;
      border-collapse: collapse;
    }
    
    caption {
      padding-top: $table-cell-padding-y;
      padding-bottom: $table-cell-padding-y;
      color: $table-caption-color;
      text-align: left;
    }
    
    // 1. Removes font-weight bold by inheriting
    // 2. Matches default `<td>` alignment by inheriting `text-align`.
    // 3. Fix alignment for Safari
    
    th {
      font-weight: $table-th-font-weight; // 1
      text-align: inherit; // 2
      text-align: -webkit-match-parent; // 3
    }
    
    thead,
    tbody,
    tfoot,
    tr,
    td,
    th {
      border-color: inherit;
      border-style: solid;
      border-width: 0;
    }
    
    
    // Forms
    //
    // 1. Allow labels to use `margin` for spacing.
    
    label {
      display: inline-block; // 1
    }
    
    // Remove the default `border-radius` that macOS Chrome adds.
    // See https://github.com/twbs/bootstrap/issues/24093
    
    button {
      // stylelint-disable-next-line property-disallowed-list
      border-radius: 0;
    }
    
    // Explicitly remove focus outline in Chromium when it shouldn't be
    // visible (e.g. as result of mouse click or touch tap). It already
    // should be doing this automatically, but seems to currently be
    // confused and applies its very visible two-tone outline anyway.
    
    button:focus:not(:focus-visible) {
      outline: 0;
    }
    
    // 1. Remove the margin in Firefox and Safari
    
    input,
    button,
    select,
    optgroup,
    textarea {
      margin: 0; // 1
      font-family: inherit;
      @include font-size(inherit);
      line-height: inherit;
    }
    
    // Remove the inheritance of text transform in Firefox
    button,
    select {
      text-transform: none;
    }
    // Set the cursor for non-`<button>` buttons
    //
    // Details at https://github.com/twbs/bootstrap/pull/30562
    [role="button"] {
      cursor: pointer;
    }
    
    select {
      // Remove the inheritance of word-wrap in Safari.
      // See https://github.com/twbs/bootstrap/issues/24990
      word-wrap: normal;
    
      // Undo the opacity change from Chrome
      &:disabled {
        opacity: 1;
      }
    }
    
    // Remove the dropdown arrow only from text type inputs built with datalists in Chrome.
    // See https://stackoverflow.com/a/54997118
    
    [list]:not([type="date"]):not([type="datetime-local"]):not([type="month"]):not([type="week"]):not([type="time"])::-webkit-calendar-picker-indicator {
      display: none !important;
    }
    
    // 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
    //    controls in Android 4.
    // 2. Correct the inability to style clickable types in iOS and Safari.
    // 3. Opinionated: add "hand" cursor to non-disabled button elements.
    
    button,
    [type="button"], // 1
    [type="reset"],
    [type="submit"] {
      -webkit-appearance: button; // 2
    
      @if $enable-button-pointers {
        &:not(:disabled) {
          cursor: pointer; // 3
        }
      }
    }
    
    // Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
    
    ::-moz-focus-inner {
      padding: 0;
      border-style: none;
    }
    
    // 1. Textareas should really only resize vertically so they don't break their (horizontal) containers.
    
    textarea {
      resize: vertical; // 1
    }
    
    // 1. Browsers set a default `min-width: min-content;` on fieldsets,
    //    unlike e.g. `<div>`s, which have `min-width: 0;` by default.
    //    So we reset that to ensure fieldsets behave more like a standard block element.
    //    See https://github.com/twbs/bootstrap/issues/12359
    //    and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
    // 2. Reset the default outline behavior of fieldsets so they don't affect page layout.
    
    fieldset {
      min-width: 0; // 1
      padding: 0; // 2
      margin: 0; // 2
      border: 0; // 2
    }
    
    // 1. By using `float: left`, the legend will behave like a block element.
    //    This way the border of a fieldset wraps around the legend if present.
    // 2. Fix wrapping bug.
    //    See https://github.com/twbs/bootstrap/issues/29712
    
    legend {
      float: left; // 1
      width: 100%;
      padding: 0;
      margin-bottom: $legend-margin-bottom;
      @include font-size($legend-font-size);
      font-weight: $legend-font-weight;
      line-height: inherit;
    
      + * {
        clear: left; // 2
      }
    }
    
    // Fix height of inputs with a type of datetime-local, date, month, week, or time
    // See https://github.com/twbs/bootstrap/issues/18842
    
    ::-webkit-datetime-edit-fields-wrapper,
    ::-webkit-datetime-edit-text,
    ::-webkit-datetime-edit-minute,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-year-field {
      padding: 0;
    }
    
    ::-webkit-inner-spin-button {
      height: auto;
    }
    
    // 1. Correct the outline style in Safari.
    // 2. This overrides the extra rounded corners on search inputs in iOS so that our
    //    `.form-control` class can properly style them. Note that this cannot simply
    //    be added to `.form-control` as it's not specific enough. For details, see
    //    https://github.com/twbs/bootstrap/issues/11586.
    
    [type="search"] {
      outline-offset: -2px; // 1
      -webkit-appearance: textfield; // 2
    }
    
    // 1. A few input types should stay LTR
    // See https://rtlstyling.com/posts/rtl-styling#form-inputs
    // 2. RTL only output
    // See https://rtlcss.com/learn/usage-guide/control-directives/#raw
    
    /* rtl:raw:
    [type="tel"],
    [type="url"],
    [type="email"],
    [type="number"] {
      direction: ltr;
    }
    */
    
    // Remove the inner padding in Chrome and Safari on macOS.
    
    ::-webkit-search-decoration {
      -webkit-appearance: none;
    }
    
    // Remove padding around color pickers in webkit browsers
    
    ::-webkit-color-swatch-wrapper {
      padding: 0;
    }
    
    
    // 1. Inherit font family and line height for file input buttons
    // 2. Correct the inability to style clickable types in iOS and Safari.
    
    ::file-selector-button {
      font: inherit; // 1
      -webkit-appearance: button; // 2
    }
    
    // Correct element displays
    
    output {
      display: inline-block;
    }
    
    // Remove border from iframe
    
    iframe {
      border: 0;
    }
    
    // Summary
    //
    // 1. Add the correct display in all browsers
    
    summary {
      display: list-item; // 1
      cursor: pointer;
    }
    
    
    // Progress
    //
    // Add the correct vertical alignment in Chrome, Firefox, and Opera.
    
    progress {
      vertical-align: baseline;
    }
    
    
    // Hidden attribute
    //
    // Always hide an element with the `hidden` HTML attribute.
    
    [hidden] {
      display: none !important;
    }
    ",
    "@charset "UTF-8";
    /*!
     * Bootstrap  v5.2.0 (https://getbootstrap.com/)
     * Copyright 2011-2022 The Bootstrap Authors
     * Copyright 2011-2022 Twitter, Inc.
     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
     */
    :root {
      --bs-blue: #0d6efd;
      --bs-indigo: #6610f2;
      --bs-purple: #6f42c1;
      --bs-pink: #d63384;
      --bs-red: #dc3545;
      --bs-orange: #fd7e14;
      --bs-yellow: #ffc107;
      --bs-green: #198754;
      --bs-teal: #20c997;
      --bs-cyan: #0dcaf0;
      --bs-black: #000;
      --bs-white: #fff;
      --bs-gray: #6c757d;
      --bs-gray-dark: #343a40;
      --bs-gray-100: #f8f9fa;
      --bs-gray-200: #e9ecef;
      --bs-gray-300: #dee2e6;
      --bs-gray-400: #ced4da;
      --bs-gray-500: #adb5bd;
      --bs-gray-600: #6c757d;
      --bs-gray-700: #495057;
      --bs-gray-800: #343a40;
      --bs-gray-900: #212529;
      --bs-primary: #0d6efd;
      --bs-secondary: #6c757d;
      --bs-success: #198754;
      --bs-info: #0dcaf0;
      --bs-warning: #ffc107;
      --bs-danger: #dc3545;
      --bs-light: #f8f9fa;
      --bs-dark: #212529;
      --bs-primary-rgb: 13, 110, 253;
      --bs-secondary-rgb: 108, 117, 125;
      --bs-success-rgb: 25, 135, 84;
      --bs-info-rgb: 13, 202, 240;
      --bs-warning-rgb: 255, 193, 7;
      --bs-danger-rgb: 220, 53, 69;
      --bs-light-rgb: 248, 249, 250;
      --bs-dark-rgb: 33, 37, 41;
      --bs-white-rgb: 255, 255, 255;
      --bs-black-rgb: 0, 0, 0;
      --bs-body-color-rgb: 33, 37, 41;
      --bs-body-bg-rgb: 255, 255, 255;
      --bs-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
      --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
      --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
      --bs-body-font-family: var(--bs-font-sans-serif);
      --bs-body-font-size: 1rem;
      --bs-body-font-weight: 400;
      --bs-body-line-height: 1.5;
      --bs-body-color: #212529;
      --bs-body-bg: #fff;
      --bs-border-width: 1px;
      --bs-border-style: solid;
      --bs-border-color: #dee2e6;
      --bs-border-color-translucent: rgba(0, 0, 0, 0.175);
      --bs-border-radius: 0.375rem;
      --bs-border-radius-sm: 0.25rem;
      --bs-border-radius-lg: 0.5rem;
      --bs-border-radius-xl: 1rem;
      --bs-border-radius-2xl: 2rem;
      --bs-border-radius-pill: 50rem;
      --bs-link-color: #0d6efd;
      --bs-link-hover-color: #0a58ca;
      --bs-code-color: #d63384;
      --bs-highlight-bg: #fff3cd;
    }
    
    *,
    *::before,
    *::after {
      box-sizing: border-box;
    }
    
    @media (prefers-reduced-motion: no-preference) {
      :root {
        scroll-behavior: smooth;
      }
    }
    
    body {
      margin: 0;
      font-family: var(--bs-body-font-family);
      font-size: var(--bs-body-font-size);
      font-weight: var(--bs-body-font-weight);
      line-height: var(--bs-body-line-height);
      color: var(--bs-body-color);
      text-align: var(--bs-body-text-align);
      background-color: var(--bs-body-bg);
      -webkit-text-size-adjust: 100%;
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }
    
    hr {
      margin: 1rem 0;
      color: inherit;
      border: 0;
      border-top: 1px solid;
      opacity: 0.25;
    }
    
    h6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {
      margin-top: 0;
      margin-bottom: 0.5rem;
      font-weight: 500;
      line-height: 1.2;
    }
    
    h1, .h1 {
      font-size: calc(1.375rem + 1.5vw);
    }
    @media (min-width: 1200px) {
      h1, .h1 {
        font-size: 2.5rem;
      }
    }
    
    h2, .h2 {
      font-size: calc(1.325rem + 0.9vw);
    }
    @media (min-width: 1200px) {
      h2, .h2 {
        font-size: 2rem;
      }
    }
    
    h3, .h3 {
      font-size: calc(1.3rem + 0.6vw);
    }
    @media (min-width: 1200px) {
      h3, .h3 {
        font-size: 1.75rem;
      }
    }
    
    h4, .h4 {
      font-size: calc(1.275rem + 0.3vw);
    }
    @media (min-width: 1200px) {
      h4, .h4 {
        font-size: 1.5rem;
      }
    }
    
    h5, .h5 {
      font-size: 1.25rem;
    }
    
    h6, .h6 {
      font-size: 1rem;
    }
    
    p {
      margin-top: 0;
      margin-bottom: 1rem;
    }
    
    abbr[title] {
      -webkit-text-decoration: underline dotted;
      text-decoration: underline dotted;
      cursor: help;
      -webkit-text-decoration-skip-ink: none;
      text-decoration-skip-ink: none;
    }
    
    address {
      margin-bottom: 1rem;
      font-style: normal;
      line-height: inherit;
    }
    
    ol,
    ul {
      padding-left: 2rem;
    }
    
    ol,
    ul,
    dl {
      margin-top: 0;
      margin-bottom: 1rem;
    }
    
    ol ol,
    ul ul,
    ol ul,
    ul ol {
      margin-bottom: 0;
    }
    
    dt {
      font-weight: 700;
    }
    
    dd {
      margin-bottom: 0.5rem;
      margin-left: 0;
    }
    
    blockquote {
      margin: 0 0 1rem;
    }
    
    b,
    strong {
      font-weight: bolder;
    }
    
    small, .small {
      font-size: 0.875em;
    }
    
    mark, .mark {
      padding: 0.1875em;
      background-color: var(--bs-highlight-bg);
    }
    
    sub,
    sup {
      position: relative;
      font-size: 0.75em;
      line-height: 0;
      vertical-align: baseline;
    }
    
    sub {
      bottom: -0.25em;
    }
    
    sup {
      top: -0.5em;
    }
    
    a {
      color: var(--bs-link-color);
      text-decoration: underline;
    }
    a:hover {
      color: var(--bs-link-hover-color);
    }
    
    a:not([href]):not([class]), a:not([href]):not([class]):hover {
      color: inherit;
      text-decoration: none;
    }
    
    pre,
    code,
    kbd,
    samp {
      font-family: var(--bs-font-monospace);
      font-size: 1em;
    }
    
    pre {
      display: block;
      margin-top: 0;
      margin-bottom: 1rem;
      overflow: auto;
      font-size: 0.875em;
    }
    pre code {
      font-size: inherit;
      color: inherit;
      word-break: normal;
    }
    
    code {
      font-size: 0.875em;
      color: var(--bs-code-color);
      word-wrap: break-word;
    }
    a > code {
      color: inherit;
    }
    
    kbd {
      padding: 0.1875rem 0.375rem;
      font-size: 0.875em;
      color: var(--bs-body-bg);
      background-color: var(--bs-body-color);
      border-radius: 0.25rem;
    }
    kbd kbd {
      padding: 0;
      font-size: 1em;
    }
    
    figure {
      margin: 0 0 1rem;
    }
    
    img,
    svg {
      vertical-align: middle;
    }
    
    table {
      caption-side: bottom;
      border-collapse: collapse;
    }
    
    caption {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      color: #6c757d;
      text-align: left;
    }
    
    th {
      text-align: inherit;
      text-align: -webkit-match-parent;
    }
    
    thead,
    tbody,
    tfoot,
    tr,
    td,
    th {
      border-color: inherit;
      border-style: solid;
      border-width: 0;
    }
    
    label {
      display: inline-block;
    }
    
    button {
      border-radius: 0;
    }
    
    button:focus:not(:focus-visible) {
      outline: 0;
    }
    
    input,
    button,
    select,
    optgroup,
    textarea {
      margin: 0;
      font-family: inherit;
      font-size: inherit;
      line-height: inherit;
    }
    
    button,
    select {
      text-transform: none;
    }
    
    [role=button] {
      cursor: pointer;
    }
    
    select {
      word-wrap: normal;
    }
    select:disabled {
      opacity: 1;
    }
    
    [list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {
      display: none !important;
    }
    
    button,
    [type=button],
    [type=reset],
    [type=submit] {
      -webkit-appearance: button;
    }
    button:not(:disabled),
    [type=button]:not(:disabled),
    [type=reset]:not(:disabled),
    [type=submit]:not(:disabled) {
      cursor: pointer;
    }
    
    ::-moz-focus-inner {
      padding: 0;
      border-style: none;
    }
    
    textarea {
      resize: vertical;
    }
    
    fieldset {
      min-width: 0;
      padding: 0;
      margin: 0;
      border: 0;
    }
    
    legend {
      float: left;
      width: 100%;
      padding: 0;
      margin-bottom: 0.5rem;
      font-size: calc(1.275rem + 0.3vw);
      line-height: inherit;
    }
    @media (min-width: 1200px) {
      legend {
        font-size: 1.5rem;
      }
    }
    legend + * {
      clear: left;
    }
    
    ::-webkit-datetime-edit-fields-wrapper,
    ::-webkit-datetime-edit-text,
    ::-webkit-datetime-edit-minute,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-year-field {
      padding: 0;
    }
    
    ::-webkit-inner-spin-button {
      height: auto;
    }
    
    [type=search] {
      outline-offset: -2px;
      -webkit-appearance: textfield;
    }
    
    /* rtl:raw:
    [type="tel"],
    [type="url"],
    [type="email"],
    [type="number"] {
      direction: ltr;
    }
    */
    ::-webkit-search-decoration {
      -webkit-appearance: none;
    }
    
    ::-webkit-color-swatch-wrapper {
      padding: 0;
    }
    
    ::-webkit-file-upload-button {
      font: inherit;
      -webkit-appearance: button;
    }
    
    ::file-selector-button {
      font: inherit;
      -webkit-appearance: button;
    }
    
    output {
      display: inline-block;
    }
    
    iframe {
      border: 0;
    }
    
    summary {
      display: list-item;
      cursor: pointer;
    }
    
    progress {
      vertical-align: baseline;
    }
    
    [hidden] {
      display: none !important;
    }
    
    .lead {
      font-size: 1.25rem;
      font-weight: 300;
    }
    
    .display-1 {
      font-size: calc(1.625rem + 4.5vw);
      font-weight: 300;
      line-height: 1.2;
    }
    @media (min-width: 1200px) {
      .display-1 {
        font-size: 5rem;
      }
    }
    
    .display-2 {
      font-size: calc(1.575rem + 3.9vw);
      font-weight: 300;
      line-height: 1.2;
    }
    @media (min-width: 1200px) {
      .display-2 {
        font-size: 4.5rem;
      }
    }
    
    .display-3 {
      font-size: calc(1.525rem + 3.3vw);
      font-weight: 300;
      line-height: 1.2;
    }
    @media (min-width: 1200px) {
      .display-3 {
        font-size: 4rem;
      }
    }
    
    .display-4 {
      font-size: calc(1.475rem + 2.7vw);
      font-weight: 300;
      line-height: 1.2;
    }
    @media (min-width: 1200px) {
      .display-4 {
        font-size: 3.5rem;
      }
    }
    
    .display-5 {
      font-size: calc(1.425rem + 2.1vw);
      font-weight: 300;
      line-height: 1.2;
    }
    @media (min-width: 1200px) {
      .display-5 {
        font-size: 3rem;
      }
    }
    
    .display-6 {
      font-size: calc(1.375rem + 1.5vw);
      font-weight: 300;
      line-height: 1.2;
    }
    @media (min-width: 1200px) {
      .display-6 {
        font-size: 2.5rem;
      }
    }
    
    .list-unstyled {
      padding-left: 0;
      list-style: none;
    }
    
    .list-inline {
      padding-left: 0;
      list-style: none;
    }
    
    .list-inline-item {
      display: inline-block;
    }
    .list-inline-item:not(:last-child) {
      margin-right: 0.5rem;
    }
    
    .initialism {
      font-size: 0.875em;
      text-transform: uppercase;
    }
    
    .blockquote {
      margin-bottom: 1rem;
      font-size: 1.25rem;
    }
    .blockquote > :last-child {
      margin-bottom: 0;
    }
    
    .blockquote-footer {
      margin-top: -1rem;
      margin-bottom: 1rem;
      font-size: 0.875em;
      color: #6c757d;
    }
    .blockquote-footer::before {
      content: "— ";
    }
    
    .img-fluid {
      max-width: 100%;
      height: auto;
    }
    
    .img-thumbnail {
      padding: 0.25rem;
      background-color: #fff;
      border: 1px solid var(--bs-border-color);
      border-radius: 0.375rem;
      max-width: 100%;
      height: auto;
    }
    
    .figure {
      display: inline-block;
    }
    
    .figure-img {
      margin-bottom: 0.5rem;
      line-height: 1;
    }
    
    .figure-caption {
      font-size: 0.875em;
      color: #6c757d;
    }
    
    .container,
    .container-fluid,
    .container-xxl,
    .container-xl,
    .container-lg,
    .container-md,
    .container-sm {
      --bs-gutter-x: 1.5rem;
      --bs-gutter-y: 0;
      width: 100%;
      padding-right: calc(var(--bs-gutter-x) * 0.5);
      padding-left: calc(var(--bs-gutter-x) * 0.5);
      margin-right: auto;
      margin-left: auto;
    }
    
    @media (min-width: 576px) {
      .container-sm, .container {
        max-width: 540px;
      }
    }
    @media (min-width: 768px) {
      .container-md, .container-sm, .container {
        max-width: 720px;
      }
    }
    @media (min-width: 992px) {
      .container-lg, .container-md, .container-sm, .container {
        max-width: 960px;
      }
    }
    @media (min-width: 1200px) {
      .container-xl, .container-lg, .container-md, .container-sm, .container {
        max-width: 1140px;
      }
    }
    @media (min-width: 1400px) {
      .container-xxl, .container-xl, .container-lg, .container-md, .container-sm, .container {
        max-width: 1320px;
      }
    }
    .row {
      --bs-gutter-x: 1.5rem;
      --bs-gutter-y: 0;
      display: flex;
      flex-wrap: wrap;
      margin-top: calc(-1 * var(--bs-gutter-y));
      margin-right: calc(-0.5 * var(--bs-gutter-x));
      margin-left: calc(-0.5 * var(--bs-gutter-x));
    }
    .row > * {
      flex-shrink: 0;
      width: 100%;
      max-width: 100%;
      padding-right: calc(var(--bs-gutter-x) * 0.5);
      padding-left: calc(var(--bs-gutter-x) * 0.5);
      margin-top: var(--bs-gutter-y);
    }
    
    .col {
      flex: 1 0 0%;
    }
    
    .row-cols-auto > * {
      flex: 0 0 auto;
      width: auto;
    }
    
    .row-cols-1 > * {
      flex: 0 0 auto;
      width: 100%;
    }
    
    .row-cols-2 > * {
      flex: 0 0 auto;
      width: 50%;
    }
    
    .row-cols-3 > * {
      flex: 0 0 auto;
      width: 33.3333333333%;
    }
    
    .row-cols-4 > * {
      flex: 0 0 auto;
      width: 25%;
    }
    
    .row-cols-5 > * {
      flex: 0 0 auto;
      width: 20%;
    }
    
    .row-cols-6 > * {
      flex: 0 0 auto;
      width: 16.6666666667%;
    }
    
    .col-auto {
      flex: 0 0 auto;
      width: auto;
    }
    
    .col-1 {
      flex: 0 0 auto;
      width: 8.33333333%;
    }
    
    .col-2 {
      flex: 0 0 auto;
      width: 16.66666667%;
    }
    
    .col-3 {
      flex: 0 0 auto;
      width: 25%;
    }
    
    .col-4 {
      flex: 0 0 auto;
      width: 33.33333333%;
    }
    
    .col-5 {
      flex: 0 0 auto;
      width: 41.66666667%;
    }
    
    .col-6 {
      flex: 0 0 auto;
      width: 50%;
    }
    
    .col-7 {
      flex: 0 0 auto;
      width: 58.33333333%;
    }
    
    .col-8 {
      flex: 0 0 auto;
      width: 66.66666667%;
    }
    
    .col-9 {
      flex: 0 0 auto;
      width: 75%;
    }
    
    .col-10 {
      flex: 0 0 auto;
      width: 83.33333333%;
    }
    
    .col-11 {
      flex: 0 0 auto;
      width: 91.66666667%;
    }
    
    .col-12 {
      flex: 0 0 auto;
      width: 100%;
    }
    
    .offset-1 {
      margin-left: 8.33333333%;
    }
    
    .offset-2 {
      margin-left: 16.66666667%;
    }
    
    .offset-3 {
      margin-left: 25%;
    }
    
    .offset-4 {
      margin-left: 33.33333333%;
    }
    
    .offset-5 {
      margin-left: 41.66666667%;
    }
    
    .offset-6 {
      margin-left: 50%;
    }
    
    .offset-7 {
      margin-left: 58.33333333%;
    }
    
    .offset-8 {
      margin-left: 66.66666667%;
    }
    
    .offset-9 {
      margin-left: 75%;
    }
    
    .offset-10 {
      margin-left: 83.33333333%;
    }
    
    .offset-11 {
      margin-left: 91.66666667%;
    }
    
    .g-0,
    .gx-0 {
      --bs-gutter-x: 0;
    }
    
    .g-0,
    .gy-0 {
      --bs-gutter-y: 0;
    }
    
    .g-1,
    .gx-1 {
      --bs-gutter-x: 0.25rem;
    }
    
    .g-1,
    .gy-1 {
      --bs-gutter-y: 0.25rem;
    }
    
    .g-2,
    .gx-2 {
      --bs-gutter-x: 0.5rem;
    }
    
    .g-2,
    .gy-2 {
      --bs-gutter-y: 0.5rem;
    }
    
    .g-3,
    .gx-3 {
      --bs-gutter-x: 1rem;
    }
    
    .g-3,
    .gy-3 {
      --bs-gutter-y: 1rem;
    }
    
    .g-4,
    .gx-4 {
      --bs-gutter-x: 1.5rem;
    }
    
    .g-4,
    .gy-4 {
      --bs-gutter-y: 1.5rem;
    }
    
    .g-5,
    .gx-5 {
      --bs-gutter-x: 3rem;
    }
    
    .g-5,
    .gy-5 {
      --bs-gutter-y: 3rem;
    }
    
    @media (min-width: 576px) {
      .col-sm {
        flex: 1 0 0%;
      }
      .row-cols-sm-auto > * {
        flex: 0 0 auto;
        width: auto;
      }
      .row-cols-sm-1 > * {
        flex: 0 0 auto;
        width: 100%;
      }
      .row-cols-sm-2 > * {
        flex: 0 0 auto;
        width: 50%;
      }
      .row-cols-sm-3 > * {
        flex: 0 0 auto;
        width: 33.3333333333%;
      }
      .row-cols-sm-4 > * {
        flex: 0 0 auto;
        width: 25%;
      }
      .row-cols-sm-5 > * {
        flex: 0 0 auto;
        width: 20%;
      }
      .row-cols-sm-6 > * {
        flex: 0 0 auto;
        width: 16.6666666667%;
      }
      .col-sm-auto {
        flex: 0 0 auto;
        width: auto;
      }
      .col-sm-1 {
        flex: 0 0 auto;
        width: 8.33333333%;
      }
      .col-sm-2 {
        flex: 0 0 auto;
        width: 16.66666667%;
      }
      .col-sm-3 {
        flex: 0 0 auto;
        width: 25%;
      }
      .col-sm-4 {
        flex: 0 0 auto;
        width: 33.33333333%;
      }
      .col-sm-5 {
        flex: 0 0 auto;
        width: 41.66666667%;
      }
      .col-sm-6 {
        flex: 0 0 auto;
        width: 50%;
      }
      .col-sm-7 {
        flex: 0 0 auto;
        width: 58.33333333%;
      }
      .col-sm-8 {
        flex: 0 0 auto;
        width: 66.66666667%;
      }
      .col-sm-9 {
        flex: 0 0 auto;
        width: 75%;
      }
      .col-sm-10 {
        flex: 0 0 auto;
        width: 83.33333333%;
      }
      .col-sm-11 {
        flex: 0 0 auto;
        width: 91.66666667%;
      }
      .col-sm-12 {
        flex: 0 0 auto;
        width: 100%;
      }
      .offset-sm-0 {
        margin-left: 0;
      }
      .offset-sm-1 {
        margin-left: 8.33333333%;
      }
      .offset-sm-2 {
        margin-left: 16.66666667%;
      }
      .offset-sm-3 {
        margin-left: 25%;
      }
      .offset-sm-4 {
        margin-left: 33.33333333%;
      }
      .offset-sm-5 {
        margin-left: 41.66666667%;
      }
      .offset-sm-6 {
        margin-left: 50%;
      }
      .offset-sm-7 {
        margin-left: 58.33333333%;
      }
      .offset-sm-8 {
        margin-left: 66.66666667%;
      }
      .offset-sm-9 {
        margin-left: 75%;
      }
      .offset-sm-10 {
        margin-left: 83.33333333%;
      }
      .offset-sm-11 {
        margin-left: 91.66666667%;
      }
      .g-sm-0,
    .gx-sm-0 {
        --bs-gutter-x: 0;
      }
      .g-sm-0,
    .gy-sm-0 {
        --bs-gutter-y: 0;
      }
      .g-sm-1,
    .gx-sm-1 {
        --bs-gutter-x: 0.25rem;
      }
      .g-sm-1,
    .gy-sm-1 {
        --bs-gutter-y: 0.25rem;
      }
      .g-sm-2,
    .gx-sm-2 {
        --bs-gutter-x: 0.5rem;
      }
      .g-sm-2,
    .gy-sm-2 {
        --bs-gutter-y: 0.5rem;
      }
      .g-sm-3,
    .gx-sm-3 {
        --bs-gutter-x: 1rem;
      }
      .g-sm-3,
    .gy-sm-3 {
        --bs-gutter-y: 1rem;
      }
      .g-sm-4,
    .gx-sm-4 {
        --bs-gutter-x: 1.5rem;
      }
      .g-sm-4,
    .gy-sm-4 {
        --bs-gutter-y: 1.5rem;
      }
      .g-sm-5,
    .gx-sm-5 {
        --bs-gutter-x: 3rem;
      }
      .g-sm-5,
    .gy-sm-5 {
        --bs-gutter-y: 3rem;
      }
    }
    @media (min-width: 768px) {
      .col-md {
        flex: 1 0 0%;
      }
      .row-cols-md-auto > * {
        flex: 0 0 auto;
        width: auto;
      }
      .row-cols-md-1 > * {
        flex: 0 0 auto;
        width: 100%;
      }
      .row-cols-md-2 > * {
        flex: 0 0 auto;
        width: 50%;
      }
      .row-cols-md-3 > * {
        flex: 0 0 auto;
        width: 33.3333333333%;
      }
      .row-cols-md-4 > * {
        flex: 0 0 auto;
        width: 25%;
      }
      .row-cols-md-5 > * {
        flex: 0 0 auto;
        width: 20%;
      }
      .row-cols-md-6 > * {
        flex: 0 0 auto;
        width: 16.6666666667%;
      }
      .col-md-auto {
        flex: 0 0 auto;
        width: auto;
      }
      .col-md-1 {
        flex: 0 0 auto;
        width: 8.33333333%;
      }
      .col-md-2 {
        flex: 0 0 auto;
        width: 16.66666667%;
      }
      .col-md-3 {
        flex: 0 0 auto;
        width: 25%;
      }
      .col-md-4 {
        flex: 0 0 auto;
        width: 33.33333333%;
      }
      .col-md-5 {
        flex: 0 0 auto;
        width: 41.66666667%;
      }
      .col-md-6 {
        flex: 0 0 auto;
        width: 50%;
      }
      .col-md-7 {
        flex: 0 0 auto;
        width: 58.33333333%;
      }
      .col-md-8 {
        flex: 0 0 auto;
        width: 66.66666667%;
      }
      .col-md-9 {
        flex: 0 0 auto;
        width: 75%;
      }
      .col-md-10 {
        flex: 0 0 auto;
        width: 83.33333333%;
      }
      .col-md-11 {
        flex: 0 0 auto;
        width: 91.66666667%;
      }
      .col-md-12 {
        flex: 0 0 auto;
        width: 100%;
      }
      .offset-md-0 {
        margin-left: 0;
      }
      .offset-md-1 {
        margin-left: 8.33333333%;
      }
      .offset-md-2 {
        margin-left: 16.66666667%;
      }
      .offset-md-3 {
        margin-left: 25%;
      }
      .offset-md-4 {
        margin-left: 33.33333333%;
      }
      .offset-md-5 {
        margin-left: 41.66666667%;
      }
      .offset-md-6 {
        margin-left: 50%;
      }
      .offset-md-7 {
        margin-left: 58.33333333%;
      }
      .offset-md-8 {
        margin-left: 66.66666667%;
      }
      .offset-md-9 {
        margin-left: 75%;
      }
      .offset-md-10 {
        margin-left: 83.33333333%;
      }
      .offset-md-11 {
        margin-left: 91.66666667%;
      }
      .g-md-0,
    .gx-md-0 {
        --bs-gutter-x: 0;
      }
      .g-md-0,
    .gy-md-0 {
        --bs-gutter-y: 0;
      }
      .g-md-1,
    .gx-md-1 {
        --bs-gutter-x: 0.25rem;
      }
      .g-md-1,
    .gy-md-1 {
        --bs-gutter-y: 0.25rem;
      }
      .g-md-2,
    .gx-md-2 {
        --bs-gutter-x: 0.5rem;
      }
      .g-md-2,
    .gy-md-2 {
        --bs-gutter-y: 0.5rem;
      }
      .g-md-3,
    .gx-md-3 {
        --bs-gutter-x: 1rem;
      }
      .g-md-3,
    .gy-md-3 {
        --bs-gutter-y: 1rem;
      }
      .g-md-4,
    .gx-md-4 {
        --bs-gutter-x: 1.5rem;
      }
      .g-md-4,
    .gy-md-4 {
        --bs-gutter-y: 1.5rem;
      }
      .g-md-5,
    .gx-md-5 {
        --bs-gutter-x: 3rem;
      }
      .g-md-5,
    .gy-md-5 {
        --bs-gutter-y: 3rem;
      }
    }
    @media (min-width: 992px) {
      .col-lg {
        flex: 1 0 0%;
      }
      .row-cols-lg-auto > * {
        flex: 0 0 auto;
        width: auto;
      }
      .row-cols-lg-1 > * {
        flex: 0 0 auto;
        width: 100%;
      }
      .row-cols-lg-2 > * {
        flex: 0 0 auto;
        width: 50%;
      }
      .row-cols-lg-3 > * {
        flex: 0 0 auto;
        width: 33.3333333333%;
      }
      .row-cols-lg-4 > * {
        flex: 0 0 auto;
        width: 25%;
      }
      .row-cols-lg-5 > * {
        flex: 0 0 auto;
        width: 20%;
      }
      .row-cols-lg-6 > * {
        flex: 0 0 auto;
        width: 16.6666666667%;
      }
      .col-lg-auto {
        flex: 0 0 auto;
        width: auto;
      }
      .col-lg-1 {
        flex: 0 0 auto;
        width: 8.33333333%;
      }
      .col-lg-2 {
        flex: 0 0 auto;
        width: 16.66666667%;
      }
      .col-lg-3 {
        flex: 0 0 auto;
        width: 25%;
      }
      .col-lg-4 {
        flex: 0 0 auto;
        width: 33.33333333%;
      }
      .col-lg-5 {
        flex: 0 0 auto;
        width: 41.66666667%;
      }
      .col-lg-6 {
        flex: 0 0 auto;
        width: 50%;
      }
      .col-lg-7 {
        flex: 0 0 auto;
        width: 58.33333333%;
      }
      .col-lg-8 {
        flex: 0 0 auto;
        width: 66.66666667%;
      }
      .col-lg-9 {
        flex: 0 0 auto;
        width: 75%;
      }
      .col-lg-10 {
        flex: 0 0 auto;
        width: 83.33333333%;
      }
      .col-lg-11 {
        flex: 0 0 auto;
        width: 91.66666667%;
      }
      .col-lg-12 {
        flex: 0 0 auto;
        width: 100%;
      }
      .offset-lg-0 {
        margin-left: 0;
      }
      .offset-lg-1 {
        margin-left: 8.33333333%;
      }
      .offset-lg-2 {
        margin-left: 16.66666667%;
      }
      .offset-lg-3 {
        margin-left: 25%;
      }
      .offset-lg-4 {
        margin-left: 33.33333333%;
      }
      .offset-lg-5 {
        margin-left: 41.66666667%;
      }
      .offset-lg-6 {
        margin-left: 50%;
      }
      .offset-lg-7 {
        margin-left: 58.33333333%;
      }
      .offset-lg-8 {
        margin-left: 66.66666667%;
      }
      .offset-lg-9 {
        margin-left: 75%;
      }
      .offset-lg-10 {
        margin-left: 83.33333333%;
      }
      .offset-lg-11 {
        margin-left: 91.66666667%;
      }
      .g-lg-0,
    .gx-lg-0 {
        --bs-gutter-x: 0;
      }
      .g-lg-0,
    .gy-lg-0 {
        --bs-gutter-y: 0;
      }
      .g-lg-1,
    .gx-lg-1 {
        --bs-gutter-x: 0.25rem;
      }
      .g-lg-1,
    .gy-lg-1 {
        --bs-gutter-y: 0.25rem;
      }
      .g-lg-2,
    .gx-lg-2 {
        --bs-gutter-x: 0.5rem;
      }
      .g-lg-2,
    .gy-lg-2 {
        --bs-gutter-y: 0.5rem;
      }
      .g-lg-3,
    .gx-lg-3 {
        --bs-gutter-x: 1rem;
      }
      .g-lg-3,
    .gy-lg-3 {
        --bs-gutter-y: 1rem;
      }
      .g-lg-4,
    .gx-lg-4 {
        --bs-gutter-x: 1.5rem;
      }
      .g-lg-4,
    .gy-lg-4 {
        --bs-gutter-y: 1.5rem;
      }
      .g-lg-5,
    .gx-lg-5 {
        --bs-gutter-x: 3rem;
      }
      .g-lg-5,
    .gy-lg-5 {
        --bs-gutter-y: 3rem;
      }
    }
    @media (min-width: 1200px) {
      .col-xl {
        flex: 1 0 0%;
      }
      .row-cols-xl-auto > * {
        flex: 0 0 auto;
        width: auto;
      }
      .row-cols-xl-1 > * {
        flex: 0 0 auto;
        width: 100%;
      }
      .row-cols-xl-2 > * {
        flex: 0 0 auto;
        width: 50%;
      }
      .row-cols-xl-3 > * {
        flex: 0 0 auto;
        width: 33.3333333333%;
      }
      .row-cols-xl-4 > * {
        flex: 0 0 auto;
        width: 25%;
      }
      .row-cols-xl-5 > * {
        flex: 0 0 auto;
        width: 20%;
      }
      .row-cols-xl-6 > * {
        flex: 0 0 auto;
        width: 16.6666666667%;
      }
      .col-xl-auto {
        flex: 0 0 auto;
        width: auto;
      }
      .col-xl-1 {
        flex: 0 0 auto;
        width: 8.33333333%;
      }
      .col-xl-2 {
        flex: 0 0 auto;
        width: 16.66666667%;
      }
      .col-xl-3 {
        flex: 0 0 auto;
        width: 25%;
      }
      .col-xl-4 {
        flex: 0 0 auto;
        width: 33.33333333%;
      }
      .col-xl-5 {
        flex: 0 0 auto;
        width: 41.66666667%;
      }
      .col-xl-6 {
        flex: 0 0 auto;
        width: 50%;
      }
      .col-xl-7 {
        flex: 0 0 auto;
        width: 58.33333333%;
      }
      .col-xl-8 {
        flex: 0 0 auto;
        width: 66.66666667%;
      }
      .col-xl-9 {
        flex: 0 0 auto;
        width: 75%;
      }
      .col-xl-10 {
        flex: 0 0 auto;
        width: 83.33333333%;
      }
      .col-xl-11 {
        flex: 0 0 auto;
        width: 91.66666667%;
      }
      .col-xl-12 {
        flex: 0 0 auto;
        width: 100%;
      }
      .offset-xl-0 {
        margin-left: 0;
      }
      .offset-xl-1 {
        margin-left: 8.33333333%;
      }
      .offset-xl-2 {
        margin-left: 16.66666667%;
      }
      .offset-xl-3 {
        margin-left: 25%;
      }
      .offset-xl-4 {
        margin-left: 33.33333333%;
      }
      .offset-xl-5 {
        margin-left: 41.66666667%;
      }
      .offset-xl-6 {
        margin-left: 50%;
      }
      .offset-xl-7 {
        margin-left: 58.33333333%;
      }
      .offset-xl-8 {
        margin-left: 66.66666667%;
      }
      .offset-xl-9 {
        margin-left: 75%;
      }
      .offset-xl-10 {
        margin-left: 83.33333333%;
      }
      .offset-xl-11 {
        margin-left: 91.66666667%;
      }
      .g-xl-0,
    .gx-xl-0 {
        --bs-gutter-x: 0;
      }
      .g-xl-0,
    .gy-xl-0 {
        --bs-gutter-y: 0;
      }
      .g-xl-1,
    .gx-xl-1 {
        --bs-gutter-x: 0.25rem;
      }
      .g-xl-1,
    .gy-xl-1 {
        --bs-gutter-y: 0.25rem;
      }
      .g-xl-2,
    .gx-xl-2 {
        --bs-gutter-x: 0.5rem;
      }
      .g-xl-2,
    .gy-xl-2 {
        --bs-gutter-y: 0.5rem;
      }
      .g-xl-3,
    .gx-xl-3 {
        --bs-gutter-x: 1rem;
      }
      .g-xl-3,
    .gy-xl-3 {
        --bs-gutter-y: 1rem;
      }
      .g-xl-4,
    .gx-xl-4 {
        --bs-gutter-x: 1.5rem;
      }
      .g-xl-4,
    .gy-xl-4 {
        --bs-gutter-y: 1.5rem;
      }
      .g-xl-5,
    .gx-xl-5 {
        --bs-gutter-x: 3rem;
      }
      .g-xl-5,
    .gy-xl-5 {
        --bs-gutter-y: 3rem;
      }
    }
    @media (min-width: 1400px) {
      .col-xxl {
        flex: 1 0 0%;
      }
      .row-cols-xxl-auto > * {
        flex: 0 0 auto;
        width: auto;
      }
      .row-cols-xxl-1 > * {
        flex: 0 0 auto;
        width: 100%;
      }
      .row-cols-xxl-2 > * {
        flex: 0 0 auto;
        width: 50%;
      }
      .row-cols-xxl-3 > * {
        flex: 0 0 auto;
        width: 33.3333333333%;
      }
      .row-cols-xxl-4 > * {
        flex: 0 0 auto;
        width: 25%;
      }
      .row-cols-xxl-5 > * {
        flex: 0 0 auto;
        width: 20%;
      }
      .row-cols-xxl-6 > * {
        flex: 0 0 auto;
        width: 16.6666666667%;
      }
      .col-xxl-auto {
        flex: 0 0 auto;
        width: auto;
      }
      .col-xxl-1 {
        flex: 0 0 auto;
        width: 8.33333333%;
      }
      .col-xxl-2 {
        flex: 0 0 auto;
        width: 16.66666667%;
      }
      .col-xxl-3 {
        flex: 0 0 auto;
        width: 25%;
      }
      .col-xxl-4 {
        flex: 0 0 auto;
        width: 33.33333333%;
      }
      .col-xxl-5 {
        flex: 0 0 auto;
        width: 41.66666667%;
      }
      .col-xxl-6 {
        flex: 0 0 auto;
        width: 50%;
      }
      .col-xxl-7 {
        flex: 0 0 auto;
        width: 58.33333333%;
      }
      .col-xxl-8 {
        flex: 0 0 auto;
        width: 66.66666667%;
      }
      .col-xxl-9 {
        flex: 0 0 auto;
        width: 75%;
      }
      .col-xxl-10 {
        flex: 0 0 auto;
        width: 83.33333333%;
      }
      .col-xxl-11 {
        flex: 0 0 auto;
        width: 91.66666667%;
      }
      .col-xxl-12 {
        flex: 0 0 auto;
        width: 100%;
      }
      .offset-xxl-0 {
        margin-left: 0;
      }
      .offset-xxl-1 {
        margin-left: 8.33333333%;
      }
      .offset-xxl-2 {
        margin-left: 16.66666667%;
      }
      .offset-xxl-3 {
        margin-left: 25%;
      }
      .offset-xxl-4 {
        margin-left: 33.33333333%;
      }
      .offset-xxl-5 {
        margin-left: 41.66666667%;
      }
      .offset-xxl-6 {
        margin-left: 50%;
      }
      .offset-xxl-7 {
        margin-left: 58.33333333%;
      }
      .offset-xxl-8 {
        margin-left: 66.66666667%;
      }
      .offset-xxl-9 {
        margin-left: 75%;
      }
      .offset-xxl-10 {
        margin-left: 83.33333333%;
      }
      .offset-xxl-11 {
        margin-left: 91.66666667%;
      }
      .g-xxl-0,
    .gx-xxl-0 {
        --bs-gutter-x: 0;
      }
      .g-xxl-0,
    .gy-xxl-0 {
        --bs-gutter-y: 0;
      }
      .g-xxl-1,
    .gx-xxl-1 {
        --bs-gutter-x: 0.25rem;
      }
      .g-xxl-1,
    .gy-xxl-1 {
        --bs-gutter-y: 0.25rem;
      }
      .g-xxl-2,
    .gx-xxl-2 {
        --bs-gutter-x: 0.5rem;
      }
      .g-xxl-2,
    .gy-xxl-2 {
        --bs-gutter-y: 0.5rem;
      }
      .g-xxl-3,
    .gx-xxl-3 {
        --bs-gutter-x: 1rem;
      }
      .g-xxl-3,
    .gy-xxl-3 {
        --bs-gutter-y: 1rem;
      }
      .g-xxl-4,
    .gx-xxl-4 {
        --bs-gutter-x: 1.5rem;
      }
      .g-xxl-4,
    .gy-xxl-4 {
        --bs-gutter-y: 1.5rem;
      }
      .g-xxl-5,
    .gx-xxl-5 {
        --bs-gutter-x: 3rem;
      }
      .g-xxl-5,
    .gy-xxl-5 {
        --bs-gutter-y: 3rem;
      }
    }
    .table {
      --bs-table-color: var(--bs-body-color);
      --bs-table-bg: transparent;
      --bs-table-border-color: var(--bs-border-color);
      --bs-table-accent-bg: transparent;
      --bs-table-striped-color: var(--bs-body-color);
      --bs-table-striped-bg: rgba(0, 0, 0, 0.05);
      --bs-table-active-color: var(--bs-body-color);
      --bs-table-active-bg: rgba(0, 0, 0, 0.1);
      --bs-table-hover-color: var(--bs-body-color);
      --bs-table-hover-bg: rgba(0, 0, 0, 0.075);
      width: 100%;
      margin-bottom: 1rem;
      color: var(--bs-table-color);
      vertical-align: top;
      border-color: var(--bs-table-border-color);
    }
    .table > :not(caption) > * > * {
      padding: 0.5rem 0.5rem;
      background-color: var(--bs-table-bg);
      border-bottom-width: 1px;
      box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);
    }
    .table > tbody {
      vertical-align: inherit;
    }
    .table > thead {
      vertical-align: bottom;
    }
    
    .table-group-divider {
      border-top: 2px solid currentcolor;
    }
    
    .caption-top {
      caption-side: top;
    }
    
    .table-sm > :not(caption) > * > * {
      padding: 0.25rem 0.25rem;
    }
    
    .table-bordered > :not(caption) > * {
      border-width: 1px 0;
    }
    .table-bordered > :not(caption) > * > * {
      border-width: 0 1px;
    }
    
    .table-borderless > :not(caption) > * > * {
      border-bottom-width: 0;
    }
    .table-borderless > :not(:first-child) {
      border-top-width: 0;
    }
    
    .table-striped > tbody > tr:nth-of-type(odd) > * {
      --bs-table-accent-bg: var(--bs-table-striped-bg);
      color: var(--bs-table-striped-color);
    }
    
    .table-striped-columns > :not(caption) > tr > :nth-child(even) {
      --bs-table-accent-bg: var(--bs-table-striped-bg);
      color: var(--bs-table-striped-color);
    }
    
    .table-active {
      --bs-table-accent-bg: var(--bs-table-active-bg);
      color: var(--bs-table-active-color);
    }
    
    .table-hover > tbody > tr:hover > * {
      --bs-table-accent-bg: var(--bs-table-hover-bg);
      color: var(--bs-table-hover-color);
    }
    
    .table-primary {
      --bs-table-color: #000;
      --bs-table-bg: #cfe2ff;
      --bs-table-border-color: #bacbe6;
      --bs-table-striped-bg: #c5d7f2;
      --bs-table-striped-color: #000;
      --bs-table-active-bg: #bacbe6;
      --bs-table-active-color: #000;
      --bs-table-hover-bg: #bfd1ec;
      --bs-table-hover-color: #000;
      color: var(--bs-table-color);
      border-color: var(--bs-table-border-color);
    }
    
    .table-secondary {
      --bs-table-color: #000;
      --bs-table-bg: #e2e3e5;
      --bs-table-border-color: #cbccce;
      --bs-table-striped-bg: #d7d8da;
      --bs-table-striped-color: #000;
      --bs-table-active-bg: #cbccce;
      --bs-table-active-color: #000;
      --bs-table-hover-bg: #d1d2d4;
      --bs-table-hover-color: #000;
      color: var(--bs-table-color);
      border-color: var(--bs-table-border-color);
    }
    
    .table-success {
      --bs-table-color: #000;
      --bs-table-bg: #d1e7dd;
      --bs-table-border-color: #bcd0c7;
      --bs-table-striped-bg: #c7dbd2;
      --bs-table-striped-color: #000;
      --bs-table-active-bg: #bcd0c7;
      --bs-table-active-color: #000;
      --bs-table-hover-bg: #c1d6cc;
      --bs-table-hover-color: #000;
      color: var(--bs-table-color);
      border-color: var(--bs-table-border-color);
    }
    
    .table-info {
      --bs-table-color: #000;
      --bs-table-bg: #cff4fc;
      --bs-table-border-color: #badce3;
      --bs-table-striped-bg: #c5e8ef;
      --bs-table-striped-color: #000;
      --bs-table-active-bg: #badce3;
      --bs-table-active-color: #000;
      --bs-table-hover-bg: #bfe2e9;
      --bs-table-hover-color: #000;
      color: var(--bs-table-color);
      border-color: var(--bs-table-border-color);
    }
    
    .table-warning {
      --bs-table-color: #000;
      --bs-table-bg: #fff3cd;
      --bs-table-border-color: #e6dbb9;
      --bs-table-striped-bg: #f2e7c3;
      --bs-table-striped-color: #000;
      --bs-table-active-bg: #e6dbb9;
      --bs-table-active-color: #000;
      --bs-table-hover-bg: #ece1be;
      --bs-table-hover-color: #000;
      color: var(--bs-table-color);
      border-color: var(--bs-table-border-color);
    }
    
    .table-danger {
      --bs-table-color: #000;
      --bs-table-bg: #f8d7da;
      --bs-table-border-color: #dfc2c4;
      --bs-table-striped-bg: #eccccf;
      --bs-table-striped-color: #000;
      --bs-table-active-bg: #dfc2c4;
      --bs-table-active-color: #000;
      --bs-table-hover-bg: #e5c7ca;
      --bs-table-hover-color: #000;
      color: var(--bs-table-color);
      border-color: var(--bs-table-border-color);
    }
    
    .table-light {
      --bs-table-color: #000;
      --bs-table-bg: #f8f9fa;
      --bs-table-border-color: #dfe0e1;
      --bs-table-striped-bg: #ecedee;
      --bs-table-striped-color: #000;
      --bs-table-active-bg: #dfe0e1;
      --bs-table-active-color: #000;
      --bs-table-hover-bg: #e5e6e7;
      --bs-table-hover-color: #000;
      color: var(--bs-table-color);
      border-color: var(--bs-table-border-color);
    }
    
    .table-dark {
      --bs-table-color: #fff;
      --bs-table-bg: #212529;
      --bs-table-border-color: #373b3e;
      --bs-table-striped-bg: #2c3034;
      --bs-table-striped-color: #fff;
      --bs-table-active-bg: #373b3e;
      --bs-table-active-color: #fff;
      --bs-table-hover-bg: #323539;
      --bs-table-hover-color: #fff;
      color: var(--bs-table-color);
      border-color: var(--bs-table-border-color);
    }
    
    .table-responsive {
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
    }
    
    @media (max-width: 575.98px) {
      .table-responsive-sm {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
      }
    }
    @media (max-width: 767.98px) {
      .table-responsive-md {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
      }
    }
    @media (max-width: 991.98px) {
      .table-responsive-lg {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
      }
    }
    @media (max-width: 1199.98px) {
      .table-responsive-xl {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
      }
    }
    @media (max-width: 1399.98px) {
      .table-responsive-xxl {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
      }
    }
    .form-label {
      margin-bottom: 0.5rem;
    }
    
    .col-form-label {
      padding-top: calc(0.375rem + 1px);
      padding-bottom: calc(0.375rem + 1px);
      margin-bottom: 0;
      font-size: inherit;
      line-height: 1.5;
    }
    
    .col-form-label-lg {
      padding-top: calc(0.5rem + 1px);
      padding-bottom: calc(0.5rem + 1px);
      font-size: 1.25rem;
    }
    
    .col-form-label-sm {
      padding-top: calc(0.25rem + 1px);
      padding-bottom: calc(0.25rem + 1px);
      font-size: 0.875rem;
    }
    
    .form-text {
      margin-top: 0.25rem;
      font-size: 0.875em;
      color: #6c757d;
    }
    
    .form-control {
      display: block;
      width: 100%;
      padding: 0.375rem 0.75rem;
      font-size: 1rem;
      font-weight: 400;
      line-height: 1.5;
      color: #212529;
      background-color: #fff;
      background-clip: padding-box;
      border: 1px solid #ced4da;
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      border-radius: 0.375rem;
      transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .form-control {
        transition: none;
      }
    }
    .form-control[type=file] {
      overflow: hidden;
    }
    .form-control[type=file]:not(:disabled):not([readonly]) {
      cursor: pointer;
    }
    .form-control:focus {
      color: #212529;
      background-color: #fff;
      border-color: #86b7fe;
      outline: 0;
      box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    .form-control::-webkit-date-and-time-value {
      height: 1.5em;
    }
    .form-control::-moz-placeholder {
      color: #6c757d;
      opacity: 1;
    }
    .form-control::placeholder {
      color: #6c757d;
      opacity: 1;
    }
    .form-control:disabled {
      background-color: #e9ecef;
      opacity: 1;
    }
    .form-control::-webkit-file-upload-button {
      padding: 0.375rem 0.75rem;
      margin: -0.375rem -0.75rem;
      -webkit-margin-end: 0.75rem;
      margin-inline-end: 0.75rem;
      color: #212529;
      background-color: #e9ecef;
      pointer-events: none;
      border-color: inherit;
      border-style: solid;
      border-width: 0;
      border-inline-end-width: 1px;
      border-radius: 0;
      -webkit-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    .form-control::file-selector-button {
      padding: 0.375rem 0.75rem;
      margin: -0.375rem -0.75rem;
      -webkit-margin-end: 0.75rem;
      margin-inline-end: 0.75rem;
      color: #212529;
      background-color: #e9ecef;
      pointer-events: none;
      border-color: inherit;
      border-style: solid;
      border-width: 0;
      border-inline-end-width: 1px;
      border-radius: 0;
      transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .form-control::-webkit-file-upload-button {
        -webkit-transition: none;
        transition: none;
      }
      .form-control::file-selector-button {
        transition: none;
      }
    }
    .form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {
      background-color: #dde0e3;
    }
    .form-control:hover:not(:disabled):not([readonly])::file-selector-button {
      background-color: #dde0e3;
    }
    
    .form-control-plaintext {
      display: block;
      width: 100%;
      padding: 0.375rem 0;
      margin-bottom: 0;
      line-height: 1.5;
      color: #212529;
      background-color: transparent;
      border: solid transparent;
      border-width: 1px 0;
    }
    .form-control-plaintext:focus {
      outline: 0;
    }
    .form-control-plaintext.form-control-sm, .form-control-plaintext.form-control-lg {
      padding-right: 0;
      padding-left: 0;
    }
    
    .form-control-sm {
      min-height: calc(1.5em + 0.5rem + 2px);
      padding: 0.25rem 0.5rem;
      font-size: 0.875rem;
      border-radius: 0.25rem;
    }
    .form-control-sm::-webkit-file-upload-button {
      padding: 0.25rem 0.5rem;
      margin: -0.25rem -0.5rem;
      -webkit-margin-end: 0.5rem;
      margin-inline-end: 0.5rem;
    }
    .form-control-sm::file-selector-button {
      padding: 0.25rem 0.5rem;
      margin: -0.25rem -0.5rem;
      -webkit-margin-end: 0.5rem;
      margin-inline-end: 0.5rem;
    }
    
    .form-control-lg {
      min-height: calc(1.5em + 1rem + 2px);
      padding: 0.5rem 1rem;
      font-size: 1.25rem;
      border-radius: 0.5rem;
    }
    .form-control-lg::-webkit-file-upload-button {
      padding: 0.5rem 1rem;
      margin: -0.5rem -1rem;
      -webkit-margin-end: 1rem;
      margin-inline-end: 1rem;
    }
    .form-control-lg::file-selector-button {
      padding: 0.5rem 1rem;
      margin: -0.5rem -1rem;
      -webkit-margin-end: 1rem;
      margin-inline-end: 1rem;
    }
    
    textarea.form-control {
      min-height: calc(1.5em + 0.75rem + 2px);
    }
    textarea.form-control-sm {
      min-height: calc(1.5em + 0.5rem + 2px);
    }
    textarea.form-control-lg {
      min-height: calc(1.5em + 1rem + 2px);
    }
    
    .form-control-color {
      width: 3rem;
      height: calc(1.5em + 0.75rem + 2px);
      padding: 0.375rem;
    }
    .form-control-color:not(:disabled):not([readonly]) {
      cursor: pointer;
    }
    .form-control-color::-moz-color-swatch {
      border: 0 !important;
      border-radius: 0.375rem;
    }
    .form-control-color::-webkit-color-swatch {
      border-radius: 0.375rem;
    }
    .form-control-color.form-control-sm {
      height: calc(1.5em + 0.5rem + 2px);
    }
    .form-control-color.form-control-lg {
      height: calc(1.5em + 1rem + 2px);
    }
    
    .form-select {
      display: block;
      width: 100%;
      padding: 0.375rem 2.25rem 0.375rem 0.75rem;
      -moz-padding-start: calc(0.75rem - 3px);
      font-size: 1rem;
      font-weight: 400;
      line-height: 1.5;
      color: #212529;
      background-color: #fff;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 0.75rem center;
      background-size: 16px 12px;
      border: 1px solid #ced4da;
      border-radius: 0.375rem;
      transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
    }
    @media (prefers-reduced-motion: reduce) {
      .form-select {
        transition: none;
      }
    }
    .form-select:focus {
      border-color: #86b7fe;
      outline: 0;
      box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    .form-select[multiple], .form-select[size]:not([size="1"]) {
      padding-right: 0.75rem;
      background-image: none;
    }
    .form-select:disabled {
      background-color: #e9ecef;
    }
    .form-select:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 #212529;
    }
    
    .form-select-sm {
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
      padding-left: 0.5rem;
      font-size: 0.875rem;
      border-radius: 0.25rem;
    }
    
    .form-select-lg {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      padding-left: 1rem;
      font-size: 1.25rem;
      border-radius: 0.5rem;
    }
    
    .form-check {
      display: block;
      min-height: 1.5rem;
      padding-left: 1.5em;
      margin-bottom: 0.125rem;
    }
    .form-check .form-check-input {
      float: left;
      margin-left: -1.5em;
    }
    
    .form-check-reverse {
      padding-right: 1.5em;
      padding-left: 0;
      text-align: right;
    }
    .form-check-reverse .form-check-input {
      float: right;
      margin-right: -1.5em;
      margin-left: 0;
    }
    
    .form-check-input {
      width: 1em;
      height: 1em;
      margin-top: 0.25em;
      vertical-align: top;
      background-color: #fff;
      background-repeat: no-repeat;
      background-position: center;
      background-size: contain;
      border: 1px solid rgba(0, 0, 0, 0.25);
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      -webkit-print-color-adjust: exact;
      color-adjust: exact;
      print-color-adjust: exact;
    }
    .form-check-input[type=checkbox] {
      border-radius: 0.25em;
    }
    .form-check-input[type=radio] {
      border-radius: 50%;
    }
    .form-check-input:active {
      filter: brightness(90%);
    }
    .form-check-input:focus {
      border-color: #86b7fe;
      outline: 0;
      box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    .form-check-input:checked {
      background-color: #0d6efd;
      border-color: #0d6efd;
    }
    .form-check-input:checked[type=checkbox] {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
    }
    .form-check-input:checked[type=radio] {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
    }
    .form-check-input[type=checkbox]:indeterminate {
      background-color: #0d6efd;
      border-color: #0d6efd;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e");
    }
    .form-check-input:disabled {
      pointer-events: none;
      filter: none;
      opacity: 0.5;
    }
    .form-check-input[disabled] ~ .form-check-label, .form-check-input:disabled ~ .form-check-label {
      cursor: default;
      opacity: 0.5;
    }
    
    .form-switch {
      padding-left: 2.5em;
    }
    .form-switch .form-check-input {
      width: 2em;
      margin-left: -2.5em;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280, 0, 0, 0.25%29'/%3e%3c/svg%3e");
      background-position: left center;
      border-radius: 2em;
      transition: background-position 0.15s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .form-switch .form-check-input {
        transition: none;
      }
    }
    .form-switch .form-check-input:focus {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%2386b7fe'/%3e%3c/svg%3e");
    }
    .form-switch .form-check-input:checked {
      background-position: right center;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
    }
    .form-switch.form-check-reverse {
      padding-right: 2.5em;
      padding-left: 0;
    }
    .form-switch.form-check-reverse .form-check-input {
      margin-right: -2.5em;
      margin-left: 0;
    }
    
    .form-check-inline {
      display: inline-block;
      margin-right: 1rem;
    }
    
    .btn-check {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
    }
    .btn-check[disabled] + .btn, .btn-check:disabled + .btn {
      pointer-events: none;
      filter: none;
      opacity: 0.65;
    }
    
    .form-range {
      width: 100%;
      height: 1.5rem;
      padding: 0;
      background-color: transparent;
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
    }
    .form-range:focus {
      outline: 0;
    }
    .form-range:focus::-webkit-slider-thumb {
      box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    .form-range:focus::-moz-range-thumb {
      box-shadow: 0 0 0 1px #fff, 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    .form-range::-moz-focus-outer {
      border: 0;
    }
    .form-range::-webkit-slider-thumb {
      width: 1rem;
      height: 1rem;
      margin-top: -0.25rem;
      background-color: #0d6efd;
      border: 0;
      border-radius: 1rem;
      -webkit-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      -webkit-appearance: none;
      appearance: none;
    }
    @media (prefers-reduced-motion: reduce) {
      .form-range::-webkit-slider-thumb {
        -webkit-transition: none;
        transition: none;
      }
    }
    .form-range::-webkit-slider-thumb:active {
      background-color: #b6d4fe;
    }
    .form-range::-webkit-slider-runnable-track {
      width: 100%;
      height: 0.5rem;
      color: transparent;
      cursor: pointer;
      background-color: #dee2e6;
      border-color: transparent;
      border-radius: 1rem;
    }
    .form-range::-moz-range-thumb {
      width: 1rem;
      height: 1rem;
      background-color: #0d6efd;
      border: 0;
      border-radius: 1rem;
      -moz-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      -moz-appearance: none;
      appearance: none;
    }
    @media (prefers-reduced-motion: reduce) {
      .form-range::-moz-range-thumb {
        -moz-transition: none;
        transition: none;
      }
    }
    .form-range::-moz-range-thumb:active {
      background-color: #b6d4fe;
    }
    .form-range::-moz-range-track {
      width: 100%;
      height: 0.5rem;
      color: transparent;
      cursor: pointer;
      background-color: #dee2e6;
      border-color: transparent;
      border-radius: 1rem;
    }
    .form-range:disabled {
      pointer-events: none;
    }
    .form-range:disabled::-webkit-slider-thumb {
      background-color: #adb5bd;
    }
    .form-range:disabled::-moz-range-thumb {
      background-color: #adb5bd;
    }
    
    .form-floating {
      position: relative;
    }
    .form-floating > .form-control,
    .form-floating > .form-control-plaintext,
    .form-floating > .form-select {
      height: calc(3.5rem + 2px);
      line-height: 1.25;
    }
    .form-floating > label {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      padding: 1rem 0.75rem;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      pointer-events: none;
      border: 1px solid transparent;
      transform-origin: 0 0;
      transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .form-floating > label {
        transition: none;
      }
    }
    .form-floating > .form-control,
    .form-floating > .form-control-plaintext {
      padding: 1rem 0.75rem;
    }
    .form-floating > .form-control::-moz-placeholder, .form-floating > .form-control-plaintext::-moz-placeholder {
      color: transparent;
    }
    .form-floating > .form-control::placeholder,
    .form-floating > .form-control-plaintext::placeholder {
      color: transparent;
    }
    .form-floating > .form-control:not(:-moz-placeholder-shown), .form-floating > .form-control-plaintext:not(:-moz-placeholder-shown) {
      padding-top: 1.625rem;
      padding-bottom: 0.625rem;
    }
    .form-floating > .form-control:focus, .form-floating > .form-control:not(:placeholder-shown),
    .form-floating > .form-control-plaintext:focus,
    .form-floating > .form-control-plaintext:not(:placeholder-shown) {
      padding-top: 1.625rem;
      padding-bottom: 0.625rem;
    }
    .form-floating > .form-control:-webkit-autofill,
    .form-floating > .form-control-plaintext:-webkit-autofill {
      padding-top: 1.625rem;
      padding-bottom: 0.625rem;
    }
    .form-floating > .form-select {
      padding-top: 1.625rem;
      padding-bottom: 0.625rem;
    }
    .form-floating > .form-control:not(:-moz-placeholder-shown) ~ label {
      opacity: 0.65;
      transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
    }
    .form-floating > .form-control:focus ~ label,
    .form-floating > .form-control:not(:placeholder-shown) ~ label,
    .form-floating > .form-control-plaintext ~ label,
    .form-floating > .form-select ~ label {
      opacity: 0.65;
      transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
    }
    .form-floating > .form-control:-webkit-autofill ~ label {
      opacity: 0.65;
      transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
    }
    .form-floating > .form-control-plaintext ~ label {
      border-width: 1px 0;
    }
    
    .input-group {
      position: relative;
      display: flex;
      flex-wrap: wrap;
      align-items: stretch;
      width: 100%;
    }
    .input-group > .form-control,
    .input-group > .form-select,
    .input-group > .form-floating {
      position: relative;
      flex: 1 1 auto;
      width: 1%;
      min-width: 0;
    }
    .input-group > .form-control:focus,
    .input-group > .form-select:focus,
    .input-group > .form-floating:focus-within {
      z-index: 3;
    }
    .input-group .btn {
      position: relative;
      z-index: 2;
    }
    .input-group .btn:focus {
      z-index: 3;
    }
    
    .input-group-text {
      display: flex;
      align-items: center;
      padding: 0.375rem 0.75rem;
      font-size: 1rem;
      font-weight: 400;
      line-height: 1.5;
      color: #212529;
      text-align: center;
      white-space: nowrap;
      background-color: #e9ecef;
      border: 1px solid #ced4da;
      border-radius: 0.375rem;
    }
    
    .input-group-lg > .form-control,
    .input-group-lg > .form-select,
    .input-group-lg > .input-group-text,
    .input-group-lg > .btn {
      padding: 0.5rem 1rem;
      font-size: 1.25rem;
      border-radius: 0.5rem;
    }
    
    .input-group-sm > .form-control,
    .input-group-sm > .form-select,
    .input-group-sm > .input-group-text,
    .input-group-sm > .btn {
      padding: 0.25rem 0.5rem;
      font-size: 0.875rem;
      border-radius: 0.25rem;
    }
    
    .input-group-lg > .form-select,
    .input-group-sm > .form-select {
      padding-right: 3rem;
    }
    
    .input-group:not(.has-validation) > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
    .input-group:not(.has-validation) > .dropdown-toggle:nth-last-child(n+3),
    .input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-control,
    .input-group:not(.has-validation) > .form-floating:not(:last-child) > .form-select {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    .input-group.has-validation > :nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
    .input-group.has-validation > .dropdown-toggle:nth-last-child(n+4),
    .input-group.has-validation > .form-floating:nth-last-child(n+3) > .form-control,
    .input-group.has-validation > .form-floating:nth-last-child(n+3) > .form-select {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    .input-group > :not(:first-child):not(.dropdown-menu):not(.form-floating):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback),
    .input-group > .form-floating:not(:first-child) > .form-control,
    .input-group > .form-floating:not(:first-child) > .form-select {
      margin-left: -1px;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    
    .valid-feedback {
      display: none;
      width: 100%;
      margin-top: 0.25rem;
      font-size: 0.875em;
      color: #198754;
    }
    
    .valid-tooltip {
      position: absolute;
      top: 100%;
      z-index: 5;
      display: none;
      max-width: 100%;
      padding: 0.25rem 0.5rem;
      margin-top: 0.1rem;
      font-size: 0.875rem;
      color: #fff;
      background-color: rgba(25, 135, 84, 0.9);
      border-radius: 0.375rem;
    }
    
    .was-validated :valid ~ .valid-feedback,
    .was-validated :valid ~ .valid-tooltip,
    .is-valid ~ .valid-feedback,
    .is-valid ~ .valid-tooltip {
      display: block;
    }
    
    .was-validated .form-control:valid, .form-control.is-valid {
      border-color: #198754;
      padding-right: calc(1.5em + 0.75rem);
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right calc(0.375em + 0.1875rem) center;
      background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }
    .was-validated .form-control:valid:focus, .form-control.is-valid:focus {
      border-color: #198754;
      box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.25);
    }
    
    .was-validated textarea.form-control:valid, textarea.form-control.is-valid {
      padding-right: calc(1.5em + 0.75rem);
      background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
    }
    
    .was-validated .form-select:valid, .form-select.is-valid {
      border-color: #198754;
    }
    .was-validated .form-select:valid:not([multiple]):not([size]), .was-validated .form-select:valid:not([multiple])[size="1"], .form-select.is-valid:not([multiple]):not([size]), .form-select.is-valid:not([multiple])[size="1"] {
      padding-right: 4.125rem;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e"), url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
      background-position: right 0.75rem center, center right 2.25rem;
      background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }
    .was-validated .form-select:valid:focus, .form-select.is-valid:focus {
      border-color: #198754;
      box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.25);
    }
    
    .was-validated .form-control-color:valid, .form-control-color.is-valid {
      width: calc(3rem + calc(1.5em + 0.75rem));
    }
    
    .was-validated .form-check-input:valid, .form-check-input.is-valid {
      border-color: #198754;
    }
    .was-validated .form-check-input:valid:checked, .form-check-input.is-valid:checked {
      background-color: #198754;
    }
    .was-validated .form-check-input:valid:focus, .form-check-input.is-valid:focus {
      box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.25);
    }
    .was-validated .form-check-input:valid ~ .form-check-label, .form-check-input.is-valid ~ .form-check-label {
      color: #198754;
    }
    
    .form-check-inline .form-check-input ~ .valid-feedback {
      margin-left: 0.5em;
    }
    
    .was-validated .input-group .form-control:valid, .input-group .form-control.is-valid,
    .was-validated .input-group .form-select:valid,
    .input-group .form-select.is-valid {
      z-index: 1;
    }
    .was-validated .input-group .form-control:valid:focus, .input-group .form-control.is-valid:focus,
    .was-validated .input-group .form-select:valid:focus,
    .input-group .form-select.is-valid:focus {
      z-index: 3;
    }
    
    .invalid-feedback {
      display: none;
      width: 100%;
      margin-top: 0.25rem;
      font-size: 0.875em;
      color: #dc3545;
    }
    
    .invalid-tooltip {
      position: absolute;
      top: 100%;
      z-index: 5;
      display: none;
      max-width: 100%;
      padding: 0.25rem 0.5rem;
      margin-top: 0.1rem;
      font-size: 0.875rem;
      color: #fff;
      background-color: rgba(220, 53, 69, 0.9);
      border-radius: 0.375rem;
    }
    
    .was-validated :invalid ~ .invalid-feedback,
    .was-validated :invalid ~ .invalid-tooltip,
    .is-invalid ~ .invalid-feedback,
    .is-invalid ~ .invalid-tooltip {
      display: block;
    }
    
    .was-validated .form-control:invalid, .form-control.is-invalid {
      border-color: #dc3545;
      padding-right: calc(1.5em + 0.75rem);
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right calc(0.375em + 0.1875rem) center;
      background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }
    .was-validated .form-control:invalid:focus, .form-control.is-invalid:focus {
      border-color: #dc3545;
      box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
    }
    
    .was-validated textarea.form-control:invalid, textarea.form-control.is-invalid {
      padding-right: calc(1.5em + 0.75rem);
      background-position: top calc(0.375em + 0.1875rem) right calc(0.375em + 0.1875rem);
    }
    
    .was-validated .form-select:invalid, .form-select.is-invalid {
      border-color: #dc3545;
    }
    .was-validated .form-select:invalid:not([multiple]):not([size]), .was-validated .form-select:invalid:not([multiple])[size="1"], .form-select.is-invalid:not([multiple]):not([size]), .form-select.is-invalid:not([multiple])[size="1"] {
      padding-right: 4.125rem;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e"), url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
      background-position: right 0.75rem center, center right 2.25rem;
      background-size: 16px 12px, calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }
    .was-validated .form-select:invalid:focus, .form-select.is-invalid:focus {
      border-color: #dc3545;
      box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
    }
    
    .was-validated .form-control-color:invalid, .form-control-color.is-invalid {
      width: calc(3rem + calc(1.5em + 0.75rem));
    }
    
    .was-validated .form-check-input:invalid, .form-check-input.is-invalid {
      border-color: #dc3545;
    }
    .was-validated .form-check-input:invalid:checked, .form-check-input.is-invalid:checked {
      background-color: #dc3545;
    }
    .was-validated .form-check-input:invalid:focus, .form-check-input.is-invalid:focus {
      box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
    }
    .was-validated .form-check-input:invalid ~ .form-check-label, .form-check-input.is-invalid ~ .form-check-label {
      color: #dc3545;
    }
    
    .form-check-inline .form-check-input ~ .invalid-feedback {
      margin-left: 0.5em;
    }
    
    .was-validated .input-group .form-control:invalid, .input-group .form-control.is-invalid,
    .was-validated .input-group .form-select:invalid,
    .input-group .form-select.is-invalid {
      z-index: 2;
    }
    .was-validated .input-group .form-control:invalid:focus, .input-group .form-control.is-invalid:focus,
    .was-validated .input-group .form-select:invalid:focus,
    .input-group .form-select.is-invalid:focus {
      z-index: 3;
    }
    
    .btn {
      --bs-btn-padding-x: 0.75rem;
      --bs-btn-padding-y: 0.375rem;
      --bs-btn-font-family: ;
      --bs-btn-font-size: 1rem;
      --bs-btn-font-weight: 400;
      --bs-btn-line-height: 1.5;
      --bs-btn-color: #212529;
      --bs-btn-bg: transparent;
      --bs-btn-border-width: 1px;
      --bs-btn-border-color: transparent;
      --bs-btn-border-radius: 0.375rem;
      --bs-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);
      --bs-btn-disabled-opacity: 0.65;
      --bs-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), .5);
      display: inline-block;
      padding: var(--bs-btn-padding-y) var(--bs-btn-padding-x);
      font-family: var(--bs-btn-font-family);
      font-size: var(--bs-btn-font-size);
      font-weight: var(--bs-btn-font-weight);
      line-height: var(--bs-btn-line-height);
      color: var(--bs-btn-color);
      text-align: center;
      text-decoration: none;
      vertical-align: middle;
      cursor: pointer;
      -webkit-user-select: none;
      -moz-user-select: none;
      user-select: none;
      border: var(--bs-btn-border-width) solid var(--bs-btn-border-color);
      border-radius: var(--bs-btn-border-radius);
      background-color: var(--bs-btn-bg);
      transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .btn {
        transition: none;
      }
    }
    .btn:hover {
      color: var(--bs-btn-hover-color);
      background-color: var(--bs-btn-hover-bg);
      border-color: var(--bs-btn-hover-border-color);
    }
    .btn-check:focus + .btn, .btn:focus {
      color: var(--bs-btn-hover-color);
      background-color: var(--bs-btn-hover-bg);
      border-color: var(--bs-btn-hover-border-color);
      outline: 0;
      box-shadow: var(--bs-btn-focus-box-shadow);
    }
    .btn-check:checked + .btn, .btn-check:active + .btn, .btn:active, .btn.active, .btn.show {
      color: var(--bs-btn-active-color);
      background-color: var(--bs-btn-active-bg);
      border-color: var(--bs-btn-active-border-color);
    }
    .btn-check:checked + .btn:focus, .btn-check:active + .btn:focus, .btn:active:focus, .btn.active:focus, .btn.show:focus {
      box-shadow: var(--bs-btn-focus-box-shadow);
    }
    .btn:disabled, .btn.disabled, fieldset:disabled .btn {
      color: var(--bs-btn-disabled-color);
      pointer-events: none;
      background-color: var(--bs-btn-disabled-bg);
      border-color: var(--bs-btn-disabled-border-color);
      opacity: var(--bs-btn-disabled-opacity);
    }
    
    .btn-primary {
      --bs-btn-color: #fff;
      --bs-btn-bg: #0d6efd;
      --bs-btn-border-color: #0d6efd;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #0b5ed7;
      --bs-btn-hover-border-color: #0a58ca;
      --bs-btn-focus-shadow-rgb: 49, 132, 253;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #0a58ca;
      --bs-btn-active-border-color: #0a53be;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #fff;
      --bs-btn-disabled-bg: #0d6efd;
      --bs-btn-disabled-border-color: #0d6efd;
    }
    
    .btn-secondary {
      --bs-btn-color: #fff;
      --bs-btn-bg: #6c757d;
      --bs-btn-border-color: #6c757d;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #5c636a;
      --bs-btn-hover-border-color: #565e64;
      --bs-btn-focus-shadow-rgb: 130, 138, 145;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #565e64;
      --bs-btn-active-border-color: #51585e;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #fff;
      --bs-btn-disabled-bg: #6c757d;
      --bs-btn-disabled-border-color: #6c757d;
    }
    
    .btn-success {
      --bs-btn-color: #fff;
      --bs-btn-bg: #198754;
      --bs-btn-border-color: #198754;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #157347;
      --bs-btn-hover-border-color: #146c43;
      --bs-btn-focus-shadow-rgb: 60, 153, 110;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #146c43;
      --bs-btn-active-border-color: #13653f;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #fff;
      --bs-btn-disabled-bg: #198754;
      --bs-btn-disabled-border-color: #198754;
    }
    
    .btn-info {
      --bs-btn-color: #000;
      --bs-btn-bg: #0dcaf0;
      --bs-btn-border-color: #0dcaf0;
      --bs-btn-hover-color: #000;
      --bs-btn-hover-bg: #31d2f2;
      --bs-btn-hover-border-color: #25cff2;
      --bs-btn-focus-shadow-rgb: 11, 172, 204;
      --bs-btn-active-color: #000;
      --bs-btn-active-bg: #3dd5f3;
      --bs-btn-active-border-color: #25cff2;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #000;
      --bs-btn-disabled-bg: #0dcaf0;
      --bs-btn-disabled-border-color: #0dcaf0;
    }
    
    .btn-warning {
      --bs-btn-color: #000;
      --bs-btn-bg: #ffc107;
      --bs-btn-border-color: #ffc107;
      --bs-btn-hover-color: #000;
      --bs-btn-hover-bg: #ffca2c;
      --bs-btn-hover-border-color: #ffc720;
      --bs-btn-focus-shadow-rgb: 217, 164, 6;
      --bs-btn-active-color: #000;
      --bs-btn-active-bg: #ffcd39;
      --bs-btn-active-border-color: #ffc720;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #000;
      --bs-btn-disabled-bg: #ffc107;
      --bs-btn-disabled-border-color: #ffc107;
    }
    
    .btn-danger {
      --bs-btn-color: #fff;
      --bs-btn-bg: #dc3545;
      --bs-btn-border-color: #dc3545;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #bb2d3b;
      --bs-btn-hover-border-color: #b02a37;
      --bs-btn-focus-shadow-rgb: 225, 83, 97;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #b02a37;
      --bs-btn-active-border-color: #a52834;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #fff;
      --bs-btn-disabled-bg: #dc3545;
      --bs-btn-disabled-border-color: #dc3545;
    }
    
    .btn-light {
      --bs-btn-color: #000;
      --bs-btn-bg: #f8f9fa;
      --bs-btn-border-color: #f8f9fa;
      --bs-btn-hover-color: #000;
      --bs-btn-hover-bg: #d3d4d5;
      --bs-btn-hover-border-color: #c6c7c8;
      --bs-btn-focus-shadow-rgb: 211, 212, 213;
      --bs-btn-active-color: #000;
      --bs-btn-active-bg: #c6c7c8;
      --bs-btn-active-border-color: #babbbc;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #000;
      --bs-btn-disabled-bg: #f8f9fa;
      --bs-btn-disabled-border-color: #f8f9fa;
    }
    
    .btn-dark {
      --bs-btn-color: #fff;
      --bs-btn-bg: #212529;
      --bs-btn-border-color: #212529;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #424649;
      --bs-btn-hover-border-color: #373b3e;
      --bs-btn-focus-shadow-rgb: 66, 70, 73;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #4d5154;
      --bs-btn-active-border-color: #373b3e;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #fff;
      --bs-btn-disabled-bg: #212529;
      --bs-btn-disabled-border-color: #212529;
    }
    
    .btn-outline-primary {
      --bs-btn-color: #0d6efd;
      --bs-btn-border-color: #0d6efd;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #0d6efd;
      --bs-btn-hover-border-color: #0d6efd;
      --bs-btn-focus-shadow-rgb: 13, 110, 253;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #0d6efd;
      --bs-btn-active-border-color: #0d6efd;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #0d6efd;
      --bs-btn-disabled-bg: transparent;
      --bs-btn-disabled-border-color: #0d6efd;
      --bs-gradient: none;
    }
    
    .btn-outline-secondary {
      --bs-btn-color: #6c757d;
      --bs-btn-border-color: #6c757d;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #6c757d;
      --bs-btn-hover-border-color: #6c757d;
      --bs-btn-focus-shadow-rgb: 108, 117, 125;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #6c757d;
      --bs-btn-active-border-color: #6c757d;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #6c757d;
      --bs-btn-disabled-bg: transparent;
      --bs-btn-disabled-border-color: #6c757d;
      --bs-gradient: none;
    }
    
    .btn-outline-success {
      --bs-btn-color: #198754;
      --bs-btn-border-color: #198754;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #198754;
      --bs-btn-hover-border-color: #198754;
      --bs-btn-focus-shadow-rgb: 25, 135, 84;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #198754;
      --bs-btn-active-border-color: #198754;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #198754;
      --bs-btn-disabled-bg: transparent;
      --bs-btn-disabled-border-color: #198754;
      --bs-gradient: none;
    }
    
    .btn-outline-info {
      --bs-btn-color: #0dcaf0;
      --bs-btn-border-color: #0dcaf0;
      --bs-btn-hover-color: #000;
      --bs-btn-hover-bg: #0dcaf0;
      --bs-btn-hover-border-color: #0dcaf0;
      --bs-btn-focus-shadow-rgb: 13, 202, 240;
      --bs-btn-active-color: #000;
      --bs-btn-active-bg: #0dcaf0;
      --bs-btn-active-border-color: #0dcaf0;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #0dcaf0;
      --bs-btn-disabled-bg: transparent;
      --bs-btn-disabled-border-color: #0dcaf0;
      --bs-gradient: none;
    }
    
    .btn-outline-warning {
      --bs-btn-color: #ffc107;
      --bs-btn-border-color: #ffc107;
      --bs-btn-hover-color: #000;
      --bs-btn-hover-bg: #ffc107;
      --bs-btn-hover-border-color: #ffc107;
      --bs-btn-focus-shadow-rgb: 255, 193, 7;
      --bs-btn-active-color: #000;
      --bs-btn-active-bg: #ffc107;
      --bs-btn-active-border-color: #ffc107;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #ffc107;
      --bs-btn-disabled-bg: transparent;
      --bs-btn-disabled-border-color: #ffc107;
      --bs-gradient: none;
    }
    
    .btn-outline-danger {
      --bs-btn-color: #dc3545;
      --bs-btn-border-color: #dc3545;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #dc3545;
      --bs-btn-hover-border-color: #dc3545;
      --bs-btn-focus-shadow-rgb: 220, 53, 69;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #dc3545;
      --bs-btn-active-border-color: #dc3545;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #dc3545;
      --bs-btn-disabled-bg: transparent;
      --bs-btn-disabled-border-color: #dc3545;
      --bs-gradient: none;
    }
    
    .btn-outline-light {
      --bs-btn-color: #f8f9fa;
      --bs-btn-border-color: #f8f9fa;
      --bs-btn-hover-color: #000;
      --bs-btn-hover-bg: #f8f9fa;
      --bs-btn-hover-border-color: #f8f9fa;
      --bs-btn-focus-shadow-rgb: 248, 249, 250;
      --bs-btn-active-color: #000;
      --bs-btn-active-bg: #f8f9fa;
      --bs-btn-active-border-color: #f8f9fa;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #f8f9fa;
      --bs-btn-disabled-bg: transparent;
      --bs-btn-disabled-border-color: #f8f9fa;
      --bs-gradient: none;
    }
    
    .btn-outline-dark {
      --bs-btn-color: #212529;
      --bs-btn-border-color: #212529;
      --bs-btn-hover-color: #fff;
      --bs-btn-hover-bg: #212529;
      --bs-btn-hover-border-color: #212529;
      --bs-btn-focus-shadow-rgb: 33, 37, 41;
      --bs-btn-active-color: #fff;
      --bs-btn-active-bg: #212529;
      --bs-btn-active-border-color: #212529;
      --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
      --bs-btn-disabled-color: #212529;
      --bs-btn-disabled-bg: transparent;
      --bs-btn-disabled-border-color: #212529;
      --bs-gradient: none;
    }
    
    .btn-link {
      --bs-btn-font-weight: 400;
      --bs-btn-color: var(--bs-link-color);
      --bs-btn-bg: transparent;
      --bs-btn-border-color: transparent;
      --bs-btn-hover-color: var(--bs-link-hover-color);
      --bs-btn-hover-border-color: transparent;
      --bs-btn-active-color: var(--bs-link-hover-color);
      --bs-btn-active-border-color: transparent;
      --bs-btn-disabled-color: #6c757d;
      --bs-btn-disabled-border-color: transparent;
      --bs-btn-box-shadow: none;
      --bs-btn-focus-shadow-rgb: 49, 132, 253;
      text-decoration: underline;
    }
    .btn-link:focus {
      color: var(--bs-btn-color);
    }
    .btn-link:hover {
      color: var(--bs-btn-hover-color);
    }
    
    .btn-lg, .btn-group-lg > .btn {
      --bs-btn-padding-y: 0.5rem;
      --bs-btn-padding-x: 1rem;
      --bs-btn-font-size: 1.25rem;
      --bs-btn-border-radius: 0.5rem;
    }
    
    .btn-sm, .btn-group-sm > .btn {
      --bs-btn-padding-y: 0.25rem;
      --bs-btn-padding-x: 0.5rem;
      --bs-btn-font-size: 0.875rem;
      --bs-btn-border-radius: 0.25rem;
    }
    
    .fade {
      transition: opacity 0.15s linear;
    }
    @media (prefers-reduced-motion: reduce) {
      .fade {
        transition: none;
      }
    }
    .fade:not(.show) {
      opacity: 0;
    }
    
    .collapse:not(.show) {
      display: none;
    }
    
    .collapsing {
      height: 0;
      overflow: hidden;
      transition: height 0.35s ease;
    }
    @media (prefers-reduced-motion: reduce) {
      .collapsing {
        transition: none;
      }
    }
    .collapsing.collapse-horizontal {
      width: 0;
      height: auto;
      transition: width 0.35s ease;
    }
    @media (prefers-reduced-motion: reduce) {
      .collapsing.collapse-horizontal {
        transition: none;
      }
    }
    
    .dropup,
    .dropend,
    .dropdown,
    .dropstart,
    .dropup-center,
    .dropdown-center {
      position: relative;
    }
    
    .dropdown-toggle {
      white-space: nowrap;
    }
    .dropdown-toggle::after {
      display: inline-block;
      margin-left: 0.255em;
      vertical-align: 0.255em;
      content: "";
      border-top: 0.3em solid;
      border-right: 0.3em solid transparent;
      border-bottom: 0;
      border-left: 0.3em solid transparent;
    }
    .dropdown-toggle:empty::after {
      margin-left: 0;
    }
    
    .dropdown-menu {
      --bs-dropdown-min-width: 10rem;
      --bs-dropdown-padding-x: 0;
      --bs-dropdown-padding-y: 0.5rem;
      --bs-dropdown-spacer: 0.125rem;
      --bs-dropdown-font-size: 1rem;
      --bs-dropdown-color: #212529;
      --bs-dropdown-bg: #fff;
      --bs-dropdown-border-color: var(--bs-border-color-translucent);
      --bs-dropdown-border-radius: 0.375rem;
      --bs-dropdown-border-width: 1px;
      --bs-dropdown-inner-border-radius: calc(0.375rem - 1px);
      --bs-dropdown-divider-bg: var(--bs-border-color-translucent);
      --bs-dropdown-divider-margin-y: 0.5rem;
      --bs-dropdown-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
      --bs-dropdown-link-color: #212529;
      --bs-dropdown-link-hover-color: #1e2125;
      --bs-dropdown-link-hover-bg: #e9ecef;
      --bs-dropdown-link-active-color: #fff;
      --bs-dropdown-link-active-bg: #0d6efd;
      --bs-dropdown-link-disabled-color: #adb5bd;
      --bs-dropdown-item-padding-x: 1rem;
      --bs-dropdown-item-padding-y: 0.25rem;
      --bs-dropdown-header-color: #6c757d;
      --bs-dropdown-header-padding-x: 1rem;
      --bs-dropdown-header-padding-y: 0.5rem;
      position: absolute;
      z-index: 1000;
      display: none;
      min-width: var(--bs-dropdown-min-width);
      padding: var(--bs-dropdown-padding-y) var(--bs-dropdown-padding-x);
      margin: 0;
      font-size: var(--bs-dropdown-font-size);
      color: var(--bs-dropdown-color);
      text-align: left;
      list-style: none;
      background-color: var(--bs-dropdown-bg);
      background-clip: padding-box;
      border: var(--bs-dropdown-border-width) solid var(--bs-dropdown-border-color);
      border-radius: var(--bs-dropdown-border-radius);
    }
    .dropdown-menu[data-bs-popper] {
      top: 100%;
      left: 0;
      margin-top: var(--bs-dropdown-spacer);
    }
    
    .dropdown-menu-start {
      --bs-position: start;
    }
    .dropdown-menu-start[data-bs-popper] {
      right: auto;
      left: 0;
    }
    
    .dropdown-menu-end {
      --bs-position: end;
    }
    .dropdown-menu-end[data-bs-popper] {
      right: 0;
      left: auto;
    }
    
    @media (min-width: 576px) {
      .dropdown-menu-sm-start {
        --bs-position: start;
      }
      .dropdown-menu-sm-start[data-bs-popper] {
        right: auto;
        left: 0;
      }
      .dropdown-menu-sm-end {
        --bs-position: end;
      }
      .dropdown-menu-sm-end[data-bs-popper] {
        right: 0;
        left: auto;
      }
    }
    @media (min-width: 768px) {
      .dropdown-menu-md-start {
        --bs-position: start;
      }
      .dropdown-menu-md-start[data-bs-popper] {
        right: auto;
        left: 0;
      }
      .dropdown-menu-md-end {
        --bs-position: end;
      }
      .dropdown-menu-md-end[data-bs-popper] {
        right: 0;
        left: auto;
      }
    }
    @media (min-width: 992px) {
      .dropdown-menu-lg-start {
        --bs-position: start;
      }
      .dropdown-menu-lg-start[data-bs-popper] {
        right: auto;
        left: 0;
      }
      .dropdown-menu-lg-end {
        --bs-position: end;
      }
      .dropdown-menu-lg-end[data-bs-popper] {
        right: 0;
        left: auto;
      }
    }
    @media (min-width: 1200px) {
      .dropdown-menu-xl-start {
        --bs-position: start;
      }
      .dropdown-menu-xl-start[data-bs-popper] {
        right: auto;
        left: 0;
      }
      .dropdown-menu-xl-end {
        --bs-position: end;
      }
      .dropdown-menu-xl-end[data-bs-popper] {
        right: 0;
        left: auto;
      }
    }
    @media (min-width: 1400px) {
      .dropdown-menu-xxl-start {
        --bs-position: start;
      }
      .dropdown-menu-xxl-start[data-bs-popper] {
        right: auto;
        left: 0;
      }
      .dropdown-menu-xxl-end {
        --bs-position: end;
      }
      .dropdown-menu-xxl-end[data-bs-popper] {
        right: 0;
        left: auto;
      }
    }
    .dropup .dropdown-menu[data-bs-popper] {
      top: auto;
      bottom: 100%;
      margin-top: 0;
      margin-bottom: var(--bs-dropdown-spacer);
    }
    .dropup .dropdown-toggle::after {
      display: inline-block;
      margin-left: 0.255em;
      vertical-align: 0.255em;
      content: "";
      border-top: 0;
      border-right: 0.3em solid transparent;
      border-bottom: 0.3em solid;
      border-left: 0.3em solid transparent;
    }
    .dropup .dropdown-toggle:empty::after {
      margin-left: 0;
    }
    
    .dropend .dropdown-menu[data-bs-popper] {
      top: 0;
      right: auto;
      left: 100%;
      margin-top: 0;
      margin-left: var(--bs-dropdown-spacer);
    }
    .dropend .dropdown-toggle::after {
      display: inline-block;
      margin-left: 0.255em;
      vertical-align: 0.255em;
      content: "";
      border-top: 0.3em solid transparent;
      border-right: 0;
      border-bottom: 0.3em solid transparent;
      border-left: 0.3em solid;
    }
    .dropend .dropdown-toggle:empty::after {
      margin-left: 0;
    }
    .dropend .dropdown-toggle::after {
      vertical-align: 0;
    }
    
    .dropstart .dropdown-menu[data-bs-popper] {
      top: 0;
      right: 100%;
      left: auto;
      margin-top: 0;
      margin-right: var(--bs-dropdown-spacer);
    }
    .dropstart .dropdown-toggle::after {
      display: inline-block;
      margin-left: 0.255em;
      vertical-align: 0.255em;
      content: "";
    }
    .dropstart .dropdown-toggle::after {
      display: none;
    }
    .dropstart .dropdown-toggle::before {
      display: inline-block;
      margin-right: 0.255em;
      vertical-align: 0.255em;
      content: "";
      border-top: 0.3em solid transparent;
      border-right: 0.3em solid;
      border-bottom: 0.3em solid transparent;
    }
    .dropstart .dropdown-toggle:empty::after {
      margin-left: 0;
    }
    .dropstart .dropdown-toggle::before {
      vertical-align: 0;
    }
    
    .dropdown-divider {
      height: 0;
      margin: var(--bs-dropdown-divider-margin-y) 0;
      overflow: hidden;
      border-top: 1px solid var(--bs-dropdown-divider-bg);
      opacity: 1;
    }
    
    .dropdown-item {
      display: block;
      width: 100%;
      padding: var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);
      clear: both;
      font-weight: 400;
      color: var(--bs-dropdown-link-color);
      text-align: inherit;
      text-decoration: none;
      white-space: nowrap;
      background-color: transparent;
      border: 0;
    }
    .dropdown-item:hover, .dropdown-item:focus {
      color: var(--bs-dropdown-link-hover-color);
      background-color: var(--bs-dropdown-link-hover-bg);
    }
    .dropdown-item.active, .dropdown-item:active {
      color: var(--bs-dropdown-link-active-color);
      text-decoration: none;
      background-color: var(--bs-dropdown-link-active-bg);
    }
    .dropdown-item.disabled, .dropdown-item:disabled {
      color: var(--bs-dropdown-link-disabled-color);
      pointer-events: none;
      background-color: transparent;
    }
    
    .dropdown-menu.show {
      display: block;
    }
    
    .dropdown-header {
      display: block;
      padding: var(--bs-dropdown-header-padding-y) var(--bs-dropdown-header-padding-x);
      margin-bottom: 0;
      font-size: 0.875rem;
      color: var(--bs-dropdown-header-color);
      white-space: nowrap;
    }
    
    .dropdown-item-text {
      display: block;
      padding: var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);
      color: var(--bs-dropdown-link-color);
    }
    
    .dropdown-menu-dark {
      --bs-dropdown-color: #dee2e6;
      --bs-dropdown-bg: #343a40;
      --bs-dropdown-border-color: var(--bs-border-color-translucent);
      --bs-dropdown-box-shadow: ;
      --bs-dropdown-link-color: #dee2e6;
      --bs-dropdown-link-hover-color: #fff;
      --bs-dropdown-divider-bg: var(--bs-border-color-translucent);
      --bs-dropdown-link-hover-bg: rgba(255, 255, 255, 0.15);
      --bs-dropdown-link-active-color: #fff;
      --bs-dropdown-link-active-bg: #0d6efd;
      --bs-dropdown-link-disabled-color: #adb5bd;
      --bs-dropdown-header-color: #adb5bd;
    }
    
    .btn-group,
    .btn-group-vertical {
      position: relative;
      display: inline-flex;
      vertical-align: middle;
    }
    .btn-group > .btn,
    .btn-group-vertical > .btn {
      position: relative;
      flex: 1 1 auto;
    }
    .btn-group > .btn-check:checked + .btn,
    .btn-group > .btn-check:focus + .btn,
    .btn-group > .btn:hover,
    .btn-group > .btn:focus,
    .btn-group > .btn:active,
    .btn-group > .btn.active,
    .btn-group-vertical > .btn-check:checked + .btn,
    .btn-group-vertical > .btn-check:focus + .btn,
    .btn-group-vertical > .btn:hover,
    .btn-group-vertical > .btn:focus,
    .btn-group-vertical > .btn:active,
    .btn-group-vertical > .btn.active {
      z-index: 1;
    }
    
    .btn-toolbar {
      display: flex;
      flex-wrap: wrap;
      justify-content: flex-start;
    }
    .btn-toolbar .input-group {
      width: auto;
    }
    
    .btn-group {
      border-radius: 0.375rem;
    }
    .btn-group > .btn:not(:first-child),
    .btn-group > .btn-group:not(:first-child) {
      margin-left: -1px;
    }
    .btn-group > .btn:not(:last-child):not(.dropdown-toggle),
    .btn-group > .btn.dropdown-toggle-split:first-child,
    .btn-group > .btn-group:not(:last-child) > .btn {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    .btn-group > .btn:nth-child(n+3),
    .btn-group > :not(.btn-check) + .btn,
    .btn-group > .btn-group:not(:first-child) > .btn {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    
    .dropdown-toggle-split {
      padding-right: 0.5625rem;
      padding-left: 0.5625rem;
    }
    .dropdown-toggle-split::after, .dropup .dropdown-toggle-split::after, .dropend .dropdown-toggle-split::after {
      margin-left: 0;
    }
    .dropstart .dropdown-toggle-split::before {
      margin-right: 0;
    }
    
    .btn-sm + .dropdown-toggle-split, .btn-group-sm > .btn + .dropdown-toggle-split {
      padding-right: 0.375rem;
      padding-left: 0.375rem;
    }
    
    .btn-lg + .dropdown-toggle-split, .btn-group-lg > .btn + .dropdown-toggle-split {
      padding-right: 0.75rem;
      padding-left: 0.75rem;
    }
    
    .btn-group-vertical {
      flex-direction: column;
      align-items: flex-start;
      justify-content: center;
    }
    .btn-group-vertical > .btn,
    .btn-group-vertical > .btn-group {
      width: 100%;
    }
    .btn-group-vertical > .btn:not(:first-child),
    .btn-group-vertical > .btn-group:not(:first-child) {
      margin-top: -1px;
    }
    .btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),
    .btn-group-vertical > .btn-group:not(:last-child) > .btn {
      border-bottom-right-radius: 0;
      border-bottom-left-radius: 0;
    }
    .btn-group-vertical > .btn ~ .btn,
    .btn-group-vertical > .btn-group:not(:first-child) > .btn {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
    
    .nav {
      --bs-nav-link-padding-x: 1rem;
      --bs-nav-link-padding-y: 0.5rem;
      --bs-nav-link-font-weight: ;
      --bs-nav-link-color: var(--bs-link-color);
      --bs-nav-link-hover-color: var(--bs-link-hover-color);
      --bs-nav-link-disabled-color: #6c757d;
      display: flex;
      flex-wrap: wrap;
      padding-left: 0;
      margin-bottom: 0;
      list-style: none;
    }
    
    .nav-link {
      display: block;
      padding: var(--bs-nav-link-padding-y) var(--bs-nav-link-padding-x);
      font-size: var(--bs-nav-link-font-size);
      font-weight: var(--bs-nav-link-font-weight);
      color: var(--bs-nav-link-color);
      text-decoration: none;
      transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .nav-link {
        transition: none;
      }
    }
    .nav-link:hover, .nav-link:focus {
      color: var(--bs-nav-link-hover-color);
    }
    .nav-link.disabled {
      color: var(--bs-nav-link-disabled-color);
      pointer-events: none;
      cursor: default;
    }
    
    .nav-tabs {
      --bs-nav-tabs-border-width: 1px;
      --bs-nav-tabs-border-color: #dee2e6;
      --bs-nav-tabs-border-radius: 0.375rem;
      --bs-nav-tabs-link-hover-border-color: #e9ecef #e9ecef #dee2e6;
      --bs-nav-tabs-link-active-color: #495057;
      --bs-nav-tabs-link-active-bg: #fff;
      --bs-nav-tabs-link-active-border-color: #dee2e6 #dee2e6 #fff;
      border-bottom: var(--bs-nav-tabs-border-width) solid var(--bs-nav-tabs-border-color);
    }
    .nav-tabs .nav-link {
      margin-bottom: calc(var(--bs-nav-tabs-border-width) * -1);
      background: none;
      border: var(--bs-nav-tabs-border-width) solid transparent;
      border-top-left-radius: var(--bs-nav-tabs-border-radius);
      border-top-right-radius: var(--bs-nav-tabs-border-radius);
    }
    .nav-tabs .nav-link:hover, .nav-tabs .nav-link:focus {
      isolation: isolate;
      border-color: var(--bs-nav-tabs-link-hover-border-color);
    }
    .nav-tabs .nav-link.disabled, .nav-tabs .nav-link:disabled {
      color: var(--bs-nav-link-disabled-color);
      background-color: transparent;
      border-color: transparent;
    }
    .nav-tabs .nav-link.active,
    .nav-tabs .nav-item.show .nav-link {
      color: var(--bs-nav-tabs-link-active-color);
      background-color: var(--bs-nav-tabs-link-active-bg);
      border-color: var(--bs-nav-tabs-link-active-border-color);
    }
    .nav-tabs .dropdown-menu {
      margin-top: calc(var(--bs-nav-tabs-border-width) * -1);
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
    
    .nav-pills {
      --bs-nav-pills-border-radius: 0.375rem;
      --bs-nav-pills-link-active-color: #fff;
      --bs-nav-pills-link-active-bg: #0d6efd;
    }
    .nav-pills .nav-link {
      background: none;
      border: 0;
      border-radius: var(--bs-nav-pills-border-radius);
    }
    .nav-pills .nav-link:disabled {
      color: var(--bs-nav-link-disabled-color);
      background-color: transparent;
      border-color: transparent;
    }
    .nav-pills .nav-link.active,
    .nav-pills .show > .nav-link {
      color: var(--bs-nav-pills-link-active-color);
      background-color: var(--bs-nav-pills-link-active-bg);
    }
    
    .nav-fill > .nav-link,
    .nav-fill .nav-item {
      flex: 1 1 auto;
      text-align: center;
    }
    
    .nav-justified > .nav-link,
    .nav-justified .nav-item {
      flex-basis: 0;
      flex-grow: 1;
      text-align: center;
    }
    
    .nav-fill .nav-item .nav-link,
    .nav-justified .nav-item .nav-link {
      width: 100%;
    }
    
    .tab-content > .tab-pane {
      display: none;
    }
    .tab-content > .active {
      display: block;
    }
    
    .navbar {
      --bs-navbar-padding-x: 0;
      --bs-navbar-padding-y: 0.5rem;
      --bs-navbar-color: rgba(0, 0, 0, 0.55);
      --bs-navbar-hover-color: rgba(0, 0, 0, 0.7);
      --bs-navbar-disabled-color: rgba(0, 0, 0, 0.3);
      --bs-navbar-active-color: rgba(0, 0, 0, 0.9);
      --bs-navbar-brand-padding-y: 0.3125rem;
      --bs-navbar-brand-margin-end: 1rem;
      --bs-navbar-brand-font-size: 1.25rem;
      --bs-navbar-brand-color: rgba(0, 0, 0, 0.9);
      --bs-navbar-brand-hover-color: rgba(0, 0, 0, 0.9);
      --bs-navbar-nav-link-padding-x: 0.5rem;
      --bs-navbar-toggler-padding-y: 0.25rem;
      --bs-navbar-toggler-padding-x: 0.75rem;
      --bs-navbar-toggler-font-size: 1.25rem;
      --bs-navbar-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%280, 0, 0, 0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
      --bs-navbar-toggler-border-color: rgba(0, 0, 0, 0.1);
      --bs-navbar-toggler-border-radius: 0.375rem;
      --bs-navbar-toggler-focus-width: 0.25rem;
      --bs-navbar-toggler-transition: box-shadow 0.15s ease-in-out;
      position: relative;
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: space-between;
      padding: var(--bs-navbar-padding-y) var(--bs-navbar-padding-x);
    }
    .navbar > .container,
    .navbar > .container-fluid,
    .navbar > .container-sm,
    .navbar > .container-md,
    .navbar > .container-lg,
    .navbar > .container-xl,
    .navbar > .container-xxl {
      display: flex;
      flex-wrap: inherit;
      align-items: center;
      justify-content: space-between;
    }
    .navbar-brand {
      padding-top: var(--bs-navbar-brand-padding-y);
      padding-bottom: var(--bs-navbar-brand-padding-y);
      margin-right: var(--bs-navbar-brand-margin-end);
      font-size: var(--bs-navbar-brand-font-size);
      color: var(--bs-navbar-brand-color);
      text-decoration: none;
      white-space: nowrap;
    }
    .navbar-brand:hover, .navbar-brand:focus {
      color: var(--bs-navbar-brand-hover-color);
    }
    
    .navbar-nav {
      --bs-nav-link-padding-x: 0;
      --bs-nav-link-padding-y: 0.5rem;
      --bs-nav-link-font-weight: ;
      --bs-nav-link-color: var(--bs-navbar-color);
      --bs-nav-link-hover-color: var(--bs-navbar-hover-color);
      --bs-nav-link-disabled-color: var(--bs-navbar-disabled-color);
      display: flex;
      flex-direction: column;
      padding-left: 0;
      margin-bottom: 0;
      list-style: none;
    }
    .navbar-nav .show > .nav-link,
    .navbar-nav .nav-link.active {
      color: var(--bs-navbar-active-color);
    }
    .navbar-nav .dropdown-menu {
      position: static;
    }
    
    .navbar-text {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      color: var(--bs-navbar-color);
    }
    .navbar-text a,
    .navbar-text a:hover,
    .navbar-text a:focus {
      color: var(--bs-navbar-active-color);
    }
    
    .navbar-collapse {
      flex-basis: 100%;
      flex-grow: 1;
      align-items: center;
    }
    
    .navbar-toggler {
      padding: var(--bs-navbar-toggler-padding-y) var(--bs-navbar-toggler-padding-x);
      font-size: var(--bs-navbar-toggler-font-size);
      line-height: 1;
      color: var(--bs-navbar-color);
      background-color: transparent;
      border: var(--bs-border-width) solid var(--bs-navbar-toggler-border-color);
      border-radius: var(--bs-navbar-toggler-border-radius);
      transition: var(--bs-navbar-toggler-transition);
    }
    @media (prefers-reduced-motion: reduce) {
      .navbar-toggler {
        transition: none;
      }
    }
    .navbar-toggler:hover {
      text-decoration: none;
    }
    .navbar-toggler:focus {
      text-decoration: none;
      outline: 0;
      box-shadow: 0 0 0 var(--bs-navbar-toggler-focus-width);
    }
    
    .navbar-toggler-icon {
      display: inline-block;
      width: 1.5em;
      height: 1.5em;
      vertical-align: middle;
      background-image: var(--bs-navbar-toggler-icon-bg);
      background-repeat: no-repeat;
      background-position: center;
      background-size: 100%;
    }
    
    .navbar-nav-scroll {
      max-height: var(--bs-scroll-height, 75vh);
      overflow-y: auto;
    }
    
    @media (min-width: 576px) {
      .navbar-expand-sm {
        flex-wrap: nowrap;
        justify-content: flex-start;
      }
      .navbar-expand-sm .navbar-nav {
        flex-direction: row;
      }
      .navbar-expand-sm .navbar-nav .dropdown-menu {
        position: absolute;
      }
      .navbar-expand-sm .navbar-nav .nav-link {
        padding-right: var(--bs-navbar-nav-link-padding-x);
        padding-left: var(--bs-navbar-nav-link-padding-x);
      }
      .navbar-expand-sm .navbar-nav-scroll {
        overflow: visible;
      }
      .navbar-expand-sm .navbar-collapse {
        display: flex !important;
        flex-basis: auto;
      }
      .navbar-expand-sm .navbar-toggler {
        display: none;
      }
      .navbar-expand-sm .offcanvas {
        position: static;
        z-index: auto;
        flex-grow: 1;
        width: auto !important;
        height: auto !important;
        visibility: visible !important;
        background-color: transparent !important;
        border: 0 !important;
        transform: none !important;
        transition: none;
      }
      .navbar-expand-sm .offcanvas .offcanvas-header {
        display: none;
      }
      .navbar-expand-sm .offcanvas .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
      }
    }
    @media (min-width: 768px) {
      .navbar-expand-md {
        flex-wrap: nowrap;
        justify-content: flex-start;
      }
      .navbar-expand-md .navbar-nav {
        flex-direction: row;
      }
      .navbar-expand-md .navbar-nav .dropdown-menu {
        position: absolute;
      }
      .navbar-expand-md .navbar-nav .nav-link {
        padding-right: var(--bs-navbar-nav-link-padding-x);
        padding-left: var(--bs-navbar-nav-link-padding-x);
      }
      .navbar-expand-md .navbar-nav-scroll {
        overflow: visible;
      }
      .navbar-expand-md .navbar-collapse {
        display: flex !important;
        flex-basis: auto;
      }
      .navbar-expand-md .navbar-toggler {
        display: none;
      }
      .navbar-expand-md .offcanvas {
        position: static;
        z-index: auto;
        flex-grow: 1;
        width: auto !important;
        height: auto !important;
        visibility: visible !important;
        background-color: transparent !important;
        border: 0 !important;
        transform: none !important;
        transition: none;
      }
      .navbar-expand-md .offcanvas .offcanvas-header {
        display: none;
      }
      .navbar-expand-md .offcanvas .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
      }
    }
    @media (min-width: 992px) {
      .navbar-expand-lg {
        flex-wrap: nowrap;
        justify-content: flex-start;
      }
      .navbar-expand-lg .navbar-nav {
        flex-direction: row;
      }
      .navbar-expand-lg .navbar-nav .dropdown-menu {
        position: absolute;
      }
      .navbar-expand-lg .navbar-nav .nav-link {
        padding-right: var(--bs-navbar-nav-link-padding-x);
        padding-left: var(--bs-navbar-nav-link-padding-x);
      }
      .navbar-expand-lg .navbar-nav-scroll {
        overflow: visible;
      }
      .navbar-expand-lg .navbar-collapse {
        display: flex !important;
        flex-basis: auto;
      }
      .navbar-expand-lg .navbar-toggler {
        display: none;
      }
      .navbar-expand-lg .offcanvas {
        position: static;
        z-index: auto;
        flex-grow: 1;
        width: auto !important;
        height: auto !important;
        visibility: visible !important;
        background-color: transparent !important;
        border: 0 !important;
        transform: none !important;
        transition: none;
      }
      .navbar-expand-lg .offcanvas .offcanvas-header {
        display: none;
      }
      .navbar-expand-lg .offcanvas .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
      }
    }
    @media (min-width: 1200px) {
      .navbar-expand-xl {
        flex-wrap: nowrap;
        justify-content: flex-start;
      }
      .navbar-expand-xl .navbar-nav {
        flex-direction: row;
      }
      .navbar-expand-xl .navbar-nav .dropdown-menu {
        position: absolute;
      }
      .navbar-expand-xl .navbar-nav .nav-link {
        padding-right: var(--bs-navbar-nav-link-padding-x);
        padding-left: var(--bs-navbar-nav-link-padding-x);
      }
      .navbar-expand-xl .navbar-nav-scroll {
        overflow: visible;
      }
      .navbar-expand-xl .navbar-collapse {
        display: flex !important;
        flex-basis: auto;
      }
      .navbar-expand-xl .navbar-toggler {
        display: none;
      }
      .navbar-expand-xl .offcanvas {
        position: static;
        z-index: auto;
        flex-grow: 1;
        width: auto !important;
        height: auto !important;
        visibility: visible !important;
        background-color: transparent !important;
        border: 0 !important;
        transform: none !important;
        transition: none;
      }
      .navbar-expand-xl .offcanvas .offcanvas-header {
        display: none;
      }
      .navbar-expand-xl .offcanvas .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
      }
    }
    @media (min-width: 1400px) {
      .navbar-expand-xxl {
        flex-wrap: nowrap;
        justify-content: flex-start;
      }
      .navbar-expand-xxl .navbar-nav {
        flex-direction: row;
      }
      .navbar-expand-xxl .navbar-nav .dropdown-menu {
        position: absolute;
      }
      .navbar-expand-xxl .navbar-nav .nav-link {
        padding-right: var(--bs-navbar-nav-link-padding-x);
        padding-left: var(--bs-navbar-nav-link-padding-x);
      }
      .navbar-expand-xxl .navbar-nav-scroll {
        overflow: visible;
      }
      .navbar-expand-xxl .navbar-collapse {
        display: flex !important;
        flex-basis: auto;
      }
      .navbar-expand-xxl .navbar-toggler {
        display: none;
      }
      .navbar-expand-xxl .offcanvas {
        position: static;
        z-index: auto;
        flex-grow: 1;
        width: auto !important;
        height: auto !important;
        visibility: visible !important;
        background-color: transparent !important;
        border: 0 !important;
        transform: none !important;
        transition: none;
      }
      .navbar-expand-xxl .offcanvas .offcanvas-header {
        display: none;
      }
      .navbar-expand-xxl .offcanvas .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
      }
    }
    .navbar-expand {
      flex-wrap: nowrap;
      justify-content: flex-start;
    }
    .navbar-expand .navbar-nav {
      flex-direction: row;
    }
    .navbar-expand .navbar-nav .dropdown-menu {
      position: absolute;
    }
    .navbar-expand .navbar-nav .nav-link {
      padding-right: var(--bs-navbar-nav-link-padding-x);
      padding-left: var(--bs-navbar-nav-link-padding-x);
    }
    .navbar-expand .navbar-nav-scroll {
      overflow: visible;
    }
    .navbar-expand .navbar-collapse {
      display: flex !important;
      flex-basis: auto;
    }
    .navbar-expand .navbar-toggler {
      display: none;
    }
    .navbar-expand .offcanvas {
      position: static;
      z-index: auto;
      flex-grow: 1;
      width: auto !important;
      height: auto !important;
      visibility: visible !important;
      background-color: transparent !important;
      border: 0 !important;
      transform: none !important;
      transition: none;
    }
    .navbar-expand .offcanvas .offcanvas-header {
      display: none;
    }
    .navbar-expand .offcanvas .offcanvas-body {
      display: flex;
      flex-grow: 0;
      padding: 0;
      overflow-y: visible;
    }
    
    .navbar-dark {
      --bs-navbar-color: rgba(255, 255, 255, 0.55);
      --bs-navbar-hover-color: rgba(255, 255, 255, 0.75);
      --bs-navbar-disabled-color: rgba(255, 255, 255, 0.25);
      --bs-navbar-active-color: #fff;
      --bs-navbar-brand-color: #fff;
      --bs-navbar-brand-hover-color: #fff;
      --bs-navbar-toggler-border-color: rgba(255, 255, 255, 0.1);
      --bs-navbar-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
    }
    
    .card {
      --bs-card-spacer-y: 1rem;
      --bs-card-spacer-x: 1rem;
      --bs-card-title-spacer-y: 0.5rem;
      --bs-card-border-width: 1px;
      --bs-card-border-color: var(--bs-border-color-translucent);
      --bs-card-border-radius: 0.375rem;
      --bs-card-box-shadow: ;
      --bs-card-inner-border-radius: calc(0.375rem - 1px);
      --bs-card-cap-padding-y: 0.5rem;
      --bs-card-cap-padding-x: 1rem;
      --bs-card-cap-bg: rgba(0, 0, 0, 0.03);
      --bs-card-cap-color: ;
      --bs-card-height: ;
      --bs-card-color: ;
      --bs-card-bg: #fff;
      --bs-card-img-overlay-padding: 1rem;
      --bs-card-group-margin: 0.75rem;
      position: relative;
      display: flex;
      flex-direction: column;
      min-width: 0;
      height: var(--bs-card-height);
      word-wrap: break-word;
      background-color: var(--bs-card-bg);
      background-clip: border-box;
      border: var(--bs-card-border-width) solid var(--bs-card-border-color);
      border-radius: var(--bs-card-border-radius);
    }
    .card > hr {
      margin-right: 0;
      margin-left: 0;
    }
    .card > .list-group {
      border-top: inherit;
      border-bottom: inherit;
    }
    .card > .list-group:first-child {
      border-top-width: 0;
      border-top-left-radius: var(--bs-card-inner-border-radius);
      border-top-right-radius: var(--bs-card-inner-border-radius);
    }
    .card > .list-group:last-child {
      border-bottom-width: 0;
      border-bottom-right-radius: var(--bs-card-inner-border-radius);
      border-bottom-left-radius: var(--bs-card-inner-border-radius);
    }
    .card > .card-header + .list-group,
    .card > .list-group + .card-footer {
      border-top: 0;
    }
    
    .card-body {
      flex: 1 1 auto;
      padding: var(--bs-card-spacer-y) var(--bs-card-spacer-x);
      color: var(--bs-card-color);
    }
    
    .card-title {
      margin-bottom: var(--bs-card-title-spacer-y);
    }
    
    .card-subtitle {
      margin-top: calc(-0.5 * var(--bs-card-title-spacer-y));
      margin-bottom: 0;
    }
    
    .card-text:last-child {
      margin-bottom: 0;
    }
    
    .card-link + .card-link {
      margin-left: var(--bs-card-spacer-x);
    }
    
    .card-header {
      padding: var(--bs-card-cap-padding-y) var(--bs-card-cap-padding-x);
      margin-bottom: 0;
      color: var(--bs-card-cap-color);
      background-color: var(--bs-card-cap-bg);
      border-bottom: var(--bs-card-border-width) solid var(--bs-card-border-color);
    }
    .card-header:first-child {
      border-radius: var(--bs-card-inner-border-radius) var(--bs-card-inner-border-radius) 0 0;
    }
    
    .card-footer {
      padding: var(--bs-card-cap-padding-y) var(--bs-card-cap-padding-x);
      color: var(--bs-card-cap-color);
      background-color: var(--bs-card-cap-bg);
      border-top: var(--bs-card-border-width) solid var(--bs-card-border-color);
    }
    .card-footer:last-child {
      border-radius: 0 0 var(--bs-card-inner-border-radius) var(--bs-card-inner-border-radius);
    }
    
    .card-header-tabs {
      margin-right: calc(-0.5 * var(--bs-card-cap-padding-x));
      margin-bottom: calc(-1 * var(--bs-card-cap-padding-y));
      margin-left: calc(-0.5 * var(--bs-card-cap-padding-x));
      border-bottom: 0;
    }
    .card-header-tabs .nav-link.active {
      background-color: var(--bs-card-bg);
      border-bottom-color: var(--bs-card-bg);
    }
    
    .card-header-pills {
      margin-right: calc(-0.5 * var(--bs-card-cap-padding-x));
      margin-left: calc(-0.5 * var(--bs-card-cap-padding-x));
    }
    
    .card-img-overlay {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      padding: var(--bs-card-img-overlay-padding);
      border-radius: var(--bs-card-inner-border-radius);
    }
    
    .card-img,
    .card-img-top,
    .card-img-bottom {
      width: 100%;
    }
    
    .card-img,
    .card-img-top {
      border-top-left-radius: var(--bs-card-inner-border-radius);
      border-top-right-radius: var(--bs-card-inner-border-radius);
    }
    
    .card-img,
    .card-img-bottom {
      border-bottom-right-radius: var(--bs-card-inner-border-radius);
      border-bottom-left-radius: var(--bs-card-inner-border-radius);
    }
    
    .card-group > .card {
      margin-bottom: var(--bs-card-group-margin);
    }
    @media (min-width: 576px) {
      .card-group {
        display: flex;
        flex-flow: row wrap;
      }
      .card-group > .card {
        flex: 1 0 0%;
        margin-bottom: 0;
      }
      .card-group > .card + .card {
        margin-left: 0;
        border-left: 0;
      }
      .card-group > .card:not(:last-child) {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
      .card-group > .card:not(:last-child) .card-img-top,
    .card-group > .card:not(:last-child) .card-header {
        border-top-right-radius: 0;
      }
      .card-group > .card:not(:last-child) .card-img-bottom,
    .card-group > .card:not(:last-child) .card-footer {
        border-bottom-right-radius: 0;
      }
      .card-group > .card:not(:first-child) {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
      .card-group > .card:not(:first-child) .card-img-top,
    .card-group > .card:not(:first-child) .card-header {
        border-top-left-radius: 0;
      }
      .card-group > .card:not(:first-child) .card-img-bottom,
    .card-group > .card:not(:first-child) .card-footer {
        border-bottom-left-radius: 0;
      }
    }
    
    .accordion {
      --bs-accordion-color: #000;
      --bs-accordion-bg: #fff;
      --bs-accordion-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, border-radius 0.15s ease;
      --bs-accordion-border-color: var(--bs-border-color);
      --bs-accordion-border-width: 1px;
      --bs-accordion-border-radius: 0.375rem;
      --bs-accordion-inner-border-radius: calc(0.375rem - 1px);
      --bs-accordion-btn-padding-x: 1.25rem;
      --bs-accordion-btn-padding-y: 1rem;
      --bs-accordion-btn-color: var(--bs-body-color);
      --bs-accordion-btn-bg: var(--bs-accordion-bg);
      --bs-accordion-btn-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='var%28--bs-body-color%29'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
      --bs-accordion-btn-icon-width: 1.25rem;
      --bs-accordion-btn-icon-transform: rotate(-180deg);
      --bs-accordion-btn-icon-transition: transform 0.2s ease-in-out;
      --bs-accordion-btn-active-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%230c63e4'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
      --bs-accordion-btn-focus-border-color: #86b7fe;
      --bs-accordion-btn-focus-box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
      --bs-accordion-body-padding-x: 1.25rem;
      --bs-accordion-body-padding-y: 1rem;
      --bs-accordion-active-color: #0c63e4;
      --bs-accordion-active-bg: #e7f1ff;
    }
    
    .accordion-button {
      position: relative;
      display: flex;
      align-items: center;
      width: 100%;
      padding: var(--bs-accordion-btn-padding-y) var(--bs-accordion-btn-padding-x);
      font-size: 1rem;
      color: var(--bs-accordion-btn-color);
      text-align: left;
      background-color: var(--bs-accordion-btn-bg);
      border: 0;
      border-radius: 0;
      overflow-anchor: none;
      transition: var(--bs-accordion-transition);
    }
    @media (prefers-reduced-motion: reduce) {
      .accordion-button {
        transition: none;
      }
    }
    .accordion-button:not(.collapsed) {
      color: var(--bs-accordion-active-color);
      background-color: var(--bs-accordion-active-bg);
      box-shadow: inset 0 calc(var(--bs-accordion-border-width) * -1) 0 var(--bs-accordion-border-color);
    }
    .accordion-button:not(.collapsed)::after {
      background-image: var(--bs-accordion-btn-active-icon);
      transform: var(--bs-accordion-btn-icon-transform);
    }
    .accordion-button::after {
      flex-shrink: 0;
      width: var(--bs-accordion-btn-icon-width);
      height: var(--bs-accordion-btn-icon-width);
      margin-left: auto;
      content: "";
      background-image: var(--bs-accordion-btn-icon);
      background-repeat: no-repeat;
      background-size: var(--bs-accordion-btn-icon-width);
      transition: var(--bs-accordion-btn-icon-transition);
    }
    @media (prefers-reduced-motion: reduce) {
      .accordion-button::after {
        transition: none;
      }
    }
    .accordion-button:hover {
      z-index: 2;
    }
    .accordion-button:focus {
      z-index: 3;
      border-color: var(--bs-accordion-btn-focus-border-color);
      outline: 0;
      box-shadow: var(--bs-accordion-btn-focus-box-shadow);
    }
    
    .accordion-header {
      margin-bottom: 0;
    }
    
    .accordion-item {
      color: var(--bs-accordion-color);
      background-color: var(--bs-accordion-bg);
      border: var(--bs-accordion-border-width) solid var(--bs-accordion-border-color);
    }
    .accordion-item:first-of-type {
      border-top-left-radius: var(--bs-accordion-border-radius);
      border-top-right-radius: var(--bs-accordion-border-radius);
    }
    .accordion-item:first-of-type .accordion-button {
      border-top-left-radius: var(--bs-accordion-inner-border-radius);
      border-top-right-radius: var(--bs-accordion-inner-border-radius);
    }
    .accordion-item:not(:first-of-type) {
      border-top: 0;
    }
    .accordion-item:last-of-type {
      border-bottom-right-radius: var(--bs-accordion-border-radius);
      border-bottom-left-radius: var(--bs-accordion-border-radius);
    }
    .accordion-item:last-of-type .accordion-button.collapsed {
      border-bottom-right-radius: var(--bs-accordion-inner-border-radius);
      border-bottom-left-radius: var(--bs-accordion-inner-border-radius);
    }
    .accordion-item:last-of-type .accordion-collapse {
      border-bottom-right-radius: var(--bs-accordion-border-radius);
      border-bottom-left-radius: var(--bs-accordion-border-radius);
    }
    
    .accordion-body {
      padding: var(--bs-accordion-body-padding-y) var(--bs-accordion-body-padding-x);
    }
    
    .accordion-flush .accordion-collapse {
      border-width: 0;
    }
    .accordion-flush .accordion-item {
      border-right: 0;
      border-left: 0;
      border-radius: 0;
    }
    .accordion-flush .accordion-item:first-child {
      border-top: 0;
    }
    .accordion-flush .accordion-item:last-child {
      border-bottom: 0;
    }
    .accordion-flush .accordion-item .accordion-button {
      border-radius: 0;
    }
    
    .breadcrumb {
      --bs-breadcrumb-padding-x: 0;
      --bs-breadcrumb-padding-y: 0;
      --bs-breadcrumb-margin-bottom: 1rem;
      --bs-breadcrumb-bg: ;
      --bs-breadcrumb-border-radius: ;
      --bs-breadcrumb-divider-color: #6c757d;
      --bs-breadcrumb-item-padding-x: 0.5rem;
      --bs-breadcrumb-item-active-color: #6c757d;
      display: flex;
      flex-wrap: wrap;
      padding: var(--bs-breadcrumb-padding-y) var(--bs-breadcrumb-padding-x);
      margin-bottom: var(--bs-breadcrumb-margin-bottom);
      font-size: var(--bs-breadcrumb-font-size);
      list-style: none;
      background-color: var(--bs-breadcrumb-bg);
      border-radius: var(--bs-breadcrumb-border-radius);
    }
    
    .breadcrumb-item + .breadcrumb-item {
      padding-left: var(--bs-breadcrumb-item-padding-x);
    }
    .breadcrumb-item + .breadcrumb-item::before {
      float: left;
      padding-right: var(--bs-breadcrumb-item-padding-x);
      color: var(--bs-breadcrumb-divider-color);
      content: var(--bs-breadcrumb-divider, "/") /* rtl: var(--bs-breadcrumb-divider, "/") */;
    }
    .breadcrumb-item.active {
      color: var(--bs-breadcrumb-item-active-color);
    }
    
    .pagination {
      --bs-pagination-padding-x: 0.75rem;
      --bs-pagination-padding-y: 0.375rem;
      --bs-pagination-font-size: 1rem;
      --bs-pagination-color: var(--bs-link-color);
      --bs-pagination-bg: #fff;
      --bs-pagination-border-width: 1px;
      --bs-pagination-border-color: #dee2e6;
      --bs-pagination-border-radius: 0.375rem;
      --bs-pagination-hover-color: var(--bs-link-hover-color);
      --bs-pagination-hover-bg: #e9ecef;
      --bs-pagination-hover-border-color: #dee2e6;
      --bs-pagination-focus-color: var(--bs-link-hover-color);
      --bs-pagination-focus-bg: #e9ecef;
      --bs-pagination-focus-box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
      --bs-pagination-active-color: #fff;
      --bs-pagination-active-bg: #0d6efd;
      --bs-pagination-active-border-color: #0d6efd;
      --bs-pagination-disabled-color: #6c757d;
      --bs-pagination-disabled-bg: #fff;
      --bs-pagination-disabled-border-color: #dee2e6;
      display: flex;
      padding-left: 0;
      list-style: none;
    }
    
    .page-link {
      position: relative;
      display: block;
      padding: var(--bs-pagination-padding-y) var(--bs-pagination-padding-x);
      font-size: var(--bs-pagination-font-size);
      color: var(--bs-pagination-color);
      text-decoration: none;
      background-color: var(--bs-pagination-bg);
      border: var(--bs-pagination-border-width) solid var(--bs-pagination-border-color);
      transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .page-link {
        transition: none;
      }
    }
    .page-link:hover {
      z-index: 2;
      color: var(--bs-pagination-hover-color);
      background-color: var(--bs-pagination-hover-bg);
      border-color: var(--bs-pagination-hover-border-color);
    }
    .page-link:focus {
      z-index: 3;
      color: var(--bs-pagination-focus-color);
      background-color: var(--bs-pagination-focus-bg);
      outline: 0;
      box-shadow: var(--bs-pagination-focus-box-shadow);
    }
    .page-link.active, .active > .page-link {
      z-index: 3;
      color: var(--bs-pagination-active-color);
      background-color: var(--bs-pagination-active-bg);
      border-color: var(--bs-pagination-active-border-color);
    }
    .page-link.disabled, .disabled > .page-link {
      color: var(--bs-pagination-disabled-color);
      pointer-events: none;
      background-color: var(--bs-pagination-disabled-bg);
      border-color: var(--bs-pagination-disabled-border-color);
    }
    
    .page-item:not(:first-child) .page-link {
      margin-left: -1px;
    }
    .page-item:first-child .page-link {
      border-top-left-radius: var(--bs-pagination-border-radius);
      border-bottom-left-radius: var(--bs-pagination-border-radius);
    }
    .page-item:last-child .page-link {
      border-top-right-radius: var(--bs-pagination-border-radius);
      border-bottom-right-radius: var(--bs-pagination-border-radius);
    }
    
    .pagination-lg {
      --bs-pagination-padding-x: 1.5rem;
      --bs-pagination-padding-y: 0.75rem;
      --bs-pagination-font-size: 1.25rem;
      --bs-pagination-border-radius: 0.5rem;
    }
    
    .pagination-sm {
      --bs-pagination-padding-x: 0.5rem;
      --bs-pagination-padding-y: 0.25rem;
      --bs-pagination-font-size: 0.875rem;
      --bs-pagination-border-radius: 0.25rem;
    }
    
    .badge {
      --bs-badge-padding-x: 0.65em;
      --bs-badge-padding-y: 0.35em;
      --bs-badge-font-size: 0.75em;
      --bs-badge-font-weight: 700;
      --bs-badge-color: #fff;
      --bs-badge-border-radius: 0.375rem;
      display: inline-block;
      padding: var(--bs-badge-padding-y) var(--bs-badge-padding-x);
      font-size: var(--bs-badge-font-size);
      font-weight: var(--bs-badge-font-weight);
      line-height: 1;
      color: var(--bs-badge-color);
      text-align: center;
      white-space: nowrap;
      vertical-align: baseline;
      border-radius: var(--bs-badge-border-radius);
    }
    .badge:empty {
      display: none;
    }
    
    .btn .badge {
      position: relative;
      top: -1px;
    }
    
    .alert {
      --bs-alert-bg: transparent;
      --bs-alert-padding-x: 1rem;
      --bs-alert-padding-y: 1rem;
      --bs-alert-margin-bottom: 1rem;
      --bs-alert-color: inherit;
      --bs-alert-border-color: transparent;
      --bs-alert-border: 1px solid var(--bs-alert-border-color);
      --bs-alert-border-radius: 0.375rem;
      position: relative;
      padding: var(--bs-alert-padding-y) var(--bs-alert-padding-x);
      margin-bottom: var(--bs-alert-margin-bottom);
      color: var(--bs-alert-color);
      background-color: var(--bs-alert-bg);
      border: var(--bs-alert-border);
      border-radius: var(--bs-alert-border-radius);
    }
    
    .alert-heading {
      color: inherit;
    }
    
    .alert-link {
      font-weight: 700;
    }
    
    .alert-dismissible {
      padding-right: 3rem;
    }
    .alert-dismissible .btn-close {
      position: absolute;
      top: 0;
      right: 0;
      z-index: 2;
      padding: 1.25rem 1rem;
    }
    
    .alert-primary {
      --bs-alert-color: #084298;
      --bs-alert-bg: #cfe2ff;
      --bs-alert-border-color: #b6d4fe;
    }
    .alert-primary .alert-link {
      color: #06357a;
    }
    
    .alert-secondary {
      --bs-alert-color: #41464b;
      --bs-alert-bg: #e2e3e5;
      --bs-alert-border-color: #d3d6d8;
    }
    .alert-secondary .alert-link {
      color: #34383c;
    }
    
    .alert-success {
      --bs-alert-color: #0f5132;
      --bs-alert-bg: #d1e7dd;
      --bs-alert-border-color: #badbcc;
    }
    .alert-success .alert-link {
      color: #0c4128;
    }
    
    .alert-info {
      --bs-alert-color: #055160;
      --bs-alert-bg: #cff4fc;
      --bs-alert-border-color: #b6effb;
    }
    .alert-info .alert-link {
      color: #04414d;
    }
    
    .alert-warning {
      --bs-alert-color: #664d03;
      --bs-alert-bg: #fff3cd;
      --bs-alert-border-color: #ffecb5;
    }
    .alert-warning .alert-link {
      color: #523e02;
    }
    
    .alert-danger {
      --bs-alert-color: #842029;
      --bs-alert-bg: #f8d7da;
      --bs-alert-border-color: #f5c2c7;
    }
    .alert-danger .alert-link {
      color: #6a1a21;
    }
    
    .alert-light {
      --bs-alert-color: #636464;
      --bs-alert-bg: #fefefe;
      --bs-alert-border-color: #fdfdfe;
    }
    .alert-light .alert-link {
      color: #4f5050;
    }
    
    .alert-dark {
      --bs-alert-color: #141619;
      --bs-alert-bg: #d3d3d4;
      --bs-alert-border-color: #bcbebf;
    }
    .alert-dark .alert-link {
      color: #101214;
    }
    
    @-webkit-keyframes progress-bar-stripes {
      0% {
        background-position-x: 1rem;
      }
    }
    
    @keyframes progress-bar-stripes {
      0% {
        background-position-x: 1rem;
      }
    }
    .progress {
      --bs-progress-height: 1rem;
      --bs-progress-font-size: 0.75rem;
      --bs-progress-bg: #e9ecef;
      --bs-progress-border-radius: 0.375rem;
      --bs-progress-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.075);
      --bs-progress-bar-color: #fff;
      --bs-progress-bar-bg: #0d6efd;
      --bs-progress-bar-transition: width 0.6s ease;
      display: flex;
      height: var(--bs-progress-height);
      overflow: hidden;
      font-size: var(--bs-progress-font-size);
      background-color: var(--bs-progress-bg);
      border-radius: var(--bs-progress-border-radius);
    }
    
    .progress-bar {
      display: flex;
      flex-direction: column;
      justify-content: center;
      overflow: hidden;
      color: var(--bs-progress-bar-color);
      text-align: center;
      white-space: nowrap;
      background-color: var(--bs-progress-bar-bg);
      transition: var(--bs-progress-bar-transition);
    }
    @media (prefers-reduced-motion: reduce) {
      .progress-bar {
        transition: none;
      }
    }
    
    .progress-bar-striped {
      background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
      background-size: var(--bs-progress-height) var(--bs-progress-height);
    }
    
    .progress-bar-animated {
      -webkit-animation: 1s linear infinite progress-bar-stripes;
      animation: 1s linear infinite progress-bar-stripes;
    }
    @media (prefers-reduced-motion: reduce) {
      .progress-bar-animated {
        -webkit-animation: none;
        animation: none;
      }
    }
    
    .list-group {
      --bs-list-group-color: #212529;
      --bs-list-group-bg: #fff;
      --bs-list-group-border-color: rgba(0, 0, 0, 0.125);
      --bs-list-group-border-width: 1px;
      --bs-list-group-border-radius: 0.375rem;
      --bs-list-group-item-padding-x: 1rem;
      --bs-list-group-item-padding-y: 0.5rem;
      --bs-list-group-action-color: #495057;
      --bs-list-group-action-hover-color: #495057;
      --bs-list-group-action-hover-bg: #f8f9fa;
      --bs-list-group-action-active-color: #212529;
      --bs-list-group-action-active-bg: #e9ecef;
      --bs-list-group-disabled-color: #6c757d;
      --bs-list-group-disabled-bg: #fff;
      --bs-list-group-active-color: #fff;
      --bs-list-group-active-bg: #0d6efd;
      --bs-list-group-active-border-color: #0d6efd;
      display: flex;
      flex-direction: column;
      padding-left: 0;
      margin-bottom: 0;
      border-radius: var(--bs-list-group-border-radius);
    }
    
    .list-group-numbered {
      list-style-type: none;
      counter-reset: section;
    }
    .list-group-numbered > .list-group-item::before {
      content: counters(section, ".") ". ";
      counter-increment: section;
    }
    
    .list-group-item-action {
      width: 100%;
      color: var(--bs-list-group-action-color);
      text-align: inherit;
    }
    .list-group-item-action:hover, .list-group-item-action:focus {
      z-index: 1;
      color: var(--bs-list-group-action-hover-color);
      text-decoration: none;
      background-color: var(--bs-list-group-action-hover-bg);
    }
    .list-group-item-action:active {
      color: var(--bs-list-group-action-active-color);
      background-color: var(--bs-list-group-action-active-bg);
    }
    
    .list-group-item {
      position: relative;
      display: block;
      padding: var(--bs-list-group-item-padding-y) var(--bs-list-group-item-padding-x);
      color: var(--bs-list-group-color);
      text-decoration: none;
      background-color: var(--bs-list-group-bg);
      border: var(--bs-list-group-border-width) solid var(--bs-list-group-border-color);
    }
    .list-group-item:first-child {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
    }
    .list-group-item:last-child {
      border-bottom-right-radius: inherit;
      border-bottom-left-radius: inherit;
    }
    .list-group-item.disabled, .list-group-item:disabled {
      color: var(--bs-list-group-disabled-color);
      pointer-events: none;
      background-color: var(--bs-list-group-disabled-bg);
    }
    .list-group-item.active {
      z-index: 2;
      color: var(--bs-list-group-active-color);
      background-color: var(--bs-list-group-active-bg);
      border-color: var(--bs-list-group-active-border-color);
    }
    .list-group-item + .list-group-item {
      border-top-width: 0;
    }
    .list-group-item + .list-group-item.active {
      margin-top: calc(var(--bs-list-group-border-width) * -1);
      border-top-width: var(--bs-list-group-border-width);
    }
    
    .list-group-horizontal {
      flex-direction: row;
    }
    .list-group-horizontal > .list-group-item:first-child {
      border-bottom-left-radius: var(--bs-list-group-border-radius);
      border-top-right-radius: 0;
    }
    .list-group-horizontal > .list-group-item:last-child {
      border-top-right-radius: var(--bs-list-group-border-radius);
      border-bottom-left-radius: 0;
    }
    .list-group-horizontal > .list-group-item.active {
      margin-top: 0;
    }
    .list-group-horizontal > .list-group-item + .list-group-item {
      border-top-width: var(--bs-list-group-border-width);
      border-left-width: 0;
    }
    .list-group-horizontal > .list-group-item + .list-group-item.active {
      margin-left: calc(var(--bs-list-group-border-width) * -1);
      border-left-width: var(--bs-list-group-border-width);
    }
    
    @media (min-width: 576px) {
      .list-group-horizontal-sm {
        flex-direction: row;
      }
      .list-group-horizontal-sm > .list-group-item:first-child {
        border-bottom-left-radius: var(--bs-list-group-border-radius);
        border-top-right-radius: 0;
      }
      .list-group-horizontal-sm > .list-group-item:last-child {
        border-top-right-radius: var(--bs-list-group-border-radius);
        border-bottom-left-radius: 0;
      }
      .list-group-horizontal-sm > .list-group-item.active {
        margin-top: 0;
      }
      .list-group-horizontal-sm > .list-group-item + .list-group-item {
        border-top-width: var(--bs-list-group-border-width);
        border-left-width: 0;
      }
      .list-group-horizontal-sm > .list-group-item + .list-group-item.active {
        margin-left: calc(var(--bs-list-group-border-width) * -1);
        border-left-width: var(--bs-list-group-border-width);
      }
    }
    @media (min-width: 768px) {
      .list-group-horizontal-md {
        flex-direction: row;
      }
      .list-group-horizontal-md > .list-group-item:first-child {
        border-bottom-left-radius: var(--bs-list-group-border-radius);
        border-top-right-radius: 0;
      }
      .list-group-horizontal-md > .list-group-item:last-child {
        border-top-right-radius: var(--bs-list-group-border-radius);
        border-bottom-left-radius: 0;
      }
      .list-group-horizontal-md > .list-group-item.active {
        margin-top: 0;
      }
      .list-group-horizontal-md > .list-group-item + .list-group-item {
        border-top-width: var(--bs-list-group-border-width);
        border-left-width: 0;
      }
      .list-group-horizontal-md > .list-group-item + .list-group-item.active {
        margin-left: calc(var(--bs-list-group-border-width) * -1);
        border-left-width: var(--bs-list-group-border-width);
      }
    }
    @media (min-width: 992px) {
      .list-group-horizontal-lg {
        flex-direction: row;
      }
      .list-group-horizontal-lg > .list-group-item:first-child {
        border-bottom-left-radius: var(--bs-list-group-border-radius);
        border-top-right-radius: 0;
      }
      .list-group-horizontal-lg > .list-group-item:last-child {
        border-top-right-radius: var(--bs-list-group-border-radius);
        border-bottom-left-radius: 0;
      }
      .list-group-horizontal-lg > .list-group-item.active {
        margin-top: 0;
      }
      .list-group-horizontal-lg > .list-group-item + .list-group-item {
        border-top-width: var(--bs-list-group-border-width);
        border-left-width: 0;
      }
      .list-group-horizontal-lg > .list-group-item + .list-group-item.active {
        margin-left: calc(var(--bs-list-group-border-width) * -1);
        border-left-width: var(--bs-list-group-border-width);
      }
    }
    @media (min-width: 1200px) {
      .list-group-horizontal-xl {
        flex-direction: row;
      }
      .list-group-horizontal-xl > .list-group-item:first-child {
        border-bottom-left-radius: var(--bs-list-group-border-radius);
        border-top-right-radius: 0;
      }
      .list-group-horizontal-xl > .list-group-item:last-child {
        border-top-right-radius: var(--bs-list-group-border-radius);
        border-bottom-left-radius: 0;
      }
      .list-group-horizontal-xl > .list-group-item.active {
        margin-top: 0;
      }
      .list-group-horizontal-xl > .list-group-item + .list-group-item {
        border-top-width: var(--bs-list-group-border-width);
        border-left-width: 0;
      }
      .list-group-horizontal-xl > .list-group-item + .list-group-item.active {
        margin-left: calc(var(--bs-list-group-border-width) * -1);
        border-left-width: var(--bs-list-group-border-width);
      }
    }
    @media (min-width: 1400px) {
      .list-group-horizontal-xxl {
        flex-direction: row;
      }
      .list-group-horizontal-xxl > .list-group-item:first-child {
        border-bottom-left-radius: var(--bs-list-group-border-radius);
        border-top-right-radius: 0;
      }
      .list-group-horizontal-xxl > .list-group-item:last-child {
        border-top-right-radius: var(--bs-list-group-border-radius);
        border-bottom-left-radius: 0;
      }
      .list-group-horizontal-xxl > .list-group-item.active {
        margin-top: 0;
      }
      .list-group-horizontal-xxl > .list-group-item + .list-group-item {
        border-top-width: var(--bs-list-group-border-width);
        border-left-width: 0;
      }
      .list-group-horizontal-xxl > .list-group-item + .list-group-item.active {
        margin-left: calc(var(--bs-list-group-border-width) * -1);
        border-left-width: var(--bs-list-group-border-width);
      }
    }
    .list-group-flush {
      border-radius: 0;
    }
    .list-group-flush > .list-group-item {
      border-width: 0 0 var(--bs-list-group-border-width);
    }
    .list-group-flush > .list-group-item:last-child {
      border-bottom-width: 0;
    }
    
    .list-group-item-primary {
      color: #084298;
      background-color: #cfe2ff;
    }
    .list-group-item-primary.list-group-item-action:hover, .list-group-item-primary.list-group-item-action:focus {
      color: #084298;
      background-color: #bacbe6;
    }
    .list-group-item-primary.list-group-item-action.active {
      color: #fff;
      background-color: #084298;
      border-color: #084298;
    }
    
    .list-group-item-secondary {
      color: #41464b;
      background-color: #e2e3e5;
    }
    .list-group-item-secondary.list-group-item-action:hover, .list-group-item-secondary.list-group-item-action:focus {
      color: #41464b;
      background-color: #cbccce;
    }
    .list-group-item-secondary.list-group-item-action.active {
      color: #fff;
      background-color: #41464b;
      border-color: #41464b;
    }
    
    .list-group-item-success {
      color: #0f5132;
      background-color: #d1e7dd;
    }
    .list-group-item-success.list-group-item-action:hover, .list-group-item-success.list-group-item-action:focus {
      color: #0f5132;
      background-color: #bcd0c7;
    }
    .list-group-item-success.list-group-item-action.active {
      color: #fff;
      background-color: #0f5132;
      border-color: #0f5132;
    }
    
    .list-group-item-info {
      color: #055160;
      background-color: #cff4fc;
    }
    .list-group-item-info.list-group-item-action:hover, .list-group-item-info.list-group-item-action:focus {
      color: #055160;
      background-color: #badce3;
    }
    .list-group-item-info.list-group-item-action.active {
      color: #fff;
      background-color: #055160;
      border-color: #055160;
    }
    
    .list-group-item-warning {
      color: #664d03;
      background-color: #fff3cd;
    }
    .list-group-item-warning.list-group-item-action:hover, .list-group-item-warning.list-group-item-action:focus {
      color: #664d03;
      background-color: #e6dbb9;
    }
    .list-group-item-warning.list-group-item-action.active {
      color: #fff;
      background-color: #664d03;
      border-color: #664d03;
    }
    
    .list-group-item-danger {
      color: #842029;
      background-color: #f8d7da;
    }
    .list-group-item-danger.list-group-item-action:hover, .list-group-item-danger.list-group-item-action:focus {
      color: #842029;
      background-color: #dfc2c4;
    }
    .list-group-item-danger.list-group-item-action.active {
      color: #fff;
      background-color: #842029;
      border-color: #842029;
    }
    
    .list-group-item-light {
      color: #636464;
      background-color: #fefefe;
    }
    .list-group-item-light.list-group-item-action:hover, .list-group-item-light.list-group-item-action:focus {
      color: #636464;
      background-color: #e5e5e5;
    }
    .list-group-item-light.list-group-item-action.active {
      color: #fff;
      background-color: #636464;
      border-color: #636464;
    }
    
    .list-group-item-dark {
      color: #141619;
      background-color: #d3d3d4;
    }
    .list-group-item-dark.list-group-item-action:hover, .list-group-item-dark.list-group-item-action:focus {
      color: #141619;
      background-color: #bebebf;
    }
    .list-group-item-dark.list-group-item-action.active {
      color: #fff;
      background-color: #141619;
      border-color: #141619;
    }
    
    .btn-close {
      box-sizing: content-box;
      width: 1em;
      height: 1em;
      padding: 0.25em 0.25em;
      color: #000;
      background: transparent url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e") center/1em auto no-repeat;
      border: 0;
      border-radius: 0.375rem;
      opacity: 0.5;
    }
    .btn-close:hover {
      color: #000;
      text-decoration: none;
      opacity: 0.75;
    }
    .btn-close:focus {
      outline: 0;
      box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
      opacity: 1;
    }
    .btn-close:disabled, .btn-close.disabled {
      pointer-events: none;
      -webkit-user-select: none;
      -moz-user-select: none;
      user-select: none;
      opacity: 0.25;
    }
    
    .btn-close-white {
      filter: invert(1) grayscale(100%) brightness(200%);
    }
    
    .toast {
      --bs-toast-padding-x: 0.75rem;
      --bs-toast-padding-y: 0.5rem;
      --bs-toast-spacing: 1.5rem;
      --bs-toast-max-width: 350px;
      --bs-toast-font-size: 0.875rem;
      --bs-toast-color: ;
      --bs-toast-bg: rgba(255, 255, 255, 0.85);
      --bs-toast-border-width: 1px;
      --bs-toast-border-color: var(--bs-border-color-translucent);
      --bs-toast-border-radius: 0.375rem;
      --bs-toast-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
      --bs-toast-header-color: #6c757d;
      --bs-toast-header-bg: rgba(255, 255, 255, 0.85);
      --bs-toast-header-border-color: rgba(0, 0, 0, 0.05);
      width: var(--bs-toast-max-width);
      max-width: 100%;
      font-size: var(--bs-toast-font-size);
      color: var(--bs-toast-color);
      pointer-events: auto;
      background-color: var(--bs-toast-bg);
      background-clip: padding-box;
      border: var(--bs-toast-border-width) solid var(--bs-toast-border-color);
      box-shadow: var(--bs-toast-box-shadow);
      border-radius: var(--bs-toast-border-radius);
    }
    .toast.showing {
      opacity: 0;
    }
    .toast:not(.show) {
      display: none;
    }
    
    .toast-container {
      position: absolute;
      z-index: 1090;
      width: -webkit-max-content;
      width: -moz-max-content;
      width: max-content;
      max-width: 100%;
      pointer-events: none;
    }
    .toast-container > :not(:last-child) {
      margin-bottom: var(--bs-toast-spacing);
    }
    
    .toast-header {
      display: flex;
      align-items: center;
      padding: var(--bs-toast-padding-y) var(--bs-toast-padding-x);
      color: var(--bs-toast-header-color);
      background-color: var(--bs-toast-header-bg);
      background-clip: padding-box;
      border-bottom: var(--bs-toast-border-width) solid var(--bs-toast-header-border-color);
      border-top-left-radius: calc(var(--bs-toast-border-radius) - var(--bs-toast-border-width));
      border-top-right-radius: calc(var(--bs-toast-border-radius) - var(--bs-toast-border-width));
    }
    .toast-header .btn-close {
      margin-right: calc(var(--bs-toast-padding-x) * -0.5);
      margin-left: var(--bs-toast-padding-x);
    }
    
    .toast-body {
      padding: var(--bs-toast-padding-x);
      word-wrap: break-word;
    }
    
    .modal {
      --bs-modal-zindex: 1055;
      --bs-modal-width: 500px;
      --bs-modal-padding: 1rem;
      --bs-modal-margin: 0.5rem;
      --bs-modal-color: ;
      --bs-modal-bg: #fff;
      --bs-modal-border-color: var(--bs-border-color-translucent);
      --bs-modal-border-width: 1px;
      --bs-modal-border-radius: 0.5rem;
      --bs-modal-box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
      --bs-modal-inner-border-radius: calc(0.5rem - 1px);
      --bs-modal-header-padding-x: 1rem;
      --bs-modal-header-padding-y: 1rem;
      --bs-modal-header-padding: 1rem 1rem;
      --bs-modal-header-border-color: var(--bs-border-color);
      --bs-modal-header-border-width: 1px;
      --bs-modal-title-line-height: 1.5;
      --bs-modal-footer-gap: 0.5rem;
      --bs-modal-footer-bg: ;
      --bs-modal-footer-border-color: var(--bs-border-color);
      --bs-modal-footer-border-width: 1px;
      position: fixed;
      top: 0;
      left: 0;
      z-index: var(--bs-modal-zindex);
      display: none;
      width: 100%;
      height: 100%;
      overflow-x: hidden;
      overflow-y: auto;
      outline: 0;
    }
    
    .modal-dialog {
      position: relative;
      width: auto;
      margin: var(--bs-modal-margin);
      pointer-events: none;
    }
    .modal.fade .modal-dialog {
      transition: transform 0.3s ease-out;
      transform: translate(0, -50px);
    }
    @media (prefers-reduced-motion: reduce) {
      .modal.fade .modal-dialog {
        transition: none;
      }
    }
    .modal.show .modal-dialog {
      transform: none;
    }
    .modal.modal-static .modal-dialog {
      transform: scale(1.02);
    }
    
    .modal-dialog-scrollable {
      height: calc(100% - var(--bs-modal-margin) * 2);
    }
    .modal-dialog-scrollable .modal-content {
      max-height: 100%;
      overflow: hidden;
    }
    .modal-dialog-scrollable .modal-body {
      overflow-y: auto;
    }
    
    .modal-dialog-centered {
      display: flex;
      align-items: center;
      min-height: calc(100% - var(--bs-modal-margin) * 2);
    }
    
    .modal-content {
      position: relative;
      display: flex;
      flex-direction: column;
      width: 100%;
      color: var(--bs-modal-color);
      pointer-events: auto;
      background-color: var(--bs-modal-bg);
      background-clip: padding-box;
      border: var(--bs-modal-border-width) solid var(--bs-modal-border-color);
      border-radius: var(--bs-modal-border-radius);
      outline: 0;
    }
    
    .modal-backdrop {
      --bs-backdrop-zindex: 1050;
      --bs-backdrop-bg: #000;
      --bs-backdrop-opacity: 0.5;
      position: fixed;
      top: 0;
      left: 0;
      z-index: var(--bs-backdrop-zindex);
      width: 100vw;
      height: 100vh;
      background-color: var(--bs-backdrop-bg);
    }
    .modal-backdrop.fade {
      opacity: 0;
    }
    .modal-backdrop.show {
      opacity: var(--bs-backdrop-opacity);
    }
    
    .modal-header {
      display: flex;
      flex-shrink: 0;
      align-items: center;
      justify-content: space-between;
      padding: var(--bs-modal-header-padding);
      border-bottom: var(--bs-modal-header-border-width) solid var(--bs-modal-header-border-color);
      border-top-left-radius: var(--bs-modal-inner-border-radius);
      border-top-right-radius: var(--bs-modal-inner-border-radius);
    }
    .modal-header .btn-close {
      padding: calc(var(--bs-modal-header-padding-y) * 0.5) calc(var(--bs-modal-header-padding-x) * 0.5);
      margin: calc(var(--bs-modal-header-padding-y) * -0.5) calc(var(--bs-modal-header-padding-x) * -0.5) calc(var(--bs-modal-header-padding-y) * -0.5) auto;
    }
    
    .modal-title {
      margin-bottom: 0;
      line-height: var(--bs-modal-title-line-height);
    }
    
    .modal-body {
      position: relative;
      flex: 1 1 auto;
      padding: var(--bs-modal-padding);
    }
    
    .modal-footer {
      display: flex;
      flex-shrink: 0;
      flex-wrap: wrap;
      align-items: center;
      justify-content: flex-end;
      padding: calc(var(--bs-modal-padding) - var(--bs-modal-footer-gap) * 0.5);
      background-color: var(--bs-modal-footer-bg);
      border-top: var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color);
      border-bottom-right-radius: var(--bs-modal-inner-border-radius);
      border-bottom-left-radius: var(--bs-modal-inner-border-radius);
    }
    .modal-footer > * {
      margin: calc(var(--bs-modal-footer-gap) * 0.5);
    }
    
    @media (min-width: 576px) {
      .modal {
        --bs-modal-margin: 1.75rem;
        --bs-modal-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
      }
      .modal-dialog {
        max-width: var(--bs-modal-width);
        margin-right: auto;
        margin-left: auto;
      }
      .modal-sm {
        --bs-modal-width: 300px;
      }
    }
    @media (min-width: 992px) {
      .modal-lg,
    .modal-xl {
        --bs-modal-width: 800px;
      }
    }
    @media (min-width: 1200px) {
      .modal-xl {
        --bs-modal-width: 1140px;
      }
    }
    .modal-fullscreen {
      width: 100vw;
      max-width: none;
      height: 100%;
      margin: 0;
    }
    .modal-fullscreen .modal-content {
      height: 100%;
      border: 0;
      border-radius: 0;
    }
    .modal-fullscreen .modal-header,
    .modal-fullscreen .modal-footer {
      border-radius: 0;
    }
    .modal-fullscreen .modal-body {
      overflow-y: auto;
    }
    
    @media (max-width: 575.98px) {
      .modal-fullscreen-sm-down {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;
      }
      .modal-fullscreen-sm-down .modal-content {
        height: 100%;
        border: 0;
        border-radius: 0;
      }
      .modal-fullscreen-sm-down .modal-header,
    .modal-fullscreen-sm-down .modal-footer {
        border-radius: 0;
      }
      .modal-fullscreen-sm-down .modal-body {
        overflow-y: auto;
      }
    }
    @media (max-width: 767.98px) {
      .modal-fullscreen-md-down {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;
      }
      .modal-fullscreen-md-down .modal-content {
        height: 100%;
        border: 0;
        border-radius: 0;
      }
      .modal-fullscreen-md-down .modal-header,
    .modal-fullscreen-md-down .modal-footer {
        border-radius: 0;
      }
      .modal-fullscreen-md-down .modal-body {
        overflow-y: auto;
      }
    }
    @media (max-width: 991.98px) {
      .modal-fullscreen-lg-down {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;
      }
      .modal-fullscreen-lg-down .modal-content {
        height: 100%;
        border: 0;
        border-radius: 0;
      }
      .modal-fullscreen-lg-down .modal-header,
    .modal-fullscreen-lg-down .modal-footer {
        border-radius: 0;
      }
      .modal-fullscreen-lg-down .modal-body {
        overflow-y: auto;
      }
    }
    @media (max-width: 1199.98px) {
      .modal-fullscreen-xl-down {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;
      }
      .modal-fullscreen-xl-down .modal-content {
        height: 100%;
        border: 0;
        border-radius: 0;
      }
      .modal-fullscreen-xl-down .modal-header,
    .modal-fullscreen-xl-down .modal-footer {
        border-radius: 0;
      }
      .modal-fullscreen-xl-down .modal-body {
        overflow-y: auto;
      }
    }
    @media (max-width: 1399.98px) {
      .modal-fullscreen-xxl-down {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;
      }
      .modal-fullscreen-xxl-down .modal-content {
        height: 100%;
        border: 0;
        border-radius: 0;
      }
      .modal-fullscreen-xxl-down .modal-header,
    .modal-fullscreen-xxl-down .modal-footer {
        border-radius: 0;
      }
      .modal-fullscreen-xxl-down .modal-body {
        overflow-y: auto;
      }
    }
    .tooltip {
      --bs-tooltip-zindex: 1080;
      --bs-tooltip-max-width: 200px;
      --bs-tooltip-padding-x: 0.5rem;
      --bs-tooltip-padding-y: 0.25rem;
      --bs-tooltip-margin: ;
      --bs-tooltip-font-size: 0.875rem;
      --bs-tooltip-color: #fff;
      --bs-tooltip-bg: #000;
      --bs-tooltip-border-radius: 0.375rem;
      --bs-tooltip-opacity: 0.9;
      --bs-tooltip-arrow-width: 0.8rem;
      --bs-tooltip-arrow-height: 0.4rem;
      z-index: var(--bs-tooltip-zindex);
      display: block;
      padding: var(--bs-tooltip-arrow-height);
      margin: var(--bs-tooltip-margin);
      font-family: var(--bs-font-sans-serif);
      font-style: normal;
      font-weight: 400;
      line-height: 1.5;
      text-align: left;
      text-align: start;
      text-decoration: none;
      text-shadow: none;
      text-transform: none;
      letter-spacing: normal;
      word-break: normal;
      white-space: normal;
      word-spacing: normal;
      line-break: auto;
      font-size: var(--bs-tooltip-font-size);
      word-wrap: break-word;
      opacity: 0;
    }
    .tooltip.show {
      opacity: var(--bs-tooltip-opacity);
    }
    .tooltip .tooltip-arrow {
      display: block;
      width: var(--bs-tooltip-arrow-width);
      height: var(--bs-tooltip-arrow-height);
    }
    .tooltip .tooltip-arrow::before {
      position: absolute;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
    
    .bs-tooltip-top .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow {
      bottom: 0;
    }
    .bs-tooltip-top .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before {
      top: -1px;
      border-width: var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * 0.5) 0;
      border-top-color: var(--bs-tooltip-bg);
    }
    
    /* rtl:begin:ignore */
    .bs-tooltip-end .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow {
      left: 0;
      width: var(--bs-tooltip-arrow-height);
      height: var(--bs-tooltip-arrow-width);
    }
    .bs-tooltip-end .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before {
      right: -1px;
      border-width: calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * 0.5) 0;
      border-right-color: var(--bs-tooltip-bg);
    }
    
    /* rtl:end:ignore */
    .bs-tooltip-bottom .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow {
      top: 0;
    }
    .bs-tooltip-bottom .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before {
      bottom: -1px;
      border-width: 0 calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height);
      border-bottom-color: var(--bs-tooltip-bg);
    }
    
    /* rtl:begin:ignore */
    .bs-tooltip-start .tooltip-arrow, .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow {
      right: 0;
      width: var(--bs-tooltip-arrow-height);
      height: var(--bs-tooltip-arrow-width);
    }
    .bs-tooltip-start .tooltip-arrow::before, .bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before {
      left: -1px;
      border-width: calc(var(--bs-tooltip-arrow-width) * 0.5) 0 calc(var(--bs-tooltip-arrow-width) * 0.5) var(--bs-tooltip-arrow-height);
      border-left-color: var(--bs-tooltip-bg);
    }
    
    /* rtl:end:ignore */
    .tooltip-inner {
      max-width: var(--bs-tooltip-max-width);
      padding: var(--bs-tooltip-padding-y) var(--bs-tooltip-padding-x);
      color: var(--bs-tooltip-color);
      text-align: center;
      background-color: var(--bs-tooltip-bg);
      border-radius: var(--bs-tooltip-border-radius);
    }
    
    .popover {
      --bs-popover-zindex: 1070;
      --bs-popover-max-width: 276px;
      --bs-popover-font-size: 0.875rem;
      --bs-popover-bg: #fff;
      --bs-popover-border-width: 1px;
      --bs-popover-border-color: var(--bs-border-color-translucent);
      --bs-popover-border-radius: 0.5rem;
      --bs-popover-inner-border-radius: calc(0.5rem - 1px);
      --bs-popover-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
      --bs-popover-header-padding-x: 1rem;
      --bs-popover-header-padding-y: 0.5rem;
      --bs-popover-header-font-size: 1rem;
      --bs-popover-header-color: var(--bs-heading-color);
      --bs-popover-header-bg: #f0f0f0;
      --bs-popover-body-padding-x: 1rem;
      --bs-popover-body-padding-y: 1rem;
      --bs-popover-body-color: #212529;
      --bs-popover-arrow-width: 1rem;
      --bs-popover-arrow-height: 0.5rem;
      --bs-popover-arrow-border: var(--bs-popover-border-color);
      z-index: var(--bs-popover-zindex);
      display: block;
      max-width: var(--bs-popover-max-width);
      font-family: var(--bs-font-sans-serif);
      font-style: normal;
      font-weight: 400;
      line-height: 1.5;
      text-align: left;
      text-align: start;
      text-decoration: none;
      text-shadow: none;
      text-transform: none;
      letter-spacing: normal;
      word-break: normal;
      white-space: normal;
      word-spacing: normal;
      line-break: auto;
      font-size: var(--bs-popover-font-size);
      word-wrap: break-word;
      background-color: var(--bs-popover-bg);
      background-clip: padding-box;
      border: var(--bs-popover-border-width) solid var(--bs-popover-border-color);
      border-radius: var(--bs-popover-border-radius);
    }
    .popover .popover-arrow {
      display: block;
      width: var(--bs-popover-arrow-width);
      height: var(--bs-popover-arrow-height);
    }
    .popover .popover-arrow::before, .popover .popover-arrow::after {
      position: absolute;
      display: block;
      content: "";
      border-color: transparent;
      border-style: solid;
      border-width: 0;
    }
    
    .bs-popover-top > .popover-arrow, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow {
      bottom: calc(var(--bs-popover-arrow-height) * -1 - var(--bs-popover-border-width));
    }
    .bs-popover-top > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before, .bs-popover-top > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {
      border-width: var(--bs-popover-arrow-height) calc(var(--bs-popover-arrow-width) * 0.5) 0;
    }
    .bs-popover-top > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::before {
      bottom: 0;
      border-top-color: var(--bs-popover-arrow-border);
    }
    .bs-popover-top > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=top] > .popover-arrow::after {
      bottom: var(--bs-popover-border-width);
      border-top-color: var(--bs-popover-bg);
    }
    
    /* rtl:begin:ignore */
    .bs-popover-end > .popover-arrow, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow {
      left: calc(var(--bs-popover-arrow-height) * -1 - var(--bs-popover-border-width));
      width: var(--bs-popover-arrow-height);
      height: var(--bs-popover-arrow-width);
    }
    .bs-popover-end > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before, .bs-popover-end > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {
      border-width: calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height) calc(var(--bs-popover-arrow-width) * 0.5) 0;
    }
    .bs-popover-end > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::before {
      left: 0;
      border-right-color: var(--bs-popover-arrow-border);
    }
    .bs-popover-end > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=right] > .popover-arrow::after {
      left: var(--bs-popover-border-width);
      border-right-color: var(--bs-popover-bg);
    }
    
    /* rtl:end:ignore */
    .bs-popover-bottom > .popover-arrow, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow {
      top: calc(var(--bs-popover-arrow-height) * -1 - var(--bs-popover-border-width));
    }
    .bs-popover-bottom > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before, .bs-popover-bottom > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {
      border-width: 0 calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height);
    }
    .bs-popover-bottom > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::before {
      top: 0;
      border-bottom-color: var(--bs-popover-arrow-border);
    }
    .bs-popover-bottom > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=bottom] > .popover-arrow::after {
      top: var(--bs-popover-border-width);
      border-bottom-color: var(--bs-popover-bg);
    }
    .bs-popover-bottom .popover-header::before, .bs-popover-auto[data-popper-placement^=bottom] .popover-header::before {
      position: absolute;
      top: 0;
      left: 50%;
      display: block;
      width: var(--bs-popover-arrow-width);
      margin-left: calc(var(--bs-popover-arrow-width) * -0.5);
      content: "";
      border-bottom: var(--bs-popover-border-width) solid var(--bs-popover-header-bg);
    }
    
    /* rtl:begin:ignore */
    .bs-popover-start > .popover-arrow, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow {
      right: calc(var(--bs-popover-arrow-height) * -1 - var(--bs-popover-border-width));
      width: var(--bs-popover-arrow-height);
      height: var(--bs-popover-arrow-width);
    }
    .bs-popover-start > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before, .bs-popover-start > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {
      border-width: calc(var(--bs-popover-arrow-width) * 0.5) 0 calc(var(--bs-popover-arrow-width) * 0.5) var(--bs-popover-arrow-height);
    }
    .bs-popover-start > .popover-arrow::before, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::before {
      right: 0;
      border-left-color: var(--bs-popover-arrow-border);
    }
    .bs-popover-start > .popover-arrow::after, .bs-popover-auto[data-popper-placement^=left] > .popover-arrow::after {
      right: var(--bs-popover-border-width);
      border-left-color: var(--bs-popover-bg);
    }
    
    /* rtl:end:ignore */
    .popover-header {
      padding: var(--bs-popover-header-padding-y) var(--bs-popover-header-padding-x);
      margin-bottom: 0;
      font-size: var(--bs-popover-header-font-size);
      color: var(--bs-popover-header-color);
      background-color: var(--bs-popover-header-bg);
      border-bottom: var(--bs-popover-border-width) solid var(--bs-popover-border-color);
      border-top-left-radius: var(--bs-popover-inner-border-radius);
      border-top-right-radius: var(--bs-popover-inner-border-radius);
    }
    .popover-header:empty {
      display: none;
    }
    
    .popover-body {
      padding: var(--bs-popover-body-padding-y) var(--bs-popover-body-padding-x);
      color: var(--bs-popover-body-color);
    }
    
    .carousel {
      position: relative;
    }
    
    .carousel.pointer-event {
      touch-action: pan-y;
    }
    
    .carousel-inner {
      position: relative;
      width: 100%;
      overflow: hidden;
    }
    .carousel-inner::after {
      display: block;
      clear: both;
      content: "";
    }
    
    .carousel-item {
      position: relative;
      display: none;
      float: left;
      width: 100%;
      margin-right: -100%;
      -webkit-backface-visibility: hidden;
      backface-visibility: hidden;
      transition: transform 0.6s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .carousel-item {
        transition: none;
      }
    }
    
    .carousel-item.active,
    .carousel-item-next,
    .carousel-item-prev {
      display: block;
    }
    
    /* rtl:begin:ignore */
    .carousel-item-next:not(.carousel-item-start),
    .active.carousel-item-end {
      transform: translateX(100%);
    }
    
    .carousel-item-prev:not(.carousel-item-end),
    .active.carousel-item-start {
      transform: translateX(-100%);
    }
    
    /* rtl:end:ignore */
    .carousel-fade .carousel-item {
      opacity: 0;
      transition-property: opacity;
      transform: none;
    }
    .carousel-fade .carousel-item.active,
    .carousel-fade .carousel-item-next.carousel-item-start,
    .carousel-fade .carousel-item-prev.carousel-item-end {
      z-index: 1;
      opacity: 1;
    }
    .carousel-fade .active.carousel-item-start,
    .carousel-fade .active.carousel-item-end {
      z-index: 0;
      opacity: 0;
      transition: opacity 0s 0.6s;
    }
    @media (prefers-reduced-motion: reduce) {
      .carousel-fade .active.carousel-item-start,
    .carousel-fade .active.carousel-item-end {
        transition: none;
      }
    }
    
    .carousel-control-prev,
    .carousel-control-next {
      position: absolute;
      top: 0;
      bottom: 0;
      z-index: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 15%;
      padding: 0;
      color: #fff;
      text-align: center;
      background: none;
      border: 0;
      opacity: 0.5;
      transition: opacity 0.15s ease;
    }
    @media (prefers-reduced-motion: reduce) {
      .carousel-control-prev,
    .carousel-control-next {
        transition: none;
      }
    }
    .carousel-control-prev:hover, .carousel-control-prev:focus,
    .carousel-control-next:hover,
    .carousel-control-next:focus {
      color: #fff;
      text-decoration: none;
      outline: 0;
      opacity: 0.9;
    }
    
    .carousel-control-prev {
      left: 0;
    }
    
    .carousel-control-next {
      right: 0;
    }
    
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
      display: inline-block;
      width: 2rem;
      height: 2rem;
      background-repeat: no-repeat;
      background-position: 50%;
      background-size: 100% 100%;
    }
    
    /* rtl:options: {
      "autoRename": true,
      "stringMap":[ {
        "name"    : "prev-next",
        "search"  : "prev",
        "replace" : "next"
      } ]
    } */
    .carousel-control-prev-icon {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/%3e%3c/svg%3e");
    }
    
    .carousel-control-next-icon {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
    }
    
    .carousel-indicators {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 2;
      display: flex;
      justify-content: center;
      padding: 0;
      margin-right: 15%;
      margin-bottom: 1rem;
      margin-left: 15%;
      list-style: none;
    }
    .carousel-indicators [data-bs-target] {
      box-sizing: content-box;
      flex: 0 1 auto;
      width: 30px;
      height: 3px;
      padding: 0;
      margin-right: 3px;
      margin-left: 3px;
      text-indent: -999px;
      cursor: pointer;
      background-color: #fff;
      background-clip: padding-box;
      border: 0;
      border-top: 10px solid transparent;
      border-bottom: 10px solid transparent;
      opacity: 0.5;
      transition: opacity 0.6s ease;
    }
    @media (prefers-reduced-motion: reduce) {
      .carousel-indicators [data-bs-target] {
        transition: none;
      }
    }
    .carousel-indicators .active {
      opacity: 1;
    }
    
    .carousel-caption {
      position: absolute;
      right: 15%;
      bottom: 1.25rem;
      left: 15%;
      padding-top: 1.25rem;
      padding-bottom: 1.25rem;
      color: #fff;
      text-align: center;
    }
    
    .carousel-dark .carousel-control-prev-icon,
    .carousel-dark .carousel-control-next-icon {
      filter: invert(1) grayscale(100);
    }
    .carousel-dark .carousel-indicators [data-bs-target] {
      background-color: #000;
    }
    .carousel-dark .carousel-caption {
      color: #000;
    }
    
    .spinner-grow,
    .spinner-border {
      display: inline-block;
      width: var(--bs-spinner-width);
      height: var(--bs-spinner-height);
      vertical-align: var(--bs-spinner-vertical-align);
      border-radius: 50%;
      -webkit-animation: var(--bs-spinner-animation-speed) linear infinite var(--bs-spinner-animation-name);
      animation: var(--bs-spinner-animation-speed) linear infinite var(--bs-spinner-animation-name);
    }
    
    @-webkit-keyframes spinner-border {
      to {
        transform: rotate(360deg) /* rtl:ignore */;
      }
    }
    
    @keyframes spinner-border {
      to {
        transform: rotate(360deg) /* rtl:ignore */;
      }
    }
    .spinner-border {
      --bs-spinner-width: 2rem;
      --bs-spinner-height: 2rem;
      --bs-spinner-vertical-align: -0.125em;
      --bs-spinner-border-width: 0.25em;
      --bs-spinner-animation-speed: 0.75s;
      --bs-spinner-animation-name: spinner-border;
      border: var(--bs-spinner-border-width) solid currentcolor;
      border-right-color: transparent;
    }
    
    .spinner-border-sm {
      --bs-spinner-width: 1rem;
      --bs-spinner-height: 1rem;
      --bs-spinner-border-width: 0.2em;
    }
    
    @-webkit-keyframes spinner-grow {
      0% {
        transform: scale(0);
      }
      50% {
        opacity: 1;
        transform: none;
      }
    }
    
    @keyframes spinner-grow {
      0% {
        transform: scale(0);
      }
      50% {
        opacity: 1;
        transform: none;
      }
    }
    .spinner-grow {
      --bs-spinner-width: 2rem;
      --bs-spinner-height: 2rem;
      --bs-spinner-vertical-align: -0.125em;
      --bs-spinner-animation-speed: 0.75s;
      --bs-spinner-animation-name: spinner-grow;
      background-color: currentcolor;
      opacity: 0;
    }
    
    .spinner-grow-sm {
      --bs-spinner-width: 1rem;
      --bs-spinner-height: 1rem;
    }
    
    @media (prefers-reduced-motion: reduce) {
      .spinner-border,
    .spinner-grow {
        --bs-spinner-animation-speed: 1.5s;
      }
    }
    .offcanvas, .offcanvas-xxl, .offcanvas-xl, .offcanvas-lg, .offcanvas-md, .offcanvas-sm {
      --bs-offcanvas-width: 400px;
      --bs-offcanvas-height: 30vh;
      --bs-offcanvas-padding-x: 1rem;
      --bs-offcanvas-padding-y: 1rem;
      --bs-offcanvas-color: ;
      --bs-offcanvas-bg: #fff;
      --bs-offcanvas-border-width: 1px;
      --bs-offcanvas-border-color: var(--bs-border-color-translucent);
      --bs-offcanvas-box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }
    
    @media (max-width: 575.98px) {
      .offcanvas-sm {
        position: fixed;
        bottom: 0;
        z-index: 1045;
        display: flex;
        flex-direction: column;
        max-width: 100%;
        color: var(--bs-offcanvas-color);
        visibility: hidden;
        background-color: var(--bs-offcanvas-bg);
        background-clip: padding-box;
        outline: 0;
        transition: transform 0.3s ease-in-out;
      }
    }
    @media (max-width: 575.98px) and (prefers-reduced-motion: reduce) {
      .offcanvas-sm {
        transition: none;
      }
    }
    @media (max-width: 575.98px) {
      .offcanvas-sm.offcanvas-start {
        top: 0;
        left: 0;
        width: var(--bs-offcanvas-width);
        border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(-100%);
      }
    }
    @media (max-width: 575.98px) {
      .offcanvas-sm.offcanvas-end {
        top: 0;
        right: 0;
        width: var(--bs-offcanvas-width);
        border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(100%);
      }
    }
    @media (max-width: 575.98px) {
      .offcanvas-sm.offcanvas-top {
        top: 0;
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(-100%);
      }
    }
    @media (max-width: 575.98px) {
      .offcanvas-sm.offcanvas-bottom {
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(100%);
      }
    }
    @media (max-width: 575.98px) {
      .offcanvas-sm.showing, .offcanvas-sm.show:not(.hiding) {
        transform: none;
      }
    }
    @media (max-width: 575.98px) {
      .offcanvas-sm.showing, .offcanvas-sm.hiding, .offcanvas-sm.show {
        visibility: visible;
      }
    }
    @media (min-width: 576px) {
      .offcanvas-sm {
        --bs-offcanvas-height: auto;
        --bs-offcanvas-border-width: 0;
        background-color: transparent !important;
      }
      .offcanvas-sm .offcanvas-header {
        display: none;
      }
      .offcanvas-sm .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
        background-color: transparent !important;
      }
    }
    
    @media (max-width: 767.98px) {
      .offcanvas-md {
        position: fixed;
        bottom: 0;
        z-index: 1045;
        display: flex;
        flex-direction: column;
        max-width: 100%;
        color: var(--bs-offcanvas-color);
        visibility: hidden;
        background-color: var(--bs-offcanvas-bg);
        background-clip: padding-box;
        outline: 0;
        transition: transform 0.3s ease-in-out;
      }
    }
    @media (max-width: 767.98px) and (prefers-reduced-motion: reduce) {
      .offcanvas-md {
        transition: none;
      }
    }
    @media (max-width: 767.98px) {
      .offcanvas-md.offcanvas-start {
        top: 0;
        left: 0;
        width: var(--bs-offcanvas-width);
        border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(-100%);
      }
    }
    @media (max-width: 767.98px) {
      .offcanvas-md.offcanvas-end {
        top: 0;
        right: 0;
        width: var(--bs-offcanvas-width);
        border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(100%);
      }
    }
    @media (max-width: 767.98px) {
      .offcanvas-md.offcanvas-top {
        top: 0;
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(-100%);
      }
    }
    @media (max-width: 767.98px) {
      .offcanvas-md.offcanvas-bottom {
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(100%);
      }
    }
    @media (max-width: 767.98px) {
      .offcanvas-md.showing, .offcanvas-md.show:not(.hiding) {
        transform: none;
      }
    }
    @media (max-width: 767.98px) {
      .offcanvas-md.showing, .offcanvas-md.hiding, .offcanvas-md.show {
        visibility: visible;
      }
    }
    @media (min-width: 768px) {
      .offcanvas-md {
        --bs-offcanvas-height: auto;
        --bs-offcanvas-border-width: 0;
        background-color: transparent !important;
      }
      .offcanvas-md .offcanvas-header {
        display: none;
      }
      .offcanvas-md .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
        background-color: transparent !important;
      }
    }
    
    @media (max-width: 991.98px) {
      .offcanvas-lg {
        position: fixed;
        bottom: 0;
        z-index: 1045;
        display: flex;
        flex-direction: column;
        max-width: 100%;
        color: var(--bs-offcanvas-color);
        visibility: hidden;
        background-color: var(--bs-offcanvas-bg);
        background-clip: padding-box;
        outline: 0;
        transition: transform 0.3s ease-in-out;
      }
    }
    @media (max-width: 991.98px) and (prefers-reduced-motion: reduce) {
      .offcanvas-lg {
        transition: none;
      }
    }
    @media (max-width: 991.98px) {
      .offcanvas-lg.offcanvas-start {
        top: 0;
        left: 0;
        width: var(--bs-offcanvas-width);
        border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(-100%);
      }
    }
    @media (max-width: 991.98px) {
      .offcanvas-lg.offcanvas-end {
        top: 0;
        right: 0;
        width: var(--bs-offcanvas-width);
        border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(100%);
      }
    }
    @media (max-width: 991.98px) {
      .offcanvas-lg.offcanvas-top {
        top: 0;
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(-100%);
      }
    }
    @media (max-width: 991.98px) {
      .offcanvas-lg.offcanvas-bottom {
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(100%);
      }
    }
    @media (max-width: 991.98px) {
      .offcanvas-lg.showing, .offcanvas-lg.show:not(.hiding) {
        transform: none;
      }
    }
    @media (max-width: 991.98px) {
      .offcanvas-lg.showing, .offcanvas-lg.hiding, .offcanvas-lg.show {
        visibility: visible;
      }
    }
    @media (min-width: 992px) {
      .offcanvas-lg {
        --bs-offcanvas-height: auto;
        --bs-offcanvas-border-width: 0;
        background-color: transparent !important;
      }
      .offcanvas-lg .offcanvas-header {
        display: none;
      }
      .offcanvas-lg .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
        background-color: transparent !important;
      }
    }
    
    @media (max-width: 1199.98px) {
      .offcanvas-xl {
        position: fixed;
        bottom: 0;
        z-index: 1045;
        display: flex;
        flex-direction: column;
        max-width: 100%;
        color: var(--bs-offcanvas-color);
        visibility: hidden;
        background-color: var(--bs-offcanvas-bg);
        background-clip: padding-box;
        outline: 0;
        transition: transform 0.3s ease-in-out;
      }
    }
    @media (max-width: 1199.98px) and (prefers-reduced-motion: reduce) {
      .offcanvas-xl {
        transition: none;
      }
    }
    @media (max-width: 1199.98px) {
      .offcanvas-xl.offcanvas-start {
        top: 0;
        left: 0;
        width: var(--bs-offcanvas-width);
        border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(-100%);
      }
    }
    @media (max-width: 1199.98px) {
      .offcanvas-xl.offcanvas-end {
        top: 0;
        right: 0;
        width: var(--bs-offcanvas-width);
        border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(100%);
      }
    }
    @media (max-width: 1199.98px) {
      .offcanvas-xl.offcanvas-top {
        top: 0;
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(-100%);
      }
    }
    @media (max-width: 1199.98px) {
      .offcanvas-xl.offcanvas-bottom {
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(100%);
      }
    }
    @media (max-width: 1199.98px) {
      .offcanvas-xl.showing, .offcanvas-xl.show:not(.hiding) {
        transform: none;
      }
    }
    @media (max-width: 1199.98px) {
      .offcanvas-xl.showing, .offcanvas-xl.hiding, .offcanvas-xl.show {
        visibility: visible;
      }
    }
    @media (min-width: 1200px) {
      .offcanvas-xl {
        --bs-offcanvas-height: auto;
        --bs-offcanvas-border-width: 0;
        background-color: transparent !important;
      }
      .offcanvas-xl .offcanvas-header {
        display: none;
      }
      .offcanvas-xl .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
        background-color: transparent !important;
      }
    }
    
    @media (max-width: 1399.98px) {
      .offcanvas-xxl {
        position: fixed;
        bottom: 0;
        z-index: 1045;
        display: flex;
        flex-direction: column;
        max-width: 100%;
        color: var(--bs-offcanvas-color);
        visibility: hidden;
        background-color: var(--bs-offcanvas-bg);
        background-clip: padding-box;
        outline: 0;
        transition: transform 0.3s ease-in-out;
      }
    }
    @media (max-width: 1399.98px) and (prefers-reduced-motion: reduce) {
      .offcanvas-xxl {
        transition: none;
      }
    }
    @media (max-width: 1399.98px) {
      .offcanvas-xxl.offcanvas-start {
        top: 0;
        left: 0;
        width: var(--bs-offcanvas-width);
        border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(-100%);
      }
    }
    @media (max-width: 1399.98px) {
      .offcanvas-xxl.offcanvas-end {
        top: 0;
        right: 0;
        width: var(--bs-offcanvas-width);
        border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateX(100%);
      }
    }
    @media (max-width: 1399.98px) {
      .offcanvas-xxl.offcanvas-top {
        top: 0;
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(-100%);
      }
    }
    @media (max-width: 1399.98px) {
      .offcanvas-xxl.offcanvas-bottom {
        right: 0;
        left: 0;
        height: var(--bs-offcanvas-height);
        max-height: 100%;
        border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
        transform: translateY(100%);
      }
    }
    @media (max-width: 1399.98px) {
      .offcanvas-xxl.showing, .offcanvas-xxl.show:not(.hiding) {
        transform: none;
      }
    }
    @media (max-width: 1399.98px) {
      .offcanvas-xxl.showing, .offcanvas-xxl.hiding, .offcanvas-xxl.show {
        visibility: visible;
      }
    }
    @media (min-width: 1400px) {
      .offcanvas-xxl {
        --bs-offcanvas-height: auto;
        --bs-offcanvas-border-width: 0;
        background-color: transparent !important;
      }
      .offcanvas-xxl .offcanvas-header {
        display: none;
      }
      .offcanvas-xxl .offcanvas-body {
        display: flex;
        flex-grow: 0;
        padding: 0;
        overflow-y: visible;
        background-color: transparent !important;
      }
    }
    
    .offcanvas {
      position: fixed;
      bottom: 0;
      z-index: 1045;
      display: flex;
      flex-direction: column;
      max-width: 100%;
      color: var(--bs-offcanvas-color);
      visibility: hidden;
      background-color: var(--bs-offcanvas-bg);
      background-clip: padding-box;
      outline: 0;
      transition: transform 0.3s ease-in-out;
    }
    @media (prefers-reduced-motion: reduce) {
      .offcanvas {
        transition: none;
      }
    }
    .offcanvas.offcanvas-start {
      top: 0;
      left: 0;
      width: var(--bs-offcanvas-width);
      border-right: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
      transform: translateX(-100%);
    }
    .offcanvas.offcanvas-end {
      top: 0;
      right: 0;
      width: var(--bs-offcanvas-width);
      border-left: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
      transform: translateX(100%);
    }
    .offcanvas.offcanvas-top {
      top: 0;
      right: 0;
      left: 0;
      height: var(--bs-offcanvas-height);
      max-height: 100%;
      border-bottom: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
      transform: translateY(-100%);
    }
    .offcanvas.offcanvas-bottom {
      right: 0;
      left: 0;
      height: var(--bs-offcanvas-height);
      max-height: 100%;
      border-top: var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);
      transform: translateY(100%);
    }
    .offcanvas.showing, .offcanvas.show:not(.hiding) {
      transform: none;
    }
    .offcanvas.showing, .offcanvas.hiding, .offcanvas.show {
      visibility: visible;
    }
    
    .offcanvas-backdrop {
      position: fixed;
      top: 0;
      left: 0;
      z-index: 1040;
      width: 100vw;
      height: 100vh;
      background-color: #000;
    }
    .offcanvas-backdrop.fade {
      opacity: 0;
    }
    .offcanvas-backdrop.show {
      opacity: 0.5;
    }
    
    .offcanvas-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);
    }
    .offcanvas-header .btn-close {
      padding: calc(var(--bs-offcanvas-padding-y) * 0.5) calc(var(--bs-offcanvas-padding-x) * 0.5);
      margin-top: calc(var(--bs-offcanvas-padding-y) * -0.5);
      margin-right: calc(var(--bs-offcanvas-padding-x) * -0.5);
      margin-bottom: calc(var(--bs-offcanvas-padding-y) * -0.5);
    }
    
    .offcanvas-title {
      margin-bottom: 0;
      line-height: 1.5;
    }
    
    .offcanvas-body {
      flex-grow: 1;
      padding: var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);
      overflow-y: auto;
    }
    
    .placeholder {
      display: inline-block;
      min-height: 1em;
      vertical-align: middle;
      cursor: wait;
      background-color: currentcolor;
      opacity: 0.5;
    }
    .placeholder.btn::before {
      display: inline-block;
      content: "";
    }
    
    .placeholder-xs {
      min-height: 0.6em;
    }
    
    .placeholder-sm {
      min-height: 0.8em;
    }
    
    .placeholder-lg {
      min-height: 1.2em;
    }
    
    .placeholder-glow .placeholder {
      -webkit-animation: placeholder-glow 2s ease-in-out infinite;
      animation: placeholder-glow 2s ease-in-out infinite;
    }
    
    @-webkit-keyframes placeholder-glow {
      50% {
        opacity: 0.2;
      }
    }
    
    @keyframes placeholder-glow {
      50% {
        opacity: 0.2;
      }
    }
    .placeholder-wave {
      -webkit-mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);
      mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);
      -webkit-mask-size: 200% 100%;
      mask-size: 200% 100%;
      -webkit-animation: placeholder-wave 2s linear infinite;
      animation: placeholder-wave 2s linear infinite;
    }
    
    @-webkit-keyframes placeholder-wave {
      100% {
        -webkit-mask-position: -200% 0%;
        mask-position: -200% 0%;
      }
    }
    
    @keyframes placeholder-wave {
      100% {
        -webkit-mask-position: -200% 0%;
        mask-position: -200% 0%;
      }
    }
    .clearfix::after {
      display: block;
      clear: both;
      content: "";
    }
    
    .text-bg-primary {
      color: #fff !important;
      background-color: RGBA(13, 110, 253, var(--bs-bg-opacity, 1)) !important;
    }
    
    .text-bg-secondary {
      color: #fff !important;
      background-color: RGBA(108, 117, 125, var(--bs-bg-opacity, 1)) !important;
    }
    
    .text-bg-success {
      color: #fff !important;
      background-color: RGBA(25, 135, 84, var(--bs-bg-opacity, 1)) !important;
    }
    
    .text-bg-info {
      color: #000 !important;
      background-color: RGBA(13, 202, 240, var(--bs-bg-opacity, 1)) !important;
    }
    
    .text-bg-warning {
      color: #000 !important;
      background-color: RGBA(255, 193, 7, var(--bs-bg-opacity, 1)) !important;
    }
    
    .text-bg-danger {
      color: #fff !important;
      background-color: RGBA(220, 53, 69, var(--bs-bg-opacity, 1)) !important;
    }
    
    .text-bg-light {
      color: #000 !important;
      background-color: RGBA(248, 249, 250, var(--bs-bg-opacity, 1)) !important;
    }
    
    .text-bg-dark {
      color: #fff !important;
      background-color: RGBA(33, 37, 41, var(--bs-bg-opacity, 1)) !important;
    }
    
    .link-primary {
      color: #0d6efd !important;
    }
    .link-primary:hover, .link-primary:focus {
      color: #0a58ca !important;
    }
    
    .link-secondary {
      color: #6c757d !important;
    }
    .link-secondary:hover, .link-secondary:focus {
      color: #565e64 !important;
    }
    
    .link-success {
      color: #198754 !important;
    }
    .link-success:hover, .link-success:focus {
      color: #146c43 !important;
    }
    
    .link-info {
      color: #0dcaf0 !important;
    }
    .link-info:hover, .link-info:focus {
      color: #3dd5f3 !important;
    }
    
    .link-warning {
      color: #ffc107 !important;
    }
    .link-warning:hover, .link-warning:focus {
      color: #ffcd39 !important;
    }
    
    .link-danger {
      color: #dc3545 !important;
    }
    .link-danger:hover, .link-danger:focus {
      color: #b02a37 !important;
    }
    
    .link-light {
      color: #f8f9fa !important;
    }
    .link-light:hover, .link-light:focus {
      color: #f9fafb !important;
    }
    
    .link-dark {
      color: #212529 !important;
    }
    .link-dark:hover, .link-dark:focus {
      color: #1a1e21 !important;
    }
    
    .ratio {
      position: relative;
      width: 100%;
    }
    .ratio::before {
      display: block;
      padding-top: var(--bs-aspect-ratio);
      content: "";
    }
    .ratio > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
    
    .ratio-1x1 {
      --bs-aspect-ratio: 100%;
    }
    
    .ratio-4x3 {
      --bs-aspect-ratio: 75%;
    }
    
    .ratio-16x9 {
      --bs-aspect-ratio: 56.25%;
    }
    
    .ratio-21x9 {
      --bs-aspect-ratio: 42.8571428571%;
    }
    
    .fixed-top {
      position: fixed;
      top: 0;
      right: 0;
      left: 0;
      z-index: 1030;
    }
    
    .fixed-bottom {
      position: fixed;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 1030;
    }
    
    .sticky-top {
      position: -webkit-sticky;
      position: sticky;
      top: 0;
      z-index: 1020;
    }
    
    .sticky-bottom {
      position: -webkit-sticky;
      position: sticky;
      bottom: 0;
      z-index: 1020;
    }
    
    @media (min-width: 576px) {
      .sticky-sm-top {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        z-index: 1020;
      }
      .sticky-sm-bottom {
        position: -webkit-sticky;
        position: sticky;
        bottom: 0;
        z-index: 1020;
      }
    }
    @media (min-width: 768px) {
      .sticky-md-top {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        z-index: 1020;
      }
      .sticky-md-bottom {
        position: -webkit-sticky;
        position: sticky;
        bottom: 0;
        z-index: 1020;
      }
    }
    @media (min-width: 992px) {
      .sticky-lg-top {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        z-index: 1020;
      }
      .sticky-lg-bottom {
        position: -webkit-sticky;
        position: sticky;
        bottom: 0;
        z-index: 1020;
      }
    }
    @media (min-width: 1200px) {
      .sticky-xl-top {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        z-index: 1020;
      }
      .sticky-xl-bottom {
        position: -webkit-sticky;
        position: sticky;
        bottom: 0;
        z-index: 1020;
      }
    }
    @media (min-width: 1400px) {
      .sticky-xxl-top {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        z-index: 1020;
      }
      .sticky-xxl-bottom {
        position: -webkit-sticky;
        position: sticky;
        bottom: 0;
        z-index: 1020;
      }
    }
    .hstack {
      display: flex;
      flex-direction: row;
      align-items: center;
      align-self: stretch;
    }
    
    .vstack {
      display: flex;
      flex: 1 1 auto;
      flex-direction: column;
      align-self: stretch;
    }
    
    .visually-hidden,
    .visually-hidden-focusable:not(:focus):not(:focus-within) {
      position: absolute !important;
      width: 1px !important;
      height: 1px !important;
      padding: 0 !important;
      margin: -1px !important;
      overflow: hidden !important;
      clip: rect(0, 0, 0, 0) !important;
      white-space: nowrap !important;
      border: 0 !important;
    }
    
    .stretched-link::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 1;
      content: "";
    }
    
    .text-truncate {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    
    .vr {
      display: inline-block;
      align-self: stretch;
      width: 1px;
      min-height: 1em;
      background-color: currentcolor;
      opacity: 0.25;
    }
    
    .align-baseline {
      vertical-align: baseline !important;
    }
    
    .align-top {
      vertical-align: top !important;
    }
    
    .align-middle {
      vertical-align: middle !important;
    }
    
    .align-bottom {
      vertical-align: bottom !important;
    }
    
    .align-text-bottom {
      vertical-align: text-bottom !important;
    }
    
    .align-text-top {
      vertical-align: text-top !important;
    }
    
    .float-start {
      float: left !important;
    }
    
    .float-end {
      float: right !important;
    }
    
    .float-none {
      float: none !important;
    }
    
    .opacity-0 {
      opacity: 0 !important;
    }
    
    .opacity-25 {
      opacity: 0.25 !important;
    }
    
    .opacity-50 {
      opacity: 0.5 !important;
    }
    
    .opacity-75 {
      opacity: 0.75 !important;
    }
    
    .opacity-100 {
      opacity: 1 !important;
    }
    
    .overflow-auto {
      overflow: auto !important;
    }
    
    .overflow-hidden {
      overflow: hidden !important;
    }
    
    .overflow-visible {
      overflow: visible !important;
    }
    
    .overflow-scroll {
      overflow: scroll !important;
    }
    
    .d-inline {
      display: inline !important;
    }
    
    .d-inline-block {
      display: inline-block !important;
    }
    
    .d-block {
      display: block !important;
    }
    
    .d-grid {
      display: grid !important;
    }
    
    .d-table {
      display: table !important;
    }
    
    .d-table-row {
      display: table-row !important;
    }
    
    .d-table-cell {
      display: table-cell !important;
    }
    
    .d-flex {
      display: flex !important;
    }
    
    .d-inline-flex {
      display: inline-flex !important;
    }
    
    .d-none {
      display: none !important;
    }
    
    .shadow {
      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
    }
    
    .shadow-sm {
      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
    }
    
    .shadow-lg {
      box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;
    }
    
    .shadow-none {
      box-shadow: none !important;
    }
    
    .position-static {
      position: static !important;
    }
    
    .position-relative {
      position: relative !important;
    }
    
    .position-absolute {
      position: absolute !important;
    }
    
    .position-fixed {
      position: fixed !important;
    }
    
    .position-sticky {
      position: -webkit-sticky !important;
      position: sticky !important;
    }
    
    .top-0 {
      top: 0 !important;
    }
    
    .top-50 {
      top: 50% !important;
    }
    
    .top-100 {
      top: 100% !important;
    }
    
    .bottom-0 {
      bottom: 0 !important;
    }
    
    .bottom-50 {
      bottom: 50% !important;
    }
    
    .bottom-100 {
      bottom: 100% !important;
    }
    
    .start-0 {
      left: 0 !important;
    }
    
    .start-50 {
      left: 50% !important;
    }
    
    .start-100 {
      left: 100% !important;
    }
    
    .end-0 {
      right: 0 !important;
    }
    
    .end-50 {
      right: 50% !important;
    }
    
    .end-100 {
      right: 100% !important;
    }
    
    .translate-middle {
      transform: translate(-50%, -50%) !important;
    }
    
    .translate-middle-x {
      transform: translateX(-50%) !important;
    }
    
    .translate-middle-y {
      transform: translateY(-50%) !important;
    }
    
    .border {
      border: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
    }
    
    .border-0 {
      border: 0 !important;
    }
    
    .border-top {
      border-top: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
    }
    
    .border-top-0 {
      border-top: 0 !important;
    }
    
    .border-end {
      border-right: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
    }
    
    .border-end-0 {
      border-right: 0 !important;
    }
    
    .border-bottom {
      border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
    }
    
    .border-bottom-0 {
      border-bottom: 0 !important;
    }
    
    .border-start {
      border-left: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
    }
    
    .border-start-0 {
      border-left: 0 !important;
    }
    
    .border-primary {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-primary-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-secondary {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-secondary-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-success {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-success-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-info {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-info-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-warning {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-warning-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-danger {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-danger-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-light {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-light-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-dark {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-dark-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-white {
      --bs-border-opacity: 1;
      border-color: rgba(var(--bs-white-rgb), var(--bs-border-opacity)) !important;
    }
    
    .border-1 {
      --bs-border-width: 1px;
    }
    
    .border-2 {
      --bs-border-width: 2px;
    }
    
    .border-3 {
      --bs-border-width: 3px;
    }
    
    .border-4 {
      --bs-border-width: 4px;
    }
    
    .border-5 {
      --bs-border-width: 5px;
    }
    
    .border-opacity-10 {
      --bs-border-opacity: 0.1;
    }
    
    .border-opacity-25 {
      --bs-border-opacity: 0.25;
    }
    
    .border-opacity-50 {
      --bs-border-opacity: 0.5;
    }
    
    .border-opacity-75 {
      --bs-border-opacity: 0.75;
    }
    
    .border-opacity-100 {
      --bs-border-opacity: 1;
    }
    
    .w-25 {
      width: 25% !important;
    }
    
    .w-50 {
      width: 50% !important;
    }
    
    .w-75 {
      width: 75% !important;
    }
    
    .w-100 {
      width: 100% !important;
    }
    
    .w-auto {
      width: auto !important;
    }
    
    .mw-100 {
      max-width: 100% !important;
    }
    
    .vw-100 {
      width: 100vw !important;
    }
    
    .min-vw-100 {
      min-width: 100vw !important;
    }
    
    .h-25 {
      height: 25% !important;
    }
    
    .h-50 {
      height: 50% !important;
    }
    
    .h-75 {
      height: 75% !important;
    }
    
    .h-100 {
      height: 100% !important;
    }
    
    .h-auto {
      height: auto !important;
    }
    
    .mh-100 {
      max-height: 100% !important;
    }
    
    .vh-100 {
      height: 100vh !important;
    }
    
    .min-vh-100 {
      min-height: 100vh !important;
    }
    
    .flex-fill {
      flex: 1 1 auto !important;
    }
    
    .flex-row {
      flex-direction: row !important;
    }
    
    .flex-column {
      flex-direction: column !important;
    }
    
    .flex-row-reverse {
      flex-direction: row-reverse !important;
    }
    
    .flex-column-reverse {
      flex-direction: column-reverse !important;
    }
    
    .flex-grow-0 {
      flex-grow: 0 !important;
    }
    
    .flex-grow-1 {
      flex-grow: 1 !important;
    }
    
    .flex-shrink-0 {
      flex-shrink: 0 !important;
    }
    
    .flex-shrink-1 {
      flex-shrink: 1 !important;
    }
    
    .flex-wrap {
      flex-wrap: wrap !important;
    }
    
    .flex-nowrap {
      flex-wrap: nowrap !important;
    }
    
    .flex-wrap-reverse {
      flex-wrap: wrap-reverse !important;
    }
    
    .justify-content-start {
      justify-content: flex-start !important;
    }
    
    .justify-content-end {
      justify-content: flex-end !important;
    }
    
    .justify-content-center {
      justify-content: center !important;
    }
    
    .justify-content-between {
      justify-content: space-between !important;
    }
    
    .justify-content-around {
      justify-content: space-around !important;
    }
    
    .justify-content-evenly {
      justify-content: space-evenly !important;
    }
    
    .align-items-start {
      align-items: flex-start !important;
    }
    
    .align-items-end {
      align-items: flex-end !important;
    }
    
    .align-items-center {
      align-items: center !important;
    }
    
    .align-items-baseline {
      align-items: baseline !important;
    }
    
    .align-items-stretch {
      align-items: stretch !important;
    }
    
    .align-content-start {
      align-content: flex-start !important;
    }
    
    .align-content-end {
      align-content: flex-end !important;
    }
    
    .align-content-center {
      align-content: center !important;
    }
    
    .align-content-between {
      align-content: space-between !important;
    }
    
    .align-content-around {
      align-content: space-around !important;
    }
    
    .align-content-stretch {
      align-content: stretch !important;
    }
    
    .align-self-auto {
      align-self: auto !important;
    }
    
    .align-self-start {
      align-self: flex-start !important;
    }
    
    .align-self-end {
      align-self: flex-end !important;
    }
    
    .align-self-center {
      align-self: center !important;
    }
    
    .align-self-baseline {
      align-self: baseline !important;
    }
    
    .align-self-stretch {
      align-self: stretch !important;
    }
    
    .order-first {
      order: -1 !important;
    }
    
    .order-0 {
      order: 0 !important;
    }
    
    .order-1 {
      order: 1 !important;
    }
    
    .order-2 {
      order: 2 !important;
    }
    
    .order-3 {
      order: 3 !important;
    }
    
    .order-4 {
      order: 4 !important;
    }
    
    .order-5 {
      order: 5 !important;
    }
    
    .order-last {
      order: 6 !important;
    }
    
    .m-0 {
      margin: 0 !important;
    }
    
    .m-1 {
      margin: 0.25rem !important;
    }
    
    .m-2 {
      margin: 0.5rem !important;
    }
    
    .m-3 {
      margin: 1rem !important;
    }
    
    .m-4 {
      margin: 1.5rem !important;
    }
    
    .m-5 {
      margin: 3rem !important;
    }
    
    .m-auto {
      margin: auto !important;
    }
    
    .mx-0 {
      margin-right: 0 !important;
      margin-left: 0 !important;
    }
    
    .mx-1 {
      margin-right: 0.25rem !important;
      margin-left: 0.25rem !important;
    }
    
    .mx-2 {
      margin-right: 0.5rem !important;
      margin-left: 0.5rem !important;
    }
    
    .mx-3 {
      margin-right: 1rem !important;
      margin-left: 1rem !important;
    }
    
    .mx-4 {
      margin-right: 1.5rem !important;
      margin-left: 1.5rem !important;
    }
    
    .mx-5 {
      margin-right: 3rem !important;
      margin-left: 3rem !important;
    }
    
    .mx-auto {
      margin-right: auto !important;
      margin-left: auto !important;
    }
    
    .my-0 {
      margin-top: 0 !important;
      margin-bottom: 0 !important;
    }
    
    .my-1 {
      margin-top: 0.25rem !important;
      margin-bottom: 0.25rem !important;
    }
    
    .my-2 {
      margin-top: 0.5rem !important;
      margin-bottom: 0.5rem !important;
    }
    
    .my-3 {
      margin-top: 1rem !important;
      margin-bottom: 1rem !important;
    }
    
    .my-4 {
      margin-top: 1.5rem !important;
      margin-bottom: 1.5rem !important;
    }
    
    .my-5 {
      margin-top: 3rem !important;
      margin-bottom: 3rem !important;
    }
    
    .my-auto {
      margin-top: auto !important;
      margin-bottom: auto !important;
    }
    
    .mt-0 {
      margin-top: 0 !important;
    }
    
    .mt-1 {
      margin-top: 0.25rem !important;
    }
    
    .mt-2 {
      margin-top: 0.5rem !important;
    }
    
    .mt-3 {
      margin-top: 1rem !important;
    }
    
    .mt-4 {
      margin-top: 1.5rem !important;
    }
    
    .mt-5 {
      margin-top: 3rem !important;
    }
    
    .mt-auto {
      margin-top: auto !important;
    }
    
    .me-0 {
      margin-right: 0 !important;
    }
    
    .me-1 {
      margin-right: 0.25rem !important;
    }
    
    .me-2 {
      margin-right: 0.5rem !important;
    }
    
    .me-3 {
      margin-right: 1rem !important;
    }
    
    .me-4 {
      margin-right: 1.5rem !important;
    }
    
    .me-5 {
      margin-right: 3rem !important;
    }
    
    .me-auto {
      margin-right: auto !important;
    }
    
    .mb-0 {
      margin-bottom: 0 !important;
    }
    
    .mb-1 {
      margin-bottom: 0.25rem !important;
    }
    
    .mb-2 {
      margin-bottom: 0.5rem !important;
    }
    
    .mb-3 {
      margin-bottom: 1rem !important;
    }
    
    .mb-4 {
      margin-bottom: 1.5rem !important;
    }
    
    .mb-5 {
      margin-bottom: 3rem !important;
    }
    
    .mb-auto {
      margin-bottom: auto !important;
    }
    
    .ms-0 {
      margin-left: 0 !important;
    }
    
    .ms-1 {
      margin-left: 0.25rem !important;
    }
    
    .ms-2 {
      margin-left: 0.5rem !important;
    }
    
    .ms-3 {
      margin-left: 1rem !important;
    }
    
    .ms-4 {
      margin-left: 1.5rem !important;
    }
    
    .ms-5 {
      margin-left: 3rem !important;
    }
    
    .ms-auto {
      margin-left: auto !important;
    }
    
    .p-0 {
      padding: 0 !important;
    }
    
    .p-1 {
      padding: 0.25rem !important;
    }
    
    .p-2 {
      padding: 0.5rem !important;
    }
    
    .p-3 {
      padding: 1rem !important;
    }
    
    .p-4 {
      padding: 1.5rem !important;
    }
    
    .p-5 {
      padding: 3rem !important;
    }
    
    .px-0 {
      padding-right: 0 !important;
      padding-left: 0 !important;
    }
    
    .px-1 {
      padding-right: 0.25rem !important;
      padding-left: 0.25rem !important;
    }
    
    .px-2 {
      padding-right: 0.5rem !important;
      padding-left: 0.5rem !important;
    }
    
    .px-3 {
      padding-right: 1rem !important;
      padding-left: 1rem !important;
    }
    
    .px-4 {
      padding-right: 1.5rem !important;
      padding-left: 1.5rem !important;
    }
    
    .px-5 {
      padding-right: 3rem !important;
      padding-left: 3rem !important;
    }
    
    .py-0 {
      padding-top: 0 !important;
      padding-bottom: 0 !important;
    }
    
    .py-1 {
      padding-top: 0.25rem !important;
      padding-bottom: 0.25rem !important;
    }
    
    .py-2 {
      padding-top: 0.5rem !important;
      padding-bottom: 0.5rem !important;
    }
    
    .py-3 {
      padding-top: 1rem !important;
      padding-bottom: 1rem !important;
    }
    
    .py-4 {
      padding-top: 1.5rem !important;
      padding-bottom: 1.5rem !important;
    }
    
    .py-5 {
      padding-top: 3rem !important;
      padding-bottom: 3rem !important;
    }
    
    .pt-0 {
      padding-top: 0 !important;
    }
    
    .pt-1 {
      padding-top: 0.25rem !important;
    }
    
    .pt-2 {
      padding-top: 0.5rem !important;
    }
    
    .pt-3 {
      padding-top: 1rem !important;
    }
    
    .pt-4 {
      padding-top: 1.5rem !important;
    }
    
    .pt-5 {
      padding-top: 3rem !important;
    }
    
    .pe-0 {
      padding-right: 0 !important;
    }
    
    .pe-1 {
      padding-right: 0.25rem !important;
    }
    
    .pe-2 {
      padding-right: 0.5rem !important;
    }
    
    .pe-3 {
      padding-right: 1rem !important;
    }
    
    .pe-4 {
      padding-right: 1.5rem !important;
    }
    
    .pe-5 {
      padding-right: 3rem !important;
    }
    
    .pb-0 {
      padding-bottom: 0 !important;
    }
    
    .pb-1 {
      padding-bottom: 0.25rem !important;
    }
    
    .pb-2 {
      padding-bottom: 0.5rem !important;
    }
    
    .pb-3 {
      padding-bottom: 1rem !important;
    }
    
    .pb-4 {
      padding-bottom: 1.5rem !important;
    }
    
    .pb-5 {
      padding-bottom: 3rem !important;
    }
    
    .ps-0 {
      padding-left: 0 !important;
    }
    
    .ps-1 {
      padding-left: 0.25rem !important;
    }
    
    .ps-2 {
      padding-left: 0.5rem !important;
    }
    
    .ps-3 {
      padding-left: 1rem !important;
    }
    
    .ps-4 {
      padding-left: 1.5rem !important;
    }
    
    .ps-5 {
      padding-left: 3rem !important;
    }
    
    .gap-0 {
      gap: 0 !important;
    }
    
    .gap-1 {
      gap: 0.25rem !important;
    }
    
    .gap-2 {
      gap: 0.5rem !important;
    }
    
    .gap-3 {
      gap: 1rem !important;
    }
    
    .gap-4 {
      gap: 1.5rem !important;
    }
    
    .gap-5 {
      gap: 3rem !important;
    }
    
    .font-monospace {
      font-family: var(--bs-font-monospace) !important;
    }
    
    .fs-1 {
      font-size: calc(1.375rem + 1.5vw) !important;
    }
    
    .fs-2 {
      font-size: calc(1.325rem + 0.9vw) !important;
    }
    
    .fs-3 {
      font-size: calc(1.3rem + 0.6vw) !important;
    }
    
    .fs-4 {
      font-size: calc(1.275rem + 0.3vw) !important;
    }
    
    .fs-5 {
      font-size: 1.25rem !important;
    }
    
    .fs-6 {
      font-size: 1rem !important;
    }
    
    .fst-italic {
      font-style: italic !important;
    }
    
    .fst-normal {
      font-style: normal !important;
    }
    
    .fw-light {
      font-weight: 300 !important;
    }
    
    .fw-lighter {
      font-weight: lighter !important;
    }
    
    .fw-normal {
      font-weight: 400 !important;
    }
    
    .fw-bold {
      font-weight: 700 !important;
    }
    
    .fw-semibold {
      font-weight: 600 !important;
    }
    
    .fw-bolder {
      font-weight: bolder !important;
    }
    
    .lh-1 {
      line-height: 1 !important;
    }
    
    .lh-sm {
      line-height: 1.25 !important;
    }
    
    .lh-base {
      line-height: 1.5 !important;
    }
    
    .lh-lg {
      line-height: 2 !important;
    }
    
    .text-start {
      text-align: left !important;
    }
    
    .text-end {
      text-align: right !important;
    }
    
    .text-center {
      text-align: center !important;
    }
    
    .text-decoration-none {
      text-decoration: none !important;
    }
    
    .text-decoration-underline {
      text-decoration: underline !important;
    }
    
    .text-decoration-line-through {
      text-decoration: line-through !important;
    }
    
    .text-lowercase {
      text-transform: lowercase !important;
    }
    
    .text-uppercase {
      text-transform: uppercase !important;
    }
    
    .text-capitalize {
      text-transform: capitalize !important;
    }
    
    .text-wrap {
      white-space: normal !important;
    }
    
    .text-nowrap {
      white-space: nowrap !important;
    }
    
    /* rtl:begin:remove */
    .text-break {
      word-wrap: break-word !important;
      word-break: break-word !important;
    }
    
    /* rtl:end:remove */
    .text-primary {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-primary-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-secondary {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-secondary-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-success {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-success-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-info {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-info-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-warning {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-warning-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-danger {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-danger-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-light {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-light-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-dark {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-dark-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-black {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-black-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-white {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-white-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-body {
      --bs-text-opacity: 1;
      color: rgba(var(--bs-body-color-rgb), var(--bs-text-opacity)) !important;
    }
    
    .text-muted {
      --bs-text-opacity: 1;
      color: #6c757d !important;
    }
    
    .text-black-50 {
      --bs-text-opacity: 1;
      color: rgba(0, 0, 0, 0.5) !important;
    }
    
    .text-white-50 {
      --bs-text-opacity: 1;
      color: rgba(255, 255, 255, 0.5) !important;
    }
    
    .text-reset {
      --bs-text-opacity: 1;
      color: inherit !important;
    }
    
    .text-opacity-25 {
      --bs-text-opacity: 0.25;
    }
    
    .text-opacity-50 {
      --bs-text-opacity: 0.5;
    }
    
    .text-opacity-75 {
      --bs-text-opacity: 0.75;
    }
    
    .text-opacity-100 {
      --bs-text-opacity: 1;
    }
    
    .bg-primary {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-primary-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-secondary {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-secondary-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-success {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-success-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-info {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-info-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-warning {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-warning-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-danger {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-danger-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-light {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-light-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-dark {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-dark-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-black {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-black-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-white {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-white-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-body {
      --bs-bg-opacity: 1;
      background-color: rgba(var(--bs-body-bg-rgb), var(--bs-bg-opacity)) !important;
    }
    
    .bg-transparent {
      --bs-bg-opacity: 1;
      background-color: transparent !important;
    }
    
    .bg-opacity-10 {
      --bs-bg-opacity: 0.1;
    }
    
    .bg-opacity-25 {
      --bs-bg-opacity: 0.25;
    }
    
    .bg-opacity-50 {
      --bs-bg-opacity: 0.5;
    }
    
    .bg-opacity-75 {
      --bs-bg-opacity: 0.75;
    }
    
    .bg-opacity-100 {
      --bs-bg-opacity: 1;
    }
    
    .bg-gradient {
      background-image: var(--bs-gradient) !important;
    }
    
    .user-select-all {
      -webkit-user-select: all !important;
      -moz-user-select: all !important;
      user-select: all !important;
    }
    
    .user-select-auto {
      -webkit-user-select: auto !important;
      -moz-user-select: auto !important;
      user-select: auto !important;
    }
    
    .user-select-none {
      -webkit-user-select: none !important;
      -moz-user-select: none !important;
      user-select: none !important;
    }
    
    .pe-none {
      pointer-events: none !important;
    }
    
    .pe-auto {
      pointer-events: auto !important;
    }
    
    .rounded {
      border-radius: var(--bs-border-radius) !important;
    }
    
    .rounded-0 {
      border-radius: 0 !important;
    }
    
    .rounded-1 {
      border-radius: var(--bs-border-radius-sm) !important;
    }
    
    .rounded-2 {
      border-radius: var(--bs-border-radius) !important;
    }
    
    .rounded-3 {
      border-radius: var(--bs-border-radius-lg) !important;
    }
    
    .rounded-4 {
      border-radius: var(--bs-border-radius-xl) !important;
    }
    
    .rounded-5 {
      border-radius: var(--bs-border-radius-2xl) !important;
    }
    
    .rounded-circle {
      border-radius: 50% !important;
    }
    
    .rounded-pill {
      border-radius: var(--bs-border-radius-pill) !important;
    }
    
    .rounded-top {
      border-top-left-radius: var(--bs-border-radius) !important;
      border-top-right-radius: var(--bs-border-radius) !important;
    }
    
    .rounded-end {
      border-top-right-radius: var(--bs-border-radius) !important;
      border-bottom-right-radius: var(--bs-border-radius) !important;
    }
    
    .rounded-bottom {
      border-bottom-right-radius: var(--bs-border-radius) !important;
      border-bottom-left-radius: var(--bs-border-radius) !important;
    }
    
    .rounded-start {
      border-bottom-left-radius: var(--bs-border-radius) !important;
      border-top-left-radius: var(--bs-border-radius) !important;
    }
    
    .visible {
      visibility: visible !important;
    }
    
    .invisible {
      visibility: hidden !important;
    }
    
    @media (min-width: 576px) {
      .float-sm-start {
        float: left !important;
      }
      .float-sm-end {
        float: right !important;
      }
      .float-sm-none {
        float: none !important;
      }
      .d-sm-inline {
        display: inline !important;
      }
      .d-sm-inline-block {
        display: inline-block !important;
      }
      .d-sm-block {
        display: block !important;
      }
      .d-sm-grid {
        display: grid !important;
      }
      .d-sm-table {
        display: table !important;
      }
      .d-sm-table-row {
        display: table-row !important;
      }
      .d-sm-table-cell {
        display: table-cell !important;
      }
      .d-sm-flex {
        display: flex !important;
      }
      .d-sm-inline-flex {
        display: inline-flex !important;
      }
      .d-sm-none {
        display: none !important;
      }
      .flex-sm-fill {
        flex: 1 1 auto !important;
      }
      .flex-sm-row {
        flex-direction: row !important;
      }
      .flex-sm-column {
        flex-direction: column !important;
      }
      .flex-sm-row-reverse {
        flex-direction: row-reverse !important;
      }
      .flex-sm-column-reverse {
        flex-direction: column-reverse !important;
      }
      .flex-sm-grow-0 {
        flex-grow: 0 !important;
      }
      .flex-sm-grow-1 {
        flex-grow: 1 !important;
      }
      .flex-sm-shrink-0 {
        flex-shrink: 0 !important;
      }
      .flex-sm-shrink-1 {
        flex-shrink: 1 !important;
      }
      .flex-sm-wrap {
        flex-wrap: wrap !important;
      }
      .flex-sm-nowrap {
        flex-wrap: nowrap !important;
      }
      .flex-sm-wrap-reverse {
        flex-wrap: wrap-reverse !important;
      }
      .justify-content-sm-start {
        justify-content: flex-start !important;
      }
      .justify-content-sm-end {
        justify-content: flex-end !important;
      }
      .justify-content-sm-center {
        justify-content: center !important;
      }
      .justify-content-sm-between {
        justify-content: space-between !important;
      }
      .justify-content-sm-around {
        justify-content: space-around !important;
      }
      .justify-content-sm-evenly {
        justify-content: space-evenly !important;
      }
      .align-items-sm-start {
        align-items: flex-start !important;
      }
      .align-items-sm-end {
        align-items: flex-end !important;
      }
      .align-items-sm-center {
        align-items: center !important;
      }
      .align-items-sm-baseline {
        align-items: baseline !important;
      }
      .align-items-sm-stretch {
        align-items: stretch !important;
      }
      .align-content-sm-start {
        align-content: flex-start !important;
      }
      .align-content-sm-end {
        align-content: flex-end !important;
      }
      .align-content-sm-center {
        align-content: center !important;
      }
      .align-content-sm-between {
        align-content: space-between !important;
      }
      .align-content-sm-around {
        align-content: space-around !important;
      }
      .align-content-sm-stretch {
        align-content: stretch !important;
      }
      .align-self-sm-auto {
        align-self: auto !important;
      }
      .align-self-sm-start {
        align-self: flex-start !important;
      }
      .align-self-sm-end {
        align-self: flex-end !important;
      }
      .align-self-sm-center {
        align-self: center !important;
      }
      .align-self-sm-baseline {
        align-self: baseline !important;
      }
      .align-self-sm-stretch {
        align-self: stretch !important;
      }
      .order-sm-first {
        order: -1 !important;
      }
      .order-sm-0 {
        order: 0 !important;
      }
      .order-sm-1 {
        order: 1 !important;
      }
      .order-sm-2 {
        order: 2 !important;
      }
      .order-sm-3 {
        order: 3 !important;
      }
      .order-sm-4 {
        order: 4 !important;
      }
      .order-sm-5 {
        order: 5 !important;
      }
      .order-sm-last {
        order: 6 !important;
      }
      .m-sm-0 {
        margin: 0 !important;
      }
      .m-sm-1 {
        margin: 0.25rem !important;
      }
      .m-sm-2 {
        margin: 0.5rem !important;
      }
      .m-sm-3 {
        margin: 1rem !important;
      }
      .m-sm-4 {
        margin: 1.5rem !important;
      }
      .m-sm-5 {
        margin: 3rem !important;
      }
      .m-sm-auto {
        margin: auto !important;
      }
      .mx-sm-0 {
        margin-right: 0 !important;
        margin-left: 0 !important;
      }
      .mx-sm-1 {
        margin-right: 0.25rem !important;
        margin-left: 0.25rem !important;
      }
      .mx-sm-2 {
        margin-right: 0.5rem !important;
        margin-left: 0.5rem !important;
      }
      .mx-sm-3 {
        margin-right: 1rem !important;
        margin-left: 1rem !important;
      }
      .mx-sm-4 {
        margin-right: 1.5rem !important;
        margin-left: 1.5rem !important;
      }
      .mx-sm-5 {
        margin-right: 3rem !important;
        margin-left: 3rem !important;
      }
      .mx-sm-auto {
        margin-right: auto !important;
        margin-left: auto !important;
      }
      .my-sm-0 {
        margin-top: 0 !important;
        margin-bottom: 0 !important;
      }
      .my-sm-1 {
        margin-top: 0.25rem !important;
        margin-bottom: 0.25rem !important;
      }
      .my-sm-2 {
        margin-top: 0.5rem !important;
        margin-bottom: 0.5rem !important;
      }
      .my-sm-3 {
        margin-top: 1rem !important;
        margin-bottom: 1rem !important;
      }
      .my-sm-4 {
        margin-top: 1.5rem !important;
        margin-bottom: 1.5rem !important;
      }
      .my-sm-5 {
        margin-top: 3rem !important;
        margin-bottom: 3rem !important;
      }
      .my-sm-auto {
        margin-top: auto !important;
        margin-bottom: auto !important;
      }
      .mt-sm-0 {
        margin-top: 0 !important;
      }
      .mt-sm-1 {
        margin-top: 0.25rem !important;
      }
      .mt-sm-2 {
        margin-top: 0.5rem !important;
      }
      .mt-sm-3 {
        margin-top: 1rem !important;
      }
      .mt-sm-4 {
        margin-top: 1.5rem !important;
      }
      .mt-sm-5 {
        margin-top: 3rem !important;
      }
      .mt-sm-auto {
        margin-top: auto !important;
      }
      .me-sm-0 {
        margin-right: 0 !important;
      }
      .me-sm-1 {
        margin-right: 0.25rem !important;
      }
      .me-sm-2 {
        margin-right: 0.5rem !important;
      }
      .me-sm-3 {
        margin-right: 1rem !important;
      }
      .me-sm-4 {
        margin-right: 1.5rem !important;
      }
      .me-sm-5 {
        margin-right: 3rem !important;
      }
      .me-sm-auto {
        margin-right: auto !important;
      }
      .mb-sm-0 {
        margin-bottom: 0 !important;
      }
      .mb-sm-1 {
        margin-bottom: 0.25rem !important;
      }
      .mb-sm-2 {
        margin-bottom: 0.5rem !important;
      }
      .mb-sm-3 {
        margin-bottom: 1rem !important;
      }
      .mb-sm-4 {
        margin-bottom: 1.5rem !important;
      }
      .mb-sm-5 {
        margin-bottom: 3rem !important;
      }
      .mb-sm-auto {
        margin-bottom: auto !important;
      }
      .ms-sm-0 {
        margin-left: 0 !important;
      }
      .ms-sm-1 {
        margin-left: 0.25rem !important;
      }
      .ms-sm-2 {
        margin-left: 0.5rem !important;
      }
      .ms-sm-3 {
        margin-left: 1rem !important;
      }
      .ms-sm-4 {
        margin-left: 1.5rem !important;
      }
      .ms-sm-5 {
        margin-left: 3rem !important;
      }
      .ms-sm-auto {
        margin-left: auto !important;
      }
      .p-sm-0 {
        padding: 0 !important;
      }
      .p-sm-1 {
        padding: 0.25rem !important;
      }
      .p-sm-2 {
        padding: 0.5rem !important;
      }
      .p-sm-3 {
        padding: 1rem !important;
      }
      .p-sm-4 {
        padding: 1.5rem !important;
      }
      .p-sm-5 {
        padding: 3rem !important;
      }
      .px-sm-0 {
        padding-right: 0 !important;
        padding-left: 0 !important;
      }
      .px-sm-1 {
        padding-right: 0.25rem !important;
        padding-left: 0.25rem !important;
      }
      .px-sm-2 {
        padding-right: 0.5rem !important;
        padding-left: 0.5rem !important;
      }
      .px-sm-3 {
        padding-right: 1rem !important;
        padding-left: 1rem !important;
      }
      .px-sm-4 {
        padding-right: 1.5rem !important;
        padding-left: 1.5rem !important;
      }
      .px-sm-5 {
        padding-right: 3rem !important;
        padding-left: 3rem !important;
      }
      .py-sm-0 {
        padding-top: 0 !important;
        padding-bottom: 0 !important;
      }
      .py-sm-1 {
        padding-top: 0.25rem !important;
        padding-bottom: 0.25rem !important;
      }
      .py-sm-2 {
        padding-top: 0.5rem !important;
        padding-bottom: 0.5rem !important;
      }
      .py-sm-3 {
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
      }
      .py-sm-4 {
        padding-top: 1.5rem !important;
        padding-bottom: 1.5rem !important;
      }
      .py-sm-5 {
        padding-top: 3rem !important;
        padding-bottom: 3rem !important;
      }
      .pt-sm-0 {
        padding-top: 0 !important;
      }
      .pt-sm-1 {
        padding-top: 0.25rem !important;
      }
      .pt-sm-2 {
        padding-top: 0.5rem !important;
      }
      .pt-sm-3 {
        padding-top: 1rem !important;
      }
      .pt-sm-4 {
        padding-top: 1.5rem !important;
      }
      .pt-sm-5 {
        padding-top: 3rem !important;
      }
      .pe-sm-0 {
        padding-right: 0 !important;
      }
      .pe-sm-1 {
        padding-right: 0.25rem !important;
      }
      .pe-sm-2 {
        padding-right: 0.5rem !important;
      }
      .pe-sm-3 {
        padding-right: 1rem !important;
      }
      .pe-sm-4 {
        padding-right: 1.5rem !important;
      }
      .pe-sm-5 {
        padding-right: 3rem !important;
      }
      .pb-sm-0 {
        padding-bottom: 0 !important;
      }
      .pb-sm-1 {
        padding-bottom: 0.25rem !important;
      }
      .pb-sm-2 {
        padding-bottom: 0.5rem !important;
      }
      .pb-sm-3 {
        padding-bottom: 1rem !important;
      }
      .pb-sm-4 {
        padding-bottom: 1.5rem !important;
      }
      .pb-sm-5 {
        padding-bottom: 3rem !important;
      }
      .ps-sm-0 {
        padding-left: 0 !important;
      }
      .ps-sm-1 {
        padding-left: 0.25rem !important;
      }
      .ps-sm-2 {
        padding-left: 0.5rem !important;
      }
      .ps-sm-3 {
        padding-left: 1rem !important;
      }
      .ps-sm-4 {
        padding-left: 1.5rem !important;
      }
      .ps-sm-5 {
        padding-left: 3rem !important;
      }
      .gap-sm-0 {
        gap: 0 !important;
      }
      .gap-sm-1 {
        gap: 0.25rem !important;
      }
      .gap-sm-2 {
        gap: 0.5rem !important;
      }
      .gap-sm-3 {
        gap: 1rem !important;
      }
      .gap-sm-4 {
        gap: 1.5rem !important;
      }
      .gap-sm-5 {
        gap: 3rem !important;
      }
      .text-sm-start {
        text-align: left !important;
      }
      .text-sm-end {
        text-align: right !important;
      }
      .text-sm-center {
        text-align: center !important;
      }
    }
    @media (min-width: 768px) {
      .float-md-start {
        float: left !important;
      }
      .float-md-end {
        float: right !important;
      }
      .float-md-none {
        float: none !important;
      }
      .d-md-inline {
        display: inline !important;
      }
      .d-md-inline-block {
        display: inline-block !important;
      }
      .d-md-block {
        display: block !important;
      }
      .d-md-grid {
        display: grid !important;
      }
      .d-md-table {
        display: table !important;
      }
      .d-md-table-row {
        display: table-row !important;
      }
      .d-md-table-cell {
        display: table-cell !important;
      }
      .d-md-flex {
        display: flex !important;
      }
      .d-md-inline-flex {
        display: inline-flex !important;
      }
      .d-md-none {
        display: none !important;
      }
      .flex-md-fill {
        flex: 1 1 auto !important;
      }
      .flex-md-row {
        flex-direction: row !important;
      }
      .flex-md-column {
        flex-direction: column !important;
      }
      .flex-md-row-reverse {
        flex-direction: row-reverse !important;
      }
      .flex-md-column-reverse {
        flex-direction: column-reverse !important;
      }
      .flex-md-grow-0 {
        flex-grow: 0 !important;
      }
      .flex-md-grow-1 {
        flex-grow: 1 !important;
      }
      .flex-md-shrink-0 {
        flex-shrink: 0 !important;
      }
      .flex-md-shrink-1 {
        flex-shrink: 1 !important;
      }
      .flex-md-wrap {
        flex-wrap: wrap !important;
      }
      .flex-md-nowrap {
        flex-wrap: nowrap !important;
      }
      .flex-md-wrap-reverse {
        flex-wrap: wrap-reverse !important;
      }
      .justify-content-md-start {
        justify-content: flex-start !important;
      }
      .justify-content-md-end {
        justify-content: flex-end !important;
      }
      .justify-content-md-center {
        justify-content: center !important;
      }
      .justify-content-md-between {
        justify-content: space-between !important;
      }
      .justify-content-md-around {
        justify-content: space-around !important;
      }
      .justify-content-md-evenly {
        justify-content: space-evenly !important;
      }
      .align-items-md-start {
        align-items: flex-start !important;
      }
      .align-items-md-end {
        align-items: flex-end !important;
      }
      .align-items-md-center {
        align-items: center !important;
      }
      .align-items-md-baseline {
        align-items: baseline !important;
      }
      .align-items-md-stretch {
        align-items: stretch !important;
      }
      .align-content-md-start {
        align-content: flex-start !important;
      }
      .align-content-md-end {
        align-content: flex-end !important;
      }
      .align-content-md-center {
        align-content: center !important;
      }
      .align-content-md-between {
        align-content: space-between !important;
      }
      .align-content-md-around {
        align-content: space-around !important;
      }
      .align-content-md-stretch {
        align-content: stretch !important;
      }
      .align-self-md-auto {
        align-self: auto !important;
      }
      .align-self-md-start {
        align-self: flex-start !important;
      }
      .align-self-md-end {
        align-self: flex-end !important;
      }
      .align-self-md-center {
        align-self: center !important;
      }
      .align-self-md-baseline {
        align-self: baseline !important;
      }
      .align-self-md-stretch {
        align-self: stretch !important;
      }
      .order-md-first {
        order: -1 !important;
      }
      .order-md-0 {
        order: 0 !important;
      }
      .order-md-1 {
        order: 1 !important;
      }
      .order-md-2 {
        order: 2 !important;
      }
      .order-md-3 {
        order: 3 !important;
      }
      .order-md-4 {
        order: 4 !important;
      }
      .order-md-5 {
        order: 5 !important;
      }
      .order-md-last {
        order: 6 !important;
      }
      .m-md-0 {
        margin: 0 !important;
      }
      .m-md-1 {
        margin: 0.25rem !important;
      }
      .m-md-2 {
        margin: 0.5rem !important;
      }
      .m-md-3 {
        margin: 1rem !important;
      }
      .m-md-4 {
        margin: 1.5rem !important;
      }
      .m-md-5 {
        margin: 3rem !important;
      }
      .m-md-auto {
        margin: auto !important;
      }
      .mx-md-0 {
        margin-right: 0 !important;
        margin-left: 0 !important;
      }
      .mx-md-1 {
        margin-right: 0.25rem !important;
        margin-left: 0.25rem !important;
      }
      .mx-md-2 {
        margin-right: 0.5rem !important;
        margin-left: 0.5rem !important;
      }
      .mx-md-3 {
        margin-right: 1rem !important;
        margin-left: 1rem !important;
      }
      .mx-md-4 {
        margin-right: 1.5rem !important;
        margin-left: 1.5rem !important;
      }
      .mx-md-5 {
        margin-right: 3rem !important;
        margin-left: 3rem !important;
      }
      .mx-md-auto {
        margin-right: auto !important;
        margin-left: auto !important;
      }
      .my-md-0 {
        margin-top: 0 !important;
        margin-bottom: 0 !important;
      }
      .my-md-1 {
        margin-top: 0.25rem !important;
        margin-bottom: 0.25rem !important;
      }
      .my-md-2 {
        margin-top: 0.5rem !important;
        margin-bottom: 0.5rem !important;
      }
      .my-md-3 {
        margin-top: 1rem !important;
        margin-bottom: 1rem !important;
      }
      .my-md-4 {
        margin-top: 1.5rem !important;
        margin-bottom: 1.5rem !important;
      }
      .my-md-5 {
        margin-top: 3rem !important;
        margin-bottom: 3rem !important;
      }
      .my-md-auto {
        margin-top: auto !important;
        margin-bottom: auto !important;
      }
      .mt-md-0 {
        margin-top: 0 !important;
      }
      .mt-md-1 {
        margin-top: 0.25rem !important;
      }
      .mt-md-2 {
        margin-top: 0.5rem !important;
      }
      .mt-md-3 {
        margin-top: 1rem !important;
      }
      .mt-md-4 {
        margin-top: 1.5rem !important;
      }
      .mt-md-5 {
        margin-top: 3rem !important;
      }
      .mt-md-auto {
        margin-top: auto !important;
      }
      .me-md-0 {
        margin-right: 0 !important;
      }
      .me-md-1 {
        margin-right: 0.25rem !important;
      }
      .me-md-2 {
        margin-right: 0.5rem !important;
      }
      .me-md-3 {
        margin-right: 1rem !important;
      }
      .me-md-4 {
        margin-right: 1.5rem !important;
      }
      .me-md-5 {
        margin-right: 3rem !important;
      }
      .me-md-auto {
        margin-right: auto !important;
      }
      .mb-md-0 {
        margin-bottom: 0 !important;
      }
      .mb-md-1 {
        margin-bottom: 0.25rem !important;
      }
      .mb-md-2 {
        margin-bottom: 0.5rem !important;
      }
      .mb-md-3 {
        margin-bottom: 1rem !important;
      }
      .mb-md-4 {
        margin-bottom: 1.5rem !important;
      }
      .mb-md-5 {
        margin-bottom: 3rem !important;
      }
      .mb-md-auto {
        margin-bottom: auto !important;
      }
      .ms-md-0 {
        margin-left: 0 !important;
      }
      .ms-md-1 {
        margin-left: 0.25rem !important;
      }
      .ms-md-2 {
        margin-left: 0.5rem !important;
      }
      .ms-md-3 {
        margin-left: 1rem !important;
      }
      .ms-md-4 {
        margin-left: 1.5rem !important;
      }
      .ms-md-5 {
        margin-left: 3rem !important;
      }
      .ms-md-auto {
        margin-left: auto !important;
      }
      .p-md-0 {
        padding: 0 !important;
      }
      .p-md-1 {
        padding: 0.25rem !important;
      }
      .p-md-2 {
        padding: 0.5rem !important;
      }
      .p-md-3 {
        padding: 1rem !important;
      }
      .p-md-4 {
        padding: 1.5rem !important;
      }
      .p-md-5 {
        padding: 3rem !important;
      }
      .px-md-0 {
        padding-right: 0 !important;
        padding-left: 0 !important;
      }
      .px-md-1 {
        padding-right: 0.25rem !important;
        padding-left: 0.25rem !important;
      }
      .px-md-2 {
        padding-right: 0.5rem !important;
        padding-left: 0.5rem !important;
      }
      .px-md-3 {
        padding-right: 1rem !important;
        padding-left: 1rem !important;
      }
      .px-md-4 {
        padding-right: 1.5rem !important;
        padding-left: 1.5rem !important;
      }
      .px-md-5 {
        padding-right: 3rem !important;
        padding-left: 3rem !important;
      }
      .py-md-0 {
        padding-top: 0 !important;
        padding-bottom: 0 !important;
      }
      .py-md-1 {
        padding-top: 0.25rem !important;
        padding-bottom: 0.25rem !important;
      }
      .py-md-2 {
        padding-top: 0.5rem !important;
        padding-bottom: 0.5rem !important;
      }
      .py-md-3 {
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
      }
      .py-md-4 {
        padding-top: 1.5rem !important;
        padding-bottom: 1.5rem !important;
      }
      .py-md-5 {
        padding-top: 3rem !important;
        padding-bottom: 3rem !important;
      }
      .pt-md-0 {
        padding-top: 0 !important;
      }
      .pt-md-1 {
        padding-top: 0.25rem !important;
      }
      .pt-md-2 {
        padding-top: 0.5rem !important;
      }
      .pt-md-3 {
        padding-top: 1rem !important;
      }
      .pt-md-4 {
        padding-top: 1.5rem !important;
      }
      .pt-md-5 {
        padding-top: 3rem !important;
      }
      .pe-md-0 {
        padding-right: 0 !important;
      }
      .pe-md-1 {
        padding-right: 0.25rem !important;
      }
      .pe-md-2 {
        padding-right: 0.5rem !important;
      }
      .pe-md-3 {
        padding-right: 1rem !important;
      }
      .pe-md-4 {
        padding-right: 1.5rem !important;
      }
      .pe-md-5 {
        padding-right: 3rem !important;
      }
      .pb-md-0 {
        padding-bottom: 0 !important;
      }
      .pb-md-1 {
        padding-bottom: 0.25rem !important;
      }
      .pb-md-2 {
        padding-bottom: 0.5rem !important;
      }
      .pb-md-3 {
        padding-bottom: 1rem !important;
      }
      .pb-md-4 {
        padding-bottom: 1.5rem !important;
      }
      .pb-md-5 {
        padding-bottom: 3rem !important;
      }
      .ps-md-0 {
        padding-left: 0 !important;
      }
      .ps-md-1 {
        padding-left: 0.25rem !important;
      }
      .ps-md-2 {
        padding-left: 0.5rem !important;
      }
      .ps-md-3 {
        padding-left: 1rem !important;
      }
      .ps-md-4 {
        padding-left: 1.5rem !important;
      }
      .ps-md-5 {
        padding-left: 3rem !important;
      }
      .gap-md-0 {
        gap: 0 !important;
      }
      .gap-md-1 {
        gap: 0.25rem !important;
      }
      .gap-md-2 {
        gap: 0.5rem !important;
      }
      .gap-md-3 {
        gap: 1rem !important;
      }
      .gap-md-4 {
        gap: 1.5rem !important;
      }
      .gap-md-5 {
        gap: 3rem !important;
      }
      .text-md-start {
        text-align: left !important;
      }
      .text-md-end {
        text-align: right !important;
      }
      .text-md-center {
        text-align: center !important;
      }
    }
    @media (min-width: 992px) {
      .float-lg-start {
        float: left !important;
      }
      .float-lg-end {
        float: right !important;
      }
      .float-lg-none {
        float: none !important;
      }
      .d-lg-inline {
        display: inline !important;
      }
      .d-lg-inline-block {
        display: inline-block !important;
      }
      .d-lg-block {
        display: block !important;
      }
      .d-lg-grid {
        display: grid !important;
      }
      .d-lg-table {
        display: table !important;
      }
      .d-lg-table-row {
        display: table-row !important;
      }
      .d-lg-table-cell {
        display: table-cell !important;
      }
      .d-lg-flex {
        display: flex !important;
      }
      .d-lg-inline-flex {
        display: inline-flex !important;
      }
      .d-lg-none {
        display: none !important;
      }
      .flex-lg-fill {
        flex: 1 1 auto !important;
      }
      .flex-lg-row {
        flex-direction: row !important;
      }
      .flex-lg-column {
        flex-direction: column !important;
      }
      .flex-lg-row-reverse {
        flex-direction: row-reverse !important;
      }
      .flex-lg-column-reverse {
        flex-direction: column-reverse !important;
      }
      .flex-lg-grow-0 {
        flex-grow: 0 !important;
      }
      .flex-lg-grow-1 {
        flex-grow: 1 !important;
      }
      .flex-lg-shrink-0 {
        flex-shrink: 0 !important;
      }
      .flex-lg-shrink-1 {
        flex-shrink: 1 !important;
      }
      .flex-lg-wrap {
        flex-wrap: wrap !important;
      }
      .flex-lg-nowrap {
        flex-wrap: nowrap !important;
      }
      .flex-lg-wrap-reverse {
        flex-wrap: wrap-reverse !important;
      }
      .justify-content-lg-start {
        justify-content: flex-start !important;
      }
      .justify-content-lg-end {
        justify-content: flex-end !important;
      }
      .justify-content-lg-center {
        justify-content: center !important;
      }
      .justify-content-lg-between {
        justify-content: space-between !important;
      }
      .justify-content-lg-around {
        justify-content: space-around !important;
      }
      .justify-content-lg-evenly {
        justify-content: space-evenly !important;
      }
      .align-items-lg-start {
        align-items: flex-start !important;
      }
      .align-items-lg-end {
        align-items: flex-end !important;
      }
      .align-items-lg-center {
        align-items: center !important;
      }
      .align-items-lg-baseline {
        align-items: baseline !important;
      }
      .align-items-lg-stretch {
        align-items: stretch !important;
      }
      .align-content-lg-start {
        align-content: flex-start !important;
      }
      .align-content-lg-end {
        align-content: flex-end !important;
      }
      .align-content-lg-center {
        align-content: center !important;
      }
      .align-content-lg-between {
        align-content: space-between !important;
      }
      .align-content-lg-around {
        align-content: space-around !important;
      }
      .align-content-lg-stretch {
        align-content: stretch !important;
      }
      .align-self-lg-auto {
        align-self: auto !important;
      }
      .align-self-lg-start {
        align-self: flex-start !important;
      }
      .align-self-lg-end {
        align-self: flex-end !important;
      }
      .align-self-lg-center {
        align-self: center !important;
      }
      .align-self-lg-baseline {
        align-self: baseline !important;
      }
      .align-self-lg-stretch {
        align-self: stretch !important;
      }
      .order-lg-first {
        order: -1 !important;
      }
      .order-lg-0 {
        order: 0 !important;
      }
      .order-lg-1 {
        order: 1 !important;
      }
      .order-lg-2 {
        order: 2 !important;
      }
      .order-lg-3 {
        order: 3 !important;
      }
      .order-lg-4 {
        order: 4 !important;
      }
      .order-lg-5 {
        order: 5 !important;
      }
      .order-lg-last {
        order: 6 !important;
      }
      .m-lg-0 {
        margin: 0 !important;
      }
      .m-lg-1 {
        margin: 0.25rem !important;
      }
      .m-lg-2 {
        margin: 0.5rem !important;
      }
      .m-lg-3 {
        margin: 1rem !important;
      }
      .m-lg-4 {
        margin: 1.5rem !important;
      }
      .m-lg-5 {
        margin: 3rem !important;
      }
      .m-lg-auto {
        margin: auto !important;
      }
      .mx-lg-0 {
        margin-right: 0 !important;
        margin-left: 0 !important;
      }
      .mx-lg-1 {
        margin-right: 0.25rem !important;
        margin-left: 0.25rem !important;
      }
      .mx-lg-2 {
        margin-right: 0.5rem !important;
        margin-left: 0.5rem !important;
      }
      .mx-lg-3 {
        margin-right: 1rem !important;
        margin-left: 1rem !important;
      }
      .mx-lg-4 {
        margin-right: 1.5rem !important;
        margin-left: 1.5rem !important;
      }
      .mx-lg-5 {
        margin-right: 3rem !important;
        margin-left: 3rem !important;
      }
      .mx-lg-auto {
        margin-right: auto !important;
        margin-left: auto !important;
      }
      .my-lg-0 {
        margin-top: 0 !important;
        margin-bottom: 0 !important;
      }
      .my-lg-1 {
        margin-top: 0.25rem !important;
        margin-bottom: 0.25rem !important;
      }
      .my-lg-2 {
        margin-top: 0.5rem !important;
        margin-bottom: 0.5rem !important;
      }
      .my-lg-3 {
        margin-top: 1rem !important;
        margin-bottom: 1rem !important;
      }
      .my-lg-4 {
        margin-top: 1.5rem !important;
        margin-bottom: 1.5rem !important;
      }
      .my-lg-5 {
        margin-top: 3rem !important;
        margin-bottom: 3rem !important;
      }
      .my-lg-auto {
        margin-top: auto !important;
        margin-bottom: auto !important;
      }
      .mt-lg-0 {
        margin-top: 0 !important;
      }
      .mt-lg-1 {
        margin-top: 0.25rem !important;
      }
      .mt-lg-2 {
        margin-top: 0.5rem !important;
      }
      .mt-lg-3 {
        margin-top: 1rem !important;
      }
      .mt-lg-4 {
        margin-top: 1.5rem !important;
      }
      .mt-lg-5 {
        margin-top: 3rem !important;
      }
      .mt-lg-auto {
        margin-top: auto !important;
      }
      .me-lg-0 {
        margin-right: 0 !important;
      }
      .me-lg-1 {
        margin-right: 0.25rem !important;
      }
      .me-lg-2 {
        margin-right: 0.5rem !important;
      }
      .me-lg-3 {
        margin-right: 1rem !important;
      }
      .me-lg-4 {
        margin-right: 1.5rem !important;
      }
      .me-lg-5 {
        margin-right: 3rem !important;
      }
      .me-lg-auto {
        margin-right: auto !important;
      }
      .mb-lg-0 {
        margin-bottom: 0 !important;
      }
      .mb-lg-1 {
        margin-bottom: 0.25rem !important;
      }
      .mb-lg-2 {
        margin-bottom: 0.5rem !important;
      }
      .mb-lg-3 {
        margin-bottom: 1rem !important;
      }
      .mb-lg-4 {
        margin-bottom: 1.5rem !important;
      }
      .mb-lg-5 {
        margin-bottom: 3rem !important;
      }
      .mb-lg-auto {
        margin-bottom: auto !important;
      }
      .ms-lg-0 {
        margin-left: 0 !important;
      }
      .ms-lg-1 {
        margin-left: 0.25rem !important;
      }
      .ms-lg-2 {
        margin-left: 0.5rem !important;
      }
      .ms-lg-3 {
        margin-left: 1rem !important;
      }
      .ms-lg-4 {
        margin-left: 1.5rem !important;
      }
      .ms-lg-5 {
        margin-left: 3rem !important;
      }
      .ms-lg-auto {
        margin-left: auto !important;
      }
      .p-lg-0 {
        padding: 0 !important;
      }
      .p-lg-1 {
        padding: 0.25rem !important;
      }
      .p-lg-2 {
        padding: 0.5rem !important;
      }
      .p-lg-3 {
        padding: 1rem !important;
      }
      .p-lg-4 {
        padding: 1.5rem !important;
      }
      .p-lg-5 {
        padding: 3rem !important;
      }
      .px-lg-0 {
        padding-right: 0 !important;
        padding-left: 0 !important;
      }
      .px-lg-1 {
        padding-right: 0.25rem !important;
        padding-left: 0.25rem !important;
      }
      .px-lg-2 {
        padding-right: 0.5rem !important;
        padding-left: 0.5rem !important;
      }
      .px-lg-3 {
        padding-right: 1rem !important;
        padding-left: 1rem !important;
      }
      .px-lg-4 {
        padding-right: 1.5rem !important;
        padding-left: 1.5rem !important;
      }
      .px-lg-5 {
        padding-right: 3rem !important;
        padding-left: 3rem !important;
      }
      .py-lg-0 {
        padding-top: 0 !important;
        padding-bottom: 0 !important;
      }
      .py-lg-1 {
        padding-top: 0.25rem !important;
        padding-bottom: 0.25rem !important;
      }
      .py-lg-2 {
        padding-top: 0.5rem !important;
        padding-bottom: 0.5rem !important;
      }
      .py-lg-3 {
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
      }
      .py-lg-4 {
        padding-top: 1.5rem !important;
        padding-bottom: 1.5rem !important;
      }
      .py-lg-5 {
        padding-top: 3rem !important;
        padding-bottom: 3rem !important;
      }
      .pt-lg-0 {
        padding-top: 0 !important;
      }
      .pt-lg-1 {
        padding-top: 0.25rem !important;
      }
      .pt-lg-2 {
        padding-top: 0.5rem !important;
      }
      .pt-lg-3 {
        padding-top: 1rem !important;
      }
      .pt-lg-4 {
        padding-top: 1.5rem !important;
      }
      .pt-lg-5 {
        padding-top: 3rem !important;
      }
      .pe-lg-0 {
        padding-right: 0 !important;
      }
      .pe-lg-1 {
        padding-right: 0.25rem !important;
      }
      .pe-lg-2 {
        padding-right: 0.5rem !important;
      }
      .pe-lg-3 {
        padding-right: 1rem !important;
      }
      .pe-lg-4 {
        padding-right: 1.5rem !important;
      }
      .pe-lg-5 {
        padding-right: 3rem !important;
      }
      .pb-lg-0 {
        padding-bottom: 0 !important;
      }
      .pb-lg-1 {
        padding-bottom: 0.25rem !important;
      }
      .pb-lg-2 {
        padding-bottom: 0.5rem !important;
      }
      .pb-lg-3 {
        padding-bottom: 1rem !important;
      }
      .pb-lg-4 {
        padding-bottom: 1.5rem !important;
      }
      .pb-lg-5 {
        padding-bottom: 3rem !important;
      }
      .ps-lg-0 {
        padding-left: 0 !important;
      }
      .ps-lg-1 {
        padding-left: 0.25rem !important;
      }
      .ps-lg-2 {
        padding-left: 0.5rem !important;
      }
      .ps-lg-3 {
        padding-left: 1rem !important;
      }
      .ps-lg-4 {
        padding-left: 1.5rem !important;
      }
      .ps-lg-5 {
        padding-left: 3rem !important;
      }
      .gap-lg-0 {
        gap: 0 !important;
      }
      .gap-lg-1 {
        gap: 0.25rem !important;
      }
      .gap-lg-2 {
        gap: 0.5rem !important;
      }
      .gap-lg-3 {
        gap: 1rem !important;
      }
      .gap-lg-4 {
        gap: 1.5rem !important;
      }
      .gap-lg-5 {
        gap: 3rem !important;
      }
      .text-lg-start {
        text-align: left !important;
      }
      .text-lg-end {
        text-align: right !important;
      }
      .text-lg-center {
        text-align: center !important;
      }
    }
    @media (min-width: 1200px) {
      .float-xl-start {
        float: left !important;
      }
      .float-xl-end {
        float: right !important;
      }
      .float-xl-none {
        float: none !important;
      }
      .d-xl-inline {
        display: inline !important;
      }
      .d-xl-inline-block {
        display: inline-block !important;
      }
      .d-xl-block {
        display: block !important;
      }
      .d-xl-grid {
        display: grid !important;
      }
      .d-xl-table {
        display: table !important;
      }
      .d-xl-table-row {
        display: table-row !important;
      }
      .d-xl-table-cell {
        display: table-cell !important;
      }
      .d-xl-flex {
        display: flex !important;
      }
      .d-xl-inline-flex {
        display: inline-flex !important;
      }
      .d-xl-none {
        display: none !important;
      }
      .flex-xl-fill {
        flex: 1 1 auto !important;
      }
      .flex-xl-row {
        flex-direction: row !important;
      }
      .flex-xl-column {
        flex-direction: column !important;
      }
      .flex-xl-row-reverse {
        flex-direction: row-reverse !important;
      }
      .flex-xl-column-reverse {
        flex-direction: column-reverse !important;
      }
      .flex-xl-grow-0 {
        flex-grow: 0 !important;
      }
      .flex-xl-grow-1 {
        flex-grow: 1 !important;
      }
      .flex-xl-shrink-0 {
        flex-shrink: 0 !important;
      }
      .flex-xl-shrink-1 {
        flex-shrink: 1 !important;
      }
      .flex-xl-wrap {
        flex-wrap: wrap !important;
      }
      .flex-xl-nowrap {
        flex-wrap: nowrap !important;
      }
      .flex-xl-wrap-reverse {
        flex-wrap: wrap-reverse !important;
      }
      .justify-content-xl-start {
        justify-content: flex-start !important;
      }
      .justify-content-xl-end {
        justify-content: flex-end !important;
      }
      .justify-content-xl-center {
        justify-content: center !important;
      }
      .justify-content-xl-between {
        justify-content: space-between !important;
      }
      .justify-content-xl-around {
        justify-content: space-around !important;
      }
      .justify-content-xl-evenly {
        justify-content: space-evenly !important;
      }
      .align-items-xl-start {
        align-items: flex-start !important;
      }
      .align-items-xl-end {
        align-items: flex-end !important;
      }
      .align-items-xl-center {
        align-items: center !important;
      }
      .align-items-xl-baseline {
        align-items: baseline !important;
      }
      .align-items-xl-stretch {
        align-items: stretch !important;
      }
      .align-content-xl-start {
        align-content: flex-start !important;
      }
      .align-content-xl-end {
        align-content: flex-end !important;
      }
      .align-content-xl-center {
        align-content: center !important;
      }
      .align-content-xl-between {
        align-content: space-between !important;
      }
      .align-content-xl-around {
        align-content: space-around !important;
      }
      .align-content-xl-stretch {
        align-content: stretch !important;
      }
      .align-self-xl-auto {
        align-self: auto !important;
      }
      .align-self-xl-start {
        align-self: flex-start !important;
      }
      .align-self-xl-end {
        align-self: flex-end !important;
      }
      .align-self-xl-center {
        align-self: center !important;
      }
      .align-self-xl-baseline {
        align-self: baseline !important;
      }
      .align-self-xl-stretch {
        align-self: stretch !important;
      }
      .order-xl-first {
        order: -1 !important;
      }
      .order-xl-0 {
        order: 0 !important;
      }
      .order-xl-1 {
        order: 1 !important;
      }
      .order-xl-2 {
        order: 2 !important;
      }
      .order-xl-3 {
        order: 3 !important;
      }
      .order-xl-4 {
        order: 4 !important;
      }
      .order-xl-5 {
        order: 5 !important;
      }
      .order-xl-last {
        order: 6 !important;
      }
      .m-xl-0 {
        margin: 0 !important;
      }
      .m-xl-1 {
        margin: 0.25rem !important;
      }
      .m-xl-2 {
        margin: 0.5rem !important;
      }
      .m-xl-3 {
        margin: 1rem !important;
      }
      .m-xl-4 {
        margin: 1.5rem !important;
      }
      .m-xl-5 {
        margin: 3rem !important;
      }
      .m-xl-auto {
        margin: auto !important;
      }
      .mx-xl-0 {
        margin-right: 0 !important;
        margin-left: 0 !important;
      }
      .mx-xl-1 {
        margin-right: 0.25rem !important;
        margin-left: 0.25rem !important;
      }
      .mx-xl-2 {
        margin-right: 0.5rem !important;
        margin-left: 0.5rem !important;
      }
      .mx-xl-3 {
        margin-right: 1rem !important;
        margin-left: 1rem !important;
      }
      .mx-xl-4 {
        margin-right: 1.5rem !important;
        margin-left: 1.5rem !important;
      }
      .mx-xl-5 {
        margin-right: 3rem !important;
        margin-left: 3rem !important;
      }
      .mx-xl-auto {
        margin-right: auto !important;
        margin-left: auto !important;
      }
      .my-xl-0 {
        margin-top: 0 !important;
        margin-bottom: 0 !important;
      }
      .my-xl-1 {
        margin-top: 0.25rem !important;
        margin-bottom: 0.25rem !important;
      }
      .my-xl-2 {
        margin-top: 0.5rem !important;
        margin-bottom: 0.5rem !important;
      }
      .my-xl-3 {
        margin-top: 1rem !important;
        margin-bottom: 1rem !important;
      }
      .my-xl-4 {
        margin-top: 1.5rem !important;
        margin-bottom: 1.5rem !important;
      }
      .my-xl-5 {
        margin-top: 3rem !important;
        margin-bottom: 3rem !important;
      }
      .my-xl-auto {
        margin-top: auto !important;
        margin-bottom: auto !important;
      }
      .mt-xl-0 {
        margin-top: 0 !important;
      }
      .mt-xl-1 {
        margin-top: 0.25rem !important;
      }
      .mt-xl-2 {
        margin-top: 0.5rem !important;
      }
      .mt-xl-3 {
        margin-top: 1rem !important;
      }
      .mt-xl-4 {
        margin-top: 1.5rem !important;
      }
      .mt-xl-5 {
        margin-top: 3rem !important;
      }
      .mt-xl-auto {
        margin-top: auto !important;
      }
      .me-xl-0 {
        margin-right: 0 !important;
      }
      .me-xl-1 {
        margin-right: 0.25rem !important;
      }
      .me-xl-2 {
        margin-right: 0.5rem !important;
      }
      .me-xl-3 {
        margin-right: 1rem !important;
      }
      .me-xl-4 {
        margin-right: 1.5rem !important;
      }
      .me-xl-5 {
        margin-right: 3rem !important;
      }
      .me-xl-auto {
        margin-right: auto !important;
      }
      .mb-xl-0 {
        margin-bottom: 0 !important;
      }
      .mb-xl-1 {
        margin-bottom: 0.25rem !important;
      }
      .mb-xl-2 {
        margin-bottom: 0.5rem !important;
      }
      .mb-xl-3 {
        margin-bottom: 1rem !important;
      }
      .mb-xl-4 {
        margin-bottom: 1.5rem !important;
      }
      .mb-xl-5 {
        margin-bottom: 3rem !important;
      }
      .mb-xl-auto {
        margin-bottom: auto !important;
      }
      .ms-xl-0 {
        margin-left: 0 !important;
      }
      .ms-xl-1 {
        margin-left: 0.25rem !important;
      }
      .ms-xl-2 {
        margin-left: 0.5rem !important;
      }
      .ms-xl-3 {
        margin-left: 1rem !important;
      }
      .ms-xl-4 {
        margin-left: 1.5rem !important;
      }
      .ms-xl-5 {
        margin-left: 3rem !important;
      }
      .ms-xl-auto {
        margin-left: auto !important;
      }
      .p-xl-0 {
        padding: 0 !important;
      }
      .p-xl-1 {
        padding: 0.25rem !important;
      }
      .p-xl-2 {
        padding: 0.5rem !important;
      }
      .p-xl-3 {
        padding: 1rem !important;
      }
      .p-xl-4 {
        padding: 1.5rem !important;
      }
      .p-xl-5 {
        padding: 3rem !important;
      }
      .px-xl-0 {
        padding-right: 0 !important;
        padding-left: 0 !important;
      }
      .px-xl-1 {
        padding-right: 0.25rem !important;
        padding-left: 0.25rem !important;
      }
      .px-xl-2 {
        padding-right: 0.5rem !important;
        padding-left: 0.5rem !important;
      }
      .px-xl-3 {
        padding-right: 1rem !important;
        padding-left: 1rem !important;
      }
      .px-xl-4 {
        padding-right: 1.5rem !important;
        padding-left: 1.5rem !important;
      }
      .px-xl-5 {
        padding-right: 3rem !important;
        padding-left: 3rem !important;
      }
      .py-xl-0 {
        padding-top: 0 !important;
        padding-bottom: 0 !important;
      }
      .py-xl-1 {
        padding-top: 0.25rem !important;
        padding-bottom: 0.25rem !important;
      }
      .py-xl-2 {
        padding-top: 0.5rem !important;
        padding-bottom: 0.5rem !important;
      }
      .py-xl-3 {
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
      }
      .py-xl-4 {
        padding-top: 1.5rem !important;
        padding-bottom: 1.5rem !important;
      }
      .py-xl-5 {
        padding-top: 3rem !important;
        padding-bottom: 3rem !important;
      }
      .pt-xl-0 {
        padding-top: 0 !important;
      }
      .pt-xl-1 {
        padding-top: 0.25rem !important;
      }
      .pt-xl-2 {
        padding-top: 0.5rem !important;
      }
      .pt-xl-3 {
        padding-top: 1rem !important;
      }
      .pt-xl-4 {
        padding-top: 1.5rem !important;
      }
      .pt-xl-5 {
        padding-top: 3rem !important;
      }
      .pe-xl-0 {
        padding-right: 0 !important;
      }
      .pe-xl-1 {
        padding-right: 0.25rem !important;
      }
      .pe-xl-2 {
        padding-right: 0.5rem !important;
      }
      .pe-xl-3 {
        padding-right: 1rem !important;
      }
      .pe-xl-4 {
        padding-right: 1.5rem !important;
      }
      .pe-xl-5 {
        padding-right: 3rem !important;
      }
      .pb-xl-0 {
        padding-bottom: 0 !important;
      }
      .pb-xl-1 {
        padding-bottom: 0.25rem !important;
      }
      .pb-xl-2 {
        padding-bottom: 0.5rem !important;
      }
      .pb-xl-3 {
        padding-bottom: 1rem !important;
      }
      .pb-xl-4 {
        padding-bottom: 1.5rem !important;
      }
      .pb-xl-5 {
        padding-bottom: 3rem !important;
      }
      .ps-xl-0 {
        padding-left: 0 !important;
      }
      .ps-xl-1 {
        padding-left: 0.25rem !important;
      }
      .ps-xl-2 {
        padding-left: 0.5rem !important;
      }
      .ps-xl-3 {
        padding-left: 1rem !important;
      }
      .ps-xl-4 {
        padding-left: 1.5rem !important;
      }
      .ps-xl-5 {
        padding-left: 3rem !important;
      }
      .gap-xl-0 {
        gap: 0 !important;
      }
      .gap-xl-1 {
        gap: 0.25rem !important;
      }
      .gap-xl-2 {
        gap: 0.5rem !important;
      }
      .gap-xl-3 {
        gap: 1rem !important;
      }
      .gap-xl-4 {
        gap: 1.5rem !important;
      }
      .gap-xl-5 {
        gap: 3rem !important;
      }
      .text-xl-start {
        text-align: left !important;
      }
      .text-xl-end {
        text-align: right !important;
      }
      .text-xl-center {
        text-align: center !important;
      }
    }
    @media (min-width: 1400px) {
      .float-xxl-start {
        float: left !important;
      }
      .float-xxl-end {
        float: right !important;
      }
      .float-xxl-none {
        float: none !important;
      }
      .d-xxl-inline {
        display: inline !important;
      }
      .d-xxl-inline-block {
        display: inline-block !important;
      }
      .d-xxl-block {
        display: block !important;
      }
      .d-xxl-grid {
        display: grid !important;
      }
      .d-xxl-table {
        display: table !important;
      }
      .d-xxl-table-row {
        display: table-row !important;
      }
      .d-xxl-table-cell {
        display: table-cell !important;
      }
      .d-xxl-flex {
        display: flex !important;
      }
      .d-xxl-inline-flex {
        display: inline-flex !important;
      }
      .d-xxl-none {
        display: none !important;
      }
      .flex-xxl-fill {
        flex: 1 1 auto !important;
      }
      .flex-xxl-row {
        flex-direction: row !important;
      }
      .flex-xxl-column {
        flex-direction: column !important;
      }
      .flex-xxl-row-reverse {
        flex-direction: row-reverse !important;
      }
      .flex-xxl-column-reverse {
        flex-direction: column-reverse !important;
      }
      .flex-xxl-grow-0 {
        flex-grow: 0 !important;
      }
      .flex-xxl-grow-1 {
        flex-grow: 1 !important;
      }
      .flex-xxl-shrink-0 {
        flex-shrink: 0 !important;
      }
      .flex-xxl-shrink-1 {
        flex-shrink: 1 !important;
      }
      .flex-xxl-wrap {
        flex-wrap: wrap !important;
      }
      .flex-xxl-nowrap {
        flex-wrap: nowrap !important;
      }
      .flex-xxl-wrap-reverse {
        flex-wrap: wrap-reverse !important;
      }
      .justify-content-xxl-start {
        justify-content: flex-start !important;
      }
      .justify-content-xxl-end {
        justify-content: flex-end !important;
      }
      .justify-content-xxl-center {
        justify-content: center !important;
      }
      .justify-content-xxl-between {
        justify-content: space-between !important;
      }
      .justify-content-xxl-around {
        justify-content: space-around !important;
      }
      .justify-content-xxl-evenly {
        justify-content: space-evenly !important;
      }
      .align-items-xxl-start {
        align-items: flex-start !important;
      }
      .align-items-xxl-end {
        align-items: flex-end !important;
      }
      .align-items-xxl-center {
        align-items: center !important;
      }
      .align-items-xxl-baseline {
        align-items: baseline !important;
      }
      .align-items-xxl-stretch {
        align-items: stretch !important;
      }
      .align-content-xxl-start {
        align-content: flex-start !important;
      }
      .align-content-xxl-end {
        align-content: flex-end !important;
      }
      .align-content-xxl-center {
        align-content: center !important;
      }
      .align-content-xxl-between {
        align-content: space-between !important;
      }
      .align-content-xxl-around {
        align-content: space-around !important;
      }
      .align-content-xxl-stretch {
        align-content: stretch !important;
      }
      .align-self-xxl-auto {
        align-self: auto !important;
      }
      .align-self-xxl-start {
        align-self: flex-start !important;
      }
      .align-self-xxl-end {
        align-self: flex-end !important;
      }
      .align-self-xxl-center {
        align-self: center !important;
      }
      .align-self-xxl-baseline {
        align-self: baseline !important;
      }
      .align-self-xxl-stretch {
        align-self: stretch !important;
      }
      .order-xxl-first {
        order: -1 !important;
      }
      .order-xxl-0 {
        order: 0 !important;
      }
      .order-xxl-1 {
        order: 1 !important;
      }
      .order-xxl-2 {
        order: 2 !important;
      }
      .order-xxl-3 {
        order: 3 !important;
      }
      .order-xxl-4 {
        order: 4 !important;
      }
      .order-xxl-5 {
        order: 5 !important;
      }
      .order-xxl-last {
        order: 6 !important;
      }
      .m-xxl-0 {
        margin: 0 !important;
      }
      .m-xxl-1 {
        margin: 0.25rem !important;
      }
      .m-xxl-2 {
        margin: 0.5rem !important;
      }
      .m-xxl-3 {
        margin: 1rem !important;
      }
      .m-xxl-4 {
        margin: 1.5rem !important;
      }
      .m-xxl-5 {
        margin: 3rem !important;
      }
      .m-xxl-auto {
        margin: auto !important;
      }
      .mx-xxl-0 {
        margin-right: 0 !important;
        margin-left: 0 !important;
      }
      .mx-xxl-1 {
        margin-right: 0.25rem !important;
        margin-left: 0.25rem !important;
      }
      .mx-xxl-2 {
        margin-right: 0.5rem !important;
        margin-left: 0.5rem !important;
      }
      .mx-xxl-3 {
        margin-right: 1rem !important;
        margin-left: 1rem !important;
      }
      .mx-xxl-4 {
        margin-right: 1.5rem !important;
        margin-left: 1.5rem !important;
      }
      .mx-xxl-5 {
        margin-right: 3rem !important;
        margin-left: 3rem !important;
      }
      .mx-xxl-auto {
        margin-right: auto !important;
        margin-left: auto !important;
      }
      .my-xxl-0 {
        margin-top: 0 !important;
        margin-bottom: 0 !important;
      }
      .my-xxl-1 {
        margin-top: 0.25rem !important;
        margin-bottom: 0.25rem !important;
      }
      .my-xxl-2 {
        margin-top: 0.5rem !important;
        margin-bottom: 0.5rem !important;
      }
      .my-xxl-3 {
        margin-top: 1rem !important;
        margin-bottom: 1rem !important;
      }
      .my-xxl-4 {
        margin-top: 1.5rem !important;
        margin-bottom: 1.5rem !important;
      }
      .my-xxl-5 {
        margin-top: 3rem !important;
        margin-bottom: 3rem !important;
      }
      .my-xxl-auto {
        margin-top: auto !important;
        margin-bottom: auto !important;
      }
      .mt-xxl-0 {
        margin-top: 0 !important;
      }
      .mt-xxl-1 {
        margin-top: 0.25rem !important;
      }
      .mt-xxl-2 {
        margin-top: 0.5rem !important;
      }
      .mt-xxl-3 {
        margin-top: 1rem !important;
      }
      .mt-xxl-4 {
        margin-top: 1.5rem !important;
      }
      .mt-xxl-5 {
        margin-top: 3rem !important;
      }
      .mt-xxl-auto {
        margin-top: auto !important;
      }
      .me-xxl-0 {
        margin-right: 0 !important;
      }
      .me-xxl-1 {
        margin-right: 0.25rem !important;
      }
      .me-xxl-2 {
        margin-right: 0.5rem !important;
      }
      .me-xxl-3 {
        margin-right: 1rem !important;
      }
      .me-xxl-4 {
        margin-right: 1.5rem !important;
      }
      .me-xxl-5 {
        margin-right: 3rem !important;
      }
      .me-xxl-auto {
        margin-right: auto !important;
      }
      .mb-xxl-0 {
        margin-bottom: 0 !important;
      }
      .mb-xxl-1 {
        margin-bottom: 0.25rem !important;
      }
      .mb-xxl-2 {
        margin-bottom: 0.5rem !important;
      }
      .mb-xxl-3 {
        margin-bottom: 1rem !important;
      }
      .mb-xxl-4 {
        margin-bottom: 1.5rem !important;
      }
      .mb-xxl-5 {
        margin-bottom: 3rem !important;
      }
      .mb-xxl-auto {
        margin-bottom: auto !important;
      }
      .ms-xxl-0 {
        margin-left: 0 !important;
      }
      .ms-xxl-1 {
        margin-left: 0.25rem !important;
      }
      .ms-xxl-2 {
        margin-left: 0.5rem !important;
      }
      .ms-xxl-3 {
        margin-left: 1rem !important;
      }
      .ms-xxl-4 {
        margin-left: 1.5rem !important;
      }
      .ms-xxl-5 {
        margin-left: 3rem !important;
      }
      .ms-xxl-auto {
        margin-left: auto !important;
      }
      .p-xxl-0 {
        padding: 0 !important;
      }
      .p-xxl-1 {
        padding: 0.25rem !important;
      }
      .p-xxl-2 {
        padding: 0.5rem !important;
      }
      .p-xxl-3 {
        padding: 1rem !important;
      }
      .p-xxl-4 {
        padding: 1.5rem !important;
      }
      .p-xxl-5 {
        padding: 3rem !important;
      }
      .px-xxl-0 {
        padding-right: 0 !important;
        padding-left: 0 !important;
      }
      .px-xxl-1 {
        padding-right: 0.25rem !important;
        padding-left: 0.25rem !important;
      }
      .px-xxl-2 {
        padding-right: 0.5rem !important;
        padding-left: 0.5rem !important;
      }
      .px-xxl-3 {
        padding-right: 1rem !important;
        padding-left: 1rem !important;
      }
      .px-xxl-4 {
        padding-right: 1.5rem !important;
        padding-left: 1.5rem !important;
      }
      .px-xxl-5 {
        padding-right: 3rem !important;
        padding-left: 3rem !important;
      }
      .py-xxl-0 {
        padding-top: 0 !important;
        padding-bottom: 0 !important;
      }
      .py-xxl-1 {
        padding-top: 0.25rem !important;
        padding-bottom: 0.25rem !important;
      }
      .py-xxl-2 {
        padding-top: 0.5rem !important;
        padding-bottom: 0.5rem !important;
      }
      .py-xxl-3 {
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
      }
      .py-xxl-4 {
        padding-top: 1.5rem !important;
        padding-bottom: 1.5rem !important;
      }
      .py-xxl-5 {
        padding-top: 3rem !important;
        padding-bottom: 3rem !important;
      }
      .pt-xxl-0 {
        padding-top: 0 !important;
      }
      .pt-xxl-1 {
        padding-top: 0.25rem !important;
      }
      .pt-xxl-2 {
        padding-top: 0.5rem !important;
      }
      .pt-xxl-3 {
        padding-top: 1rem !important;
      }
      .pt-xxl-4 {
        padding-top: 1.5rem !important;
      }
      .pt-xxl-5 {
        padding-top: 3rem !important;
      }
      .pe-xxl-0 {
        padding-right: 0 !important;
      }
      .pe-xxl-1 {
        padding-right: 0.25rem !important;
      }
      .pe-xxl-2 {
        padding-right: 0.5rem !important;
      }
      .pe-xxl-3 {
        padding-right: 1rem !important;
      }
      .pe-xxl-4 {
        padding-right: 1.5rem !important;
      }
      .pe-xxl-5 {
        padding-right: 3rem !important;
      }
      .pb-xxl-0 {
        padding-bottom: 0 !important;
      }
      .pb-xxl-1 {
        padding-bottom: 0.25rem !important;
      }
      .pb-xxl-2 {
        padding-bottom: 0.5rem !important;
      }
      .pb-xxl-3 {
        padding-bottom: 1rem !important;
      }
      .pb-xxl-4 {
        padding-bottom: 1.5rem !important;
      }
      .pb-xxl-5 {
        padding-bottom: 3rem !important;
      }
      .ps-xxl-0 {
        padding-left: 0 !important;
      }
      .ps-xxl-1 {
        padding-left: 0.25rem !important;
      }
      .ps-xxl-2 {
        padding-left: 0.5rem !important;
      }
      .ps-xxl-3 {
        padding-left: 1rem !important;
      }
      .ps-xxl-4 {
        padding-left: 1.5rem !important;
      }
      .ps-xxl-5 {
        padding-left: 3rem !important;
      }
      .gap-xxl-0 {
        gap: 0 !important;
      }
      .gap-xxl-1 {
        gap: 0.25rem !important;
      }
      .gap-xxl-2 {
        gap: 0.5rem !important;
      }
      .gap-xxl-3 {
        gap: 1rem !important;
      }
      .gap-xxl-4 {
        gap: 1.5rem !important;
      }
      .gap-xxl-5 {
        gap: 3rem !important;
      }
      .text-xxl-start {
        text-align: left !important;
      }
      .text-xxl-end {
        text-align: right !important;
      }
      .text-xxl-center {
        text-align: center !important;
      }
    }
    @media (min-width: 1200px) {
      .fs-1 {
        font-size: 2.5rem !important;
      }
      .fs-2 {
        font-size: 2rem !important;
      }
      .fs-3 {
        font-size: 1.75rem !important;
      }
      .fs-4 {
        font-size: 1.5rem !important;
      }
    }
    @media print {
      .d-print-inline {
        display: inline !important;
      }
      .d-print-inline-block {
        display: inline-block !important;
      }
      .d-print-block {
        display: block !important;
      }
      .d-print-grid {
        display: grid !important;
      }
      .d-print-table {
        display: table !important;
      }
      .d-print-table-row {
        display: table-row !important;
      }
      .d-print-table-cell {
        display: table-cell !important;
      }
      .d-print-flex {
        display: flex !important;
      }
      .d-print-inline-flex {
        display: inline-flex !important;
      }
      .d-print-none {
        display: none !important;
      }
    }
    
    /*# sourceMappingURL=bootstrap.css.map */",
    "// stylelint-disable property-disallowed-list
    // Single side border-radius
    
    // Helper function to replace negative values with 0
    @function valid-radius($radius) {
      $return: ();
      @each $value in $radius {
        @if type-of($value) == number {
          $return: append($return, max($value, 0));
        } @else {
          $return: append($return, $value);
        }
      }
      @return $return;
    }
    
    // scss-docs-start border-radius-mixins
    @mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
      @if $enable-rounded {
        border-radius: valid-radius($radius);
      }
      @else if $fallback-border-radius != false {
        border-radius: $fallback-border-radius;
      }
    }
    
    @mixin border-top-radius($radius: $border-radius) {
      @if $enable-rounded {
        border-top-left-radius: valid-radius($radius);
        border-top-right-radius: valid-radius($radius);
      }
    }
    
    @mixin border-end-radius($radius: $border-radius) {
      @if $enable-rounded {
        border-top-right-radius: valid-radius($radius);
        border-bottom-right-radius: valid-radius($radius);
      }
    }
    
    @mixin border-bottom-radius($radius: $border-radius) {
      @if $enable-rounded {
        border-bottom-right-radius: valid-radius($radius);
        border-bottom-left-radius: valid-radius($radius);
      }
    }
    
    @mixin border-start-radius($radius: $border-radius) {
      @if $enable-rounded {
        border-top-left-radius: valid-radius($radius);
        border-bottom-left-radius: valid-radius($radius);
      }
    }
    
    @mixin border-top-start-radius($radius: $border-radius) {
      @if $enable-rounded {
        border-top-left-radius: valid-radius($radius);
      }
    }
    
    @mixin border-top-end-radius($radius: $border-radius) {
      @if $enable-rounded {
        border-top-right-radius: valid-radius($radius);
      }
    }
    
    @mixin border-bottom-end-radius($radius: $border-radius) {
      @if $enable-rounded {
        border-bottom-right-radius: valid-radius($radius);
      }
    }
    
    @mixin border-bottom-start-radius($radius: $border-radius) {
      @if $enable-rounded {
        border-bottom-left-radius: valid-radius($radius);
      }
    }
    // scss-docs-end border-radius-mixins
    ",
    "//
    // Headings
    //
    .h1 {
      @extend h1;
    }
    
    .h2 {
      @extend h2;
    }
    
    .h3 {
      @extend h3;
    }
    
    .h4 {
      @extend h4;
    }
    
    .h5 {
      @extend h5;
    }
    
    .h6 {
      @extend h6;
    }
    
    
    .lead {
      @include font-size($lead-font-size);
      font-weight: $lead-font-weight;
    }
    
    // Type display classes
    @each $display, $font-size in $display-font-sizes {
      .display-#{$display} {
        @include font-size($font-size);
        font-family: $display-font-family;
        font-style: $display-font-style;
        font-weight: $display-font-weight;
        line-height: $display-line-height;
      }
    }
    
    //
    // Emphasis
    //
    .small {
      @extend small;
    }
    
    .mark {
      @extend mark;
    }
    
    //
    // Lists
    //
    
    .list-unstyled {
      @include list-unstyled();
    }
    
    // Inline turns list items into inline-block
    .list-inline {
      @include list-unstyled();
    }
    .list-inline-item {
      display: inline-block;
    
      &:not(:last-child) {
        margin-right: $list-inline-padding;
      }
    }
    
    
    //
    // Misc
    //
    
    // Builds on `abbr`
    .initialism {
      @include font-size($initialism-font-size);
      text-transform: uppercase;
    }
    
    // Blockquotes
    .blockquote {
      margin-bottom: $blockquote-margin-y;
      @include font-size($blockquote-font-size);
    
      > :last-child {
        margin-bottom: 0;
      }
    }
    
    .blockquote-footer {
      margin-top: -$blockquote-margin-y;
      margin-bottom: $blockquote-margin-y;
      @include font-size($blockquote-footer-font-size);
      color: $blockquote-footer-color;
    
      &::before {
        content: "\2014\00A0"; // em dash, nbsp
      }
    }
    ",
    "// Lists
    
    // Unstyled keeps list items block level, just removes default browser padding and list-style
    @mixin list-unstyled {
      padding-left: 0;
      list-style: none;
    }
    ",
    "// Responsive images (ensure images don't scale beyond their parents)
    //
    // This is purposefully opt-in via an explicit class rather than being the default for all `<img>`s.
    // We previously tried the "images are responsive by default" approach in Bootstrap v2,
    // and abandoned it in Bootstrap v3 because it breaks lots of third-party widgets (including Google Maps)
    // which weren't expecting the images within themselves to be involuntarily resized.
    // See also https://github.com/twbs/bootstrap/issues/18178
    .img-fluid {
      @include img-fluid();
    }
    
    
    // Image thumbnails
    .img-thumbnail {
      padding: $thumbnail-padding;
      background-color: $thumbnail-bg;
      border: $thumbnail-border-width solid $thumbnail-border-color;
      @include border-radius($thumbnail-border-radius);
      @include box-shadow($thumbnail-box-shadow);
    
      // Keep them at most 100% wide
      @include img-fluid();
    }
    
    //
    // Figures
    //
    
    .figure {
      // Ensures the caption's text aligns with the image.
      display: inline-block;
    }
    
    .figure-img {
      margin-bottom: $spacer * .5;
      line-height: 1;
    }
    
    .figure-caption {
      @include font-size($figure-caption-font-size);
      color: $figure-caption-color;
    }
    ",
    "// Image Mixins
    // - Responsive image
    // - Retina image
    
    
    // Responsive image
    //
    // Keep images from scaling beyond the width of their parents.
    
    @mixin img-fluid {
      // Part 1: Set a maximum relative to the parent
      max-width: 100%;
      // Part 2: Override the height to auto, otherwise images will be stretched
      // when setting a width and height attribute on the img element.
      height: auto;
    }
    ",
    "// Container widths
    //
    // Set the container width, and override it for fixed navbars in media queries.
    
    @if $enable-container-classes {
      // Single container class with breakpoint max-widths
      .container,
      // 100% wide container at all breakpoints
      .container-fluid {
        @include make-container();
      }
    
      // Responsive containers that are 100% wide until a breakpoint
      @each $breakpoint, $container-max-width in $container-max-widths {
        .container-#{$breakpoint} {
          @extend .container-fluid;
        }
    
        @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
          %responsive-container-#{$breakpoint} {
            max-width: $container-max-width;
          }
    
          // Extend each breakpoint which is smaller or equal to the current breakpoint
          $extend-breakpoint: true;
    
          @each $name, $width in $grid-breakpoints {
            @if ($extend-breakpoint) {
              .container#{breakpoint-infix($name, $grid-breakpoints)} {
                @extend %responsive-container-#{$breakpoint};
              }
    
              // Once the current breakpoint is reached, stop extending
              @if ($breakpoint == $name) {
                $extend-breakpoint: false;
              }
            }
          }
        }
      }
    }
    ",
    "// Container mixins
    
    @mixin make-container($gutter: $container-padding-x) {
      --#{$prefix}gutter-x: #{$gutter};
      --#{$prefix}gutter-y: 0;
      width: 100%;
      padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list
      padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list
      margin-right: auto;
      margin-left: auto;
    }
    ",
    "// Breakpoint viewport sizes and media queries.
    //
    // Breakpoints are defined as a map of (name: minimum width), order from small to large:
    //
    //    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)
    //
    // The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.
    
    // Name of the next breakpoint, or null for the last breakpoint.
    //
    //    >> breakpoint-next(sm)
    //    md
    //    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
    //    md
    //    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))
    //    md
    @function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
      $n: index($breakpoint-names, $name);
      @if not $n {
        @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
      }
      @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
    }
    
    // Minimum breakpoint width. Null for the smallest (first) breakpoint.
    //
    //    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
    //    576px
    @function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
      $min: map-get($breakpoints, $name);
      @return if($min != 0, $min, null);
    }
    
    // Maximum breakpoint width.
    // The maximum value is reduced by 0.02px to work around the limitations of
    // `min-` and `max-` prefixes and viewports with fractional widths.
    // See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
    // Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
    // See https://bugs.webkit.org/show_bug.cgi?id=178261
    //
    //    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
    //    767.98px
    @function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
      $max: map-get($breakpoints, $name);
      @return if($max and $max > 0, $max - .02, null);
    }
    
    // Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
    // Useful for making responsive utilities.
    //
    //    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
    //    ""  (Returns a blank string)
    //    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
    //    "-sm"
    @function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
      @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
    }
    
    // Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
    // Makes the @content apply to the given breakpoint and wider.
    @mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
      $min: breakpoint-min($name, $breakpoints);
      @if $min {
        @media (min-width: $min) {
          @content;
        }
      } @else {
        @content;
      }
    }
    
    // Media of at most the maximum breakpoint width. No query for the largest breakpoint.
    // Makes the @content apply to the given breakpoint and narrower.
    @mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
      $max: breakpoint-max($name, $breakpoints);
      @if $max {
        @media (max-width: $max) {
          @content;
        }
      } @else {
        @content;
      }
    }
    
    // Media that spans multiple breakpoint widths.
    // Makes the @content apply between the min and max breakpoints
    @mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
      $min: breakpoint-min($lower, $breakpoints);
      $max: breakpoint-max($upper, $breakpoints);
    
      @if $min != null and $max != null {
        @media (min-width: $min) and (max-width: $max) {
          @content;
        }
      } @else if $max == null {
        @include media-breakpoint-up($lower, $breakpoints) {
          @content;
        }
      } @else if $min == null {
        @include media-breakpoint-down($upper, $breakpoints) {
          @content;
        }
      }
    }
    
    // Media between the breakpoint's minimum and maximum widths.
    // No minimum for the smallest breakpoint, and no maximum for the largest one.
    // Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
    @mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
      $min:  breakpoint-min($name, $breakpoints);
      $next: breakpoint-next($name, $breakpoints);
      $max:  breakpoint-max($next, $breakpoints);
    
      @if $min != null and $max != null {
        @media (min-width: $min) and (max-width: $max) {
          @content;
        }
      } @else if $max == null {
        @include media-breakpoint-up($name, $breakpoints) {
          @content;
        }
      } @else if $min == null {
        @include media-breakpoint-down($next, $breakpoints) {
          @content;
        }
      }
    }
    ",
    "// Row
    //
    // Rows contain your columns.
    
    @if $enable-grid-classes {
      .row {
        @include make-row();
    
        > * {
          @include make-col-ready();
        }
      }
    }
    
    @if $enable-cssgrid {
      .grid {
        display: grid;
        grid-template-rows: repeat(var(--#{$prefix}rows, 1), 1fr);
        grid-template-columns: repeat(var(--#{$prefix}columns, #{$grid-columns}), 1fr);
        gap: var(--#{$prefix}gap, #{$grid-gutter-width});
    
        @include make-cssgrid();
      }
    }
    
    
    // Columns
    //
    // Common styles for small and large grid columns
    
    @if $enable-grid-classes {
      @include make-grid-columns();
    }
    ",
    "// Grid system
    //
    // Generate semantic grid columns with these mixins.
    
    @mixin make-row($gutter: $grid-gutter-width) {
      --#{$prefix}gutter-x: #{$gutter};
      --#{$prefix}gutter-y: 0;
      display: flex;
      flex-wrap: wrap;
      // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed
      margin-top: calc(-1 * var(--#{$prefix}gutter-y)); // stylelint-disable-line function-disallowed-list
      margin-right: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list
      margin-left: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list
    }
    
    @mixin make-col-ready() {
      // Add box sizing if only the grid is loaded
      box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);
      // Prevent columns from becoming too narrow when at smaller grid tiers by
      // always setting `width: 100%;`. This works because we set the width
      // later on to override this initial width.
      flex-shrink: 0;
      width: 100%;
      max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid
      padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list
      padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list
      margin-top: var(--#{$prefix}gutter-y);
    }
    
    @mixin make-col($size: false, $columns: $grid-columns) {
      @if $size {
        flex: 0 0 auto;
        width: percentage(divide($size, $columns));
    
      } @else {
        flex: 1 1 0;
        max-width: 100%;
      }
    }
    
    @mixin make-col-auto() {
      flex: 0 0 auto;
      width: auto;
    }
    
    @mixin make-col-offset($size, $columns: $grid-columns) {
      $num: divide($size, $columns);
      margin-left: if($num == 0, 0, percentage($num));
    }
    
    // Row columns
    //
    // Specify on a parent element(e.g., .row) to force immediate children into NN
    // number of columns. Supports wrapping to new lines, but does not do a Masonry
    // style grid.
    @mixin row-cols($count) {
      > * {
        flex: 0 0 auto;
        width: divide(100%, $count);
      }
    }
    
    // Framework grid generation
    //
    // Used only by Bootstrap to generate the correct number of grid classes given
    // any value of `$grid-columns`.
    
    @mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
      @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);
    
        @include media-breakpoint-up($breakpoint, $breakpoints) {
          // Provide basic `.col-{bp}` classes for equal-width flexbox columns
          .col#{$infix} {
            flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
          }
    
          .row-cols#{$infix}-auto > * {
            @include make-col-auto();
          }
    
          @if $grid-row-columns > 0 {
            @for $i from 1 through $grid-row-columns {
              .row-cols#{$infix}-#{$i} {
                @include row-cols($i);
              }
            }
          }
    
          .col#{$infix}-auto {
            @include make-col-auto();
          }
    
          @if $columns > 0 {
            @for $i from 1 through $columns {
              .col#{$infix}-#{$i} {
                @include make-col($i, $columns);
              }
            }
    
            // `$columns - 1` because offsetting by the width of an entire row isn't possible
            @for $i from 0 through ($columns - 1) {
              @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
                .offset#{$infix}-#{$i} {
                  @include make-col-offset($i, $columns);
                }
              }
            }
          }
    
          // Gutters
          //
          // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
          @each $key, $value in $gutters {
            .g#{$infix}-#{$key},
            .gx#{$infix}-#{$key} {
              --#{$prefix}gutter-x: #{$value};
            }
    
            .g#{$infix}-#{$key},
            .gy#{$infix}-#{$key} {
              --#{$prefix}gutter-y: #{$value};
            }
          }
        }
      }
    }
    
    @mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {
      @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);
    
        @include media-breakpoint-up($breakpoint, $breakpoints) {
          @if $columns > 0 {
            @for $i from 1 through $columns {
              .g-col#{$infix}-#{$i} {
                grid-column: auto / span $i;
              }
            }
    
            // Start with `1` because `0` is and invalid value.
            // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.
            @for $i from 1 through ($columns - 1) {
              .g-start#{$infix}-#{$i} {
                grid-column-start: $i;
              }
            }
          }
        }
      }
    }
    ",
    "//
    // Basic Bootstrap table
    //
    
    .table {
      --#{$prefix}table-color: #{$table-color};
      --#{$prefix}table-bg: #{$table-bg};
      --#{$prefix}table-border-color: #{$table-border-color};
      --#{$prefix}table-accent-bg: #{$table-accent-bg};
      --#{$prefix}table-striped-color: #{$table-striped-color};
      --#{$prefix}table-striped-bg: #{$table-striped-bg};
      --#{$prefix}table-active-color: #{$table-active-color};
      --#{$prefix}table-active-bg: #{$table-active-bg};
      --#{$prefix}table-hover-color: #{$table-hover-color};
      --#{$prefix}table-hover-bg: #{$table-hover-bg};
    
      width: 100%;
      margin-bottom: $spacer;
      color: var(--#{$prefix}table-color);
      vertical-align: $table-cell-vertical-align;
      border-color: var(--#{$prefix}table-border-color);
    
      // Target th & td
      // We need the child combinator to prevent styles leaking to nested tables which doesn't have a `.table` class.
      // We use the universal selectors here to simplify the selector (else we would need 6 different selectors).
      // Another advantage is that this generates less code and makes the selector less specific making it easier to override.
      // stylelint-disable-next-line selector-max-universal
      > :not(caption) > * > * {
        padding: $table-cell-padding-y $table-cell-padding-x;
        background-color: var(--#{$prefix}table-bg);
        border-bottom-width: $table-border-width;
        box-shadow: inset 0 0 0 9999px var(--#{$prefix}table-accent-bg);
      }
    
      > tbody {
        vertical-align: inherit;
      }
    
      > thead {
        vertical-align: bottom;
      }
    }
    
    .table-group-divider {
      border-top: ($table-border-width * 2) solid $table-group-separator-color;
    }
    
    //
    // Change placement of captions with a class
    //
    
    .caption-top {
      caption-side: top;
    }
    
    
    //
    // Condensed table w/ half padding
    //
    
    .table-sm {
      // stylelint-disable-next-line selector-max-universal
      > :not(caption) > * > * {
        padding: $table-cell-padding-y-sm $table-cell-padding-x-sm;
      }
    }
    
    
    // Border versions
    //
    // Add or remove borders all around the table and between all the columns.
    //
    // When borders are added on all sides of the cells, the corners can render odd when
    // these borders do not have the same color or if they are semi-transparent.
    // Therefor we add top and border bottoms to the `tr`s and left and right borders
    // to the `td`s or `th`s
    
    .table-bordered {
      > :not(caption) > * {
        border-width: $table-border-width 0;
    
        // stylelint-disable-next-line selector-max-universal
        > * {
          border-width: 0 $table-border-width;
        }
      }
    }
    
    .table-borderless {
      // stylelint-disable-next-line selector-max-universal
      > :not(caption) > * > * {
        border-bottom-width: 0;
      }
    
      > :not(:first-child) {
        border-top-width: 0;
      }
    }
    
    // Zebra-striping
    //
    // Default zebra-stripe styles (alternating gray and transparent backgrounds)
    
    // For rows
    .table-striped {
      > tbody > tr:nth-of-type(#{$table-striped-order}) > * {
        --#{$prefix}table-accent-bg: var(--#{$prefix}table-striped-bg);
        color: var(--#{$prefix}table-striped-color);
      }
    }
    
    // For columns
    .table-striped-columns {
      > :not(caption) > tr > :nth-child(#{$table-striped-columns-order}) {
        --#{$prefix}table-accent-bg: var(--#{$prefix}table-striped-bg);
        color: var(--#{$prefix}table-striped-color);
      }
    }
    
    // Active table
    //
    // The `.table-active` class can be added to highlight rows or cells
    
    .table-active {
      --#{$prefix}table-accent-bg: var(--#{$prefix}table-active-bg);
      color: var(--#{$prefix}table-active-color);
    }
    
    // Hover effect
    //
    // Placed here since it has to come after the potential zebra striping
    
    .table-hover {
      > tbody > tr:hover > * {
        --#{$prefix}table-accent-bg: var(--#{$prefix}table-hover-bg);
        color: var(--#{$prefix}table-hover-color);
      }
    }
    
    
    // Table variants
    //
    // Table variants set the table cell backgrounds, border colors
    // and the colors of the striped, hovered & active tables
    
    @each $color, $value in $table-variants {
      @include table-variant($color, $value);
    }
    
    // Responsive tables
    //
    // Generate series of `.table-responsive-*` classes for configuring the screen
    // size of where your table will overflow.
    
    @each $breakpoint in map-keys($grid-breakpoints) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    
      @include media-breakpoint-down($breakpoint) {
        .table-responsive#{$infix} {
          overflow-x: auto;
          -webkit-overflow-scrolling: touch;
        }
      }
    }
    ",
    "// scss-docs-start table-variant
    @mixin table-variant($state, $background) {
      .table-#{$state} {
        $color: color-contrast(opaque($body-bg, $background));
        $hover-bg: mix($color, $background, percentage($table-hover-bg-factor));
        $striped-bg: mix($color, $background, percentage($table-striped-bg-factor));
        $active-bg: mix($color, $background, percentage($table-active-bg-factor));
        $border-color: mix($color, $background, percentage($table-border-factor));
    
        --#{$prefix}table-color: #{$color};
        --#{$prefix}table-bg: #{$background};
        --#{$prefix}table-border-color: #{$border-color};
        --#{$prefix}table-striped-bg: #{$striped-bg};
        --#{$prefix}table-striped-color: #{color-contrast($striped-bg)};
        --#{$prefix}table-active-bg: #{$active-bg};
        --#{$prefix}table-active-color: #{color-contrast($active-bg)};
        --#{$prefix}table-hover-bg: #{$hover-bg};
        --#{$prefix}table-hover-color: #{color-contrast($hover-bg)};
    
        color: var(--#{$prefix}table-color);
        border-color: var(--#{$prefix}table-border-color);
      }
    }
    // scss-docs-end table-variant
    ",
    "//
    // Labels
    //
    
    .form-label {
      margin-bottom: $form-label-margin-bottom;
      @include font-size($form-label-font-size);
      font-style: $form-label-font-style;
      font-weight: $form-label-font-weight;
      color: $form-label-color;
    }
    
    // For use with horizontal and inline forms, when you need the label (or legend)
    // text to align with the form controls.
    .col-form-label {
      padding-top: add($input-padding-y, $input-border-width);
      padding-bottom: add($input-padding-y, $input-border-width);
      margin-bottom: 0; // Override the `<legend>` default
      @include font-size(inherit); // Override the `<legend>` default
      font-style: $form-label-font-style;
      font-weight: $form-label-font-weight;
      line-height: $input-line-height;
      color: $form-label-color;
    }
    
    .col-form-label-lg {
      padding-top: add($input-padding-y-lg, $input-border-width);
      padding-bottom: add($input-padding-y-lg, $input-border-width);
      @include font-size($input-font-size-lg);
    }
    
    .col-form-label-sm {
      padding-top: add($input-padding-y-sm, $input-border-width);
      padding-bottom: add($input-padding-y-sm, $input-border-width);
      @include font-size($input-font-size-sm);
    }
    ",
    "//
    // Form text
    //
    
    .form-text {
      margin-top: $form-text-margin-top;
      @include font-size($form-text-font-size);
      font-style: $form-text-font-style;
      font-weight: $form-text-font-weight;
      color: $form-text-color;
    }
    ",
    "//
    // General form controls (plus a few specific high-level interventions)
    //
    
    .form-control {
      display: block;
      width: 100%;
      padding: $input-padding-y $input-padding-x;
      font-family: $input-font-family;
      @include font-size($input-font-size);
      font-weight: $input-font-weight;
      line-height: $input-line-height;
      color: $input-color;
      background-color: $input-bg;
      background-clip: padding-box;
      border: $input-border-width solid $input-border-color;
      appearance: none; // Fix appearance for date inputs in Safari
    
      // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
      @include border-radius($input-border-radius, 0);
    
      @include box-shadow($input-box-shadow);
      @include transition($input-transition);
    
      &[type="file"] {
        overflow: hidden; // prevent pseudo element button overlap
    
        &:not(:disabled):not([readonly]) {
          cursor: pointer;
        }
      }
    
      // Customize the `:focus` state to imitate native WebKit styles.
      &:focus {
        color: $input-focus-color;
        background-color: $input-focus-bg;
        border-color: $input-focus-border-color;
        outline: 0;
        @if $enable-shadows {
          @include box-shadow($input-box-shadow, $input-focus-box-shadow);
        } @else {
          // Avoid using mixin so we can pass custom focus shadow properly
          box-shadow: $input-focus-box-shadow;
        }
      }
    
      // Add some height to date inputs on iOS
      // https://github.com/twbs/bootstrap/issues/23307
      // TODO: we can remove this workaround once https://bugs.webkit.org/show_bug.cgi?id=198959 is resolved
      &::-webkit-date-and-time-value {
        // Multiply line-height by 1em if it has no unit
        height: if(unit($input-line-height) == "", $input-line-height * 1em, $input-line-height);
      }
    
      // Placeholder
      &::placeholder {
        color: $input-placeholder-color;
        // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
        opacity: 1;
      }
    
      // Disabled inputs
      //
      // HTML5 says that controls under a fieldset > legend:first-child won't be
      // disabled if the fieldset is disabled. Due to implementation difficulty, we
      // don't honor that edge case; we style them as disabled anyway.
      &:disabled {
        color: $input-disabled-color;
        background-color: $input-disabled-bg;
        border-color: $input-disabled-border-color;
        // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
        opacity: 1;
      }
    
      // File input buttons theming
      &::file-selector-button {
        padding: $input-padding-y $input-padding-x;
        margin: (-$input-padding-y) (-$input-padding-x);
        margin-inline-end: $input-padding-x;
        color: $form-file-button-color;
        @include gradient-bg($form-file-button-bg);
        pointer-events: none;
        border-color: inherit;
        border-style: solid;
        border-width: 0;
        border-inline-end-width: $input-border-width;
        border-radius: 0; // stylelint-disable-line property-disallowed-list
        @include transition($btn-transition);
      }
    
      &:hover:not(:disabled):not([readonly])::file-selector-button {
        background-color: $form-file-button-hover-bg;
      }
    }
    
    // Readonly controls as plain text
    //
    // Apply class to a readonly input to make it appear like regular plain
    // text (without any border, background color, focus indicator)
    
    .form-control-plaintext {
      display: block;
      width: 100%;
      padding: $input-padding-y 0;
      margin-bottom: 0; // match inputs if this class comes on inputs with default margins
      line-height: $input-line-height;
      color: $input-plaintext-color;
      background-color: transparent;
      border: solid transparent;
      border-width: $input-border-width 0;
    
      &:focus {
        outline: 0;
      }
    
      &.form-control-sm,
      &.form-control-lg {
        padding-right: 0;
        padding-left: 0;
      }
    }
    
    // Form control sizing
    //
    // Build on `.form-control` with modifier classes to decrease or increase the
    // height and font-size of form controls.
    //
    // Repeated in `_input_group.scss` to avoid Sass extend issues.
    
    .form-control-sm {
      min-height: $input-height-sm;
      padding: $input-padding-y-sm $input-padding-x-sm;
      @include font-size($input-font-size-sm);
      @include border-radius($input-border-radius-sm);
    
      &::file-selector-button {
        padding: $input-padding-y-sm $input-padding-x-sm;
        margin: (-$input-padding-y-sm) (-$input-padding-x-sm);
        margin-inline-end: $input-padding-x-sm;
      }
    }
    
    .form-control-lg {
      min-height: $input-height-lg;
      padding: $input-padding-y-lg $input-padding-x-lg;
      @include font-size($input-font-size-lg);
      @include border-radius($input-border-radius-lg);
    
      &::file-selector-button {
        padding: $input-padding-y-lg $input-padding-x-lg;
        margin: (-$input-padding-y-lg) (-$input-padding-x-lg);
        margin-inline-end: $input-padding-x-lg;
      }
    }
    
    // Make sure textareas don't shrink too much when resized
    // https://github.com/twbs/bootstrap/pull/29124
    // stylelint-disable selector-no-qualifying-type
    textarea {
      &.form-control {
        min-height: $input-height;
      }
    
      &.form-control-sm {
        min-height: $input-height-sm;
      }
    
      &.form-control-lg {
        min-height: $input-height-lg;
      }
    }
    // stylelint-enable selector-no-qualifying-type
    
    .form-control-color {
      width: $form-color-width;
      height: $input-height;
      padding: $input-padding-y;
    
      &:not(:disabled):not([readonly]) {
        cursor: pointer;
      }
    
      &::-moz-color-swatch {
        border: 0 !important; // stylelint-disable-line declaration-no-important
        @include border-radius($input-border-radius);
      }
    
      &::-webkit-color-swatch {
        @include border-radius($input-border-radius);
      }
    
      &.form-control-sm { height: $input-height-sm; }
      &.form-control-lg { height: $input-height-lg; }
    }
    ",
    "// stylelint-disable property-disallowed-list
    @mixin transition($transition...) {
      @if length($transition) == 0 {
        $transition: $transition-base;
      }
    
      @if length($transition) > 1 {
        @each $value in $transition {
          @if $value == null or $value == none {
            @warn "The keyword 'none' or 'null' must be used as a single argument.";
          }
        }
      }
    
      @if $enable-transitions {
        @if nth($transition, 1) != null {
          transition: $transition;
        }
    
        @if $enable-reduced-motion and nth($transition, 1) != null and nth($transition, 1) != none {
          @media (prefers-reduced-motion: reduce) {
            transition: none;
          }
        }
      }
    }
    ",
    "// Gradients
    
    // scss-docs-start gradient-bg-mixin
    @mixin gradient-bg($color: null) {
      background-color: $color;
    
      @if $enable-gradients {
        background-image: var(--#{$prefix}gradient);
      }
    }
    // scss-docs-end gradient-bg-mixin
    
    // scss-docs-start gradient-mixins
    // Horizontal gradient, from left to right
    //
    // Creates two color stops, start and end, by specifying a color and position for each color stop.
    @mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
      background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
    }
    
    // Vertical gradient, from top to bottom
    //
    // Creates two color stops, start and end, by specifying a color and position for each color stop.
    @mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: null, $end-percent: null) {
      background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
    }
    
    @mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {
      background-image: linear-gradient($deg, $start-color, $end-color);
    }
    
    @mixin gradient-x-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {
      background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
    }
    
    @mixin gradient-y-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {
      background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
    }
    
    @mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {
      background-image: radial-gradient(circle, $inner-color, $outer-color);
    }
    
    @mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {
      background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
    }
    // scss-docs-end gradient-mixins
    ",
    "// Select
    //
    // Replaces the browser default select with a custom one, mostly pulled from
    // https://primer.github.io/.
    
    .form-select {
      display: block;
      width: 100%;
      padding: $form-select-padding-y $form-select-indicator-padding $form-select-padding-y $form-select-padding-x;
      -moz-padding-start: subtract($form-select-padding-x, 3px); // See https://github.com/twbs/bootstrap/issues/32636
      font-family: $form-select-font-family;
      @include font-size($form-select-font-size);
      font-weight: $form-select-font-weight;
      line-height: $form-select-line-height;
      color: $form-select-color;
      background-color: $form-select-bg;
      background-image: escape-svg($form-select-indicator);
      background-repeat: no-repeat;
      background-position: $form-select-bg-position;
      background-size: $form-select-bg-size;
      border: $form-select-border-width solid $form-select-border-color;
      @include border-radius($form-select-border-radius, 0);
      @include box-shadow($form-select-box-shadow);
      @include transition($form-select-transition);
      appearance: none;
    
      &:focus {
        border-color: $form-select-focus-border-color;
        outline: 0;
        @if $enable-shadows {
          @include box-shadow($form-select-box-shadow, $form-select-focus-box-shadow);
        } @else {
          // Avoid using mixin so we can pass custom focus shadow properly
          box-shadow: $form-select-focus-box-shadow;
        }
      }
    
      &[multiple],
      &[size]:not([size="1"]) {
        padding-right: $form-select-padding-x;
        background-image: none;
      }
    
      &:disabled {
        color: $form-select-disabled-color;
        background-color: $form-select-disabled-bg;
        border-color: $form-select-disabled-border-color;
      }
    
      // Remove outline from select box in FF
      &:-moz-focusring {
        color: transparent;
        text-shadow: 0 0 0 $form-select-color;
      }
    }
    
    .form-select-sm {
      padding-top: $form-select-padding-y-sm;
      padding-bottom: $form-select-padding-y-sm;
      padding-left: $form-select-padding-x-sm;
      @include font-size($form-select-font-size-sm);
      @include border-radius($form-select-border-radius-sm);
    }
    
    .form-select-lg {
      padding-top: $form-select-padding-y-lg;
      padding-bottom: $form-select-padding-y-lg;
      padding-left: $form-select-padding-x-lg;
      @include font-size($form-select-font-size-lg);
      @include border-radius($form-select-border-radius-lg);
    }
    ",
    "//
    // Check/radio
    //
    
    .form-check {
      display: block;
      min-height: $form-check-min-height;
      padding-left: $form-check-padding-start;
      margin-bottom: $form-check-margin-bottom;
    
      .form-check-input {
        float: left;
        margin-left: $form-check-padding-start * -1;
      }
    }
    
    .form-check-reverse {
      padding-right: $form-check-padding-start;
      padding-left: 0;
      text-align: right;
    
      .form-check-input {
        float: right;
        margin-right: $form-check-padding-start * -1;
        margin-left: 0;
      }
    }
    
    .form-check-input {
      width: $form-check-input-width;
      height: $form-check-input-width;
      margin-top: ($line-height-base - $form-check-input-width) * .5; // line-height minus check height
      vertical-align: top;
      background-color: $form-check-input-bg;
      background-repeat: no-repeat;
      background-position: center;
      background-size: contain;
      border: $form-check-input-border;
      appearance: none;
      print-color-adjust: exact; // Keep themed appearance for print
      @include transition($form-check-transition);
    
      &[type="checkbox"] {
        @include border-radius($form-check-input-border-radius);
      }
    
      &[type="radio"] {
        // stylelint-disable-next-line property-disallowed-list
        border-radius: $form-check-radio-border-radius;
      }
    
      &:active {
        filter: $form-check-input-active-filter;
      }
    
      &:focus {
        border-color: $form-check-input-focus-border;
        outline: 0;
        box-shadow: $form-check-input-focus-box-shadow;
      }
    
      &:checked {
        background-color: $form-check-input-checked-bg-color;
        border-color: $form-check-input-checked-border-color;
    
        &[type="checkbox"] {
          @if $enable-gradients {
            background-image: escape-svg($form-check-input-checked-bg-image), var(--#{$prefix}gradient);
          } @else {
            background-image: escape-svg($form-check-input-checked-bg-image);
          }
        }
    
        &[type="radio"] {
          @if $enable-gradients {
            background-image: escape-svg($form-check-radio-checked-bg-image), var(--#{$prefix}gradient);
          } @else {
            background-image: escape-svg($form-check-radio-checked-bg-image);
          }
        }
      }
    
      &[type="checkbox"]:indeterminate {
        background-color: $form-check-input-indeterminate-bg-color;
        border-color: $form-check-input-indeterminate-border-color;
    
        @if $enable-gradients {
          background-image: escape-svg($form-check-input-indeterminate-bg-image), var(--#{$prefix}gradient);
        } @else {
          background-image: escape-svg($form-check-input-indeterminate-bg-image);
        }
      }
    
      &:disabled {
        pointer-events: none;
        filter: none;
        opacity: $form-check-input-disabled-opacity;
      }
    
      // Use disabled attribute in addition of :disabled pseudo-class
      // See: https://github.com/twbs/bootstrap/issues/28247
      &[disabled],
      &:disabled {
        ~ .form-check-label {
          cursor: default;
          opacity: $form-check-label-disabled-opacity;
        }
      }
    }
    
    .form-check-label {
      color: $form-check-label-color;
      cursor: $form-check-label-cursor;
    }
    
    //
    // Switch
    //
    
    .form-switch {
      padding-left: $form-switch-padding-start;
    
      .form-check-input {
        width: $form-switch-width;
        margin-left: $form-switch-padding-start * -1;
        background-image: escape-svg($form-switch-bg-image);
        background-position: left center;
        @include border-radius($form-switch-border-radius);
        @include transition($form-switch-transition);
    
        &:focus {
          background-image: escape-svg($form-switch-focus-bg-image);
        }
    
        &:checked {
          background-position: $form-switch-checked-bg-position;
    
          @if $enable-gradients {
            background-image: escape-svg($form-switch-checked-bg-image), var(--#{$prefix}gradient);
          } @else {
            background-image: escape-svg($form-switch-checked-bg-image);
          }
        }
      }
    
      &.form-check-reverse {
        padding-right: $form-switch-padding-start;
        padding-left: 0;
    
        .form-check-input {
          margin-right: $form-switch-padding-start * -1;
          margin-left: 0;
        }
      }
    }
    
    .form-check-inline {
      display: inline-block;
      margin-right: $form-check-inline-margin-end;
    }
    
    .btn-check {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
    
      &[disabled],
      &:disabled {
        + .btn {
          pointer-events: none;
          filter: none;
          opacity: $form-check-btn-check-disabled-opacity;
        }
      }
    }
    ",
    "// Range
    //
    // Style range inputs the same across browsers. Vendor-specific rules for pseudo
    // elements cannot be mixed. As such, there are no shared styles for focus or
    // active states on prefixed selectors.
    
    .form-range {
      width: 100%;
      height: add($form-range-thumb-height, $form-range-thumb-focus-box-shadow-width * 2);
      padding: 0; // Need to reset padding
      background-color: transparent;
      appearance: none;
    
      &:focus {
        outline: 0;
    
        // Pseudo-elements must be split across multiple rulesets to have an effect.
        // No box-shadow() mixin for focus accessibility.
        &::-webkit-slider-thumb { box-shadow: $form-range-thumb-focus-box-shadow; }
        &::-moz-range-thumb     { box-shadow: $form-range-thumb-focus-box-shadow; }
      }
    
      &::-moz-focus-outer {
        border: 0;
      }
    
      &::-webkit-slider-thumb {
        width: $form-range-thumb-width;
        height: $form-range-thumb-height;
        margin-top: ($form-range-track-height - $form-range-thumb-height) * .5; // Webkit specific
        @include gradient-bg($form-range-thumb-bg);
        border: $form-range-thumb-border;
        @include border-radius($form-range-thumb-border-radius);
        @include box-shadow($form-range-thumb-box-shadow);
        @include transition($form-range-thumb-transition);
        appearance: none;
    
        &:active {
          @include gradient-bg($form-range-thumb-active-bg);
        }
      }
    
      &::-webkit-slider-runnable-track {
        width: $form-range-track-width;
        height: $form-range-track-height;
        color: transparent; // Why?
        cursor: $form-range-track-cursor;
        background-color: $form-range-track-bg;
        border-color: transparent;
        @include border-radius($form-range-track-border-radius);
        @include box-shadow($form-range-track-box-shadow);
      }
    
      &::-moz-range-thumb {
        width: $form-range-thumb-width;
        height: $form-range-thumb-height;
        @include gradient-bg($form-range-thumb-bg);
        border: $form-range-thumb-border;
        @include border-radius($form-range-thumb-border-radius);
        @include box-shadow($form-range-thumb-box-shadow);
        @include transition($form-range-thumb-transition);
        appearance: none;
    
        &:active {
          @include gradient-bg($form-range-thumb-active-bg);
        }
      }
    
      &::-moz-range-track {
        width: $form-range-track-width;
        height: $form-range-track-height;
        color: transparent;
        cursor: $form-range-track-cursor;
        background-color: $form-range-track-bg;
        border-color: transparent; // Firefox specific?
        @include border-radius($form-range-track-border-radius);
        @include box-shadow($form-range-track-box-shadow);
      }
    
      &:disabled {
        pointer-events: none;
    
        &::-webkit-slider-thumb {
          background-color: $form-range-thumb-disabled-bg;
        }
    
        &::-moz-range-thumb {
          background-color: $form-range-thumb-disabled-bg;
        }
      }
    }
    ",
    ".form-floating {
      position: relative;
    
      > .form-control,
      > .form-control-plaintext,
      > .form-select {
        height: $form-floating-height;
        line-height: $form-floating-line-height;
      }
    
      > label {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%; // allow textareas
        padding: $form-floating-padding-y $form-floating-padding-x;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        pointer-events: none;
        border: $input-border-width solid transparent; // Required for aligning label's text with the input as it affects inner box model
        transform-origin: 0 0;
        @include transition($form-floating-transition);
      }
    
      > .form-control,
      > .form-control-plaintext {
        padding: $form-floating-padding-y $form-floating-padding-x;
    
        &::placeholder {
          color: transparent;
        }
    
        &:focus,
        &:not(:placeholder-shown) {
          padding-top: $form-floating-input-padding-t;
          padding-bottom: $form-floating-input-padding-b;
        }
        // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
        &:-webkit-autofill {
          padding-top: $form-floating-input-padding-t;
          padding-bottom: $form-floating-input-padding-b;
        }
      }
    
      > .form-select {
        padding-top: $form-floating-input-padding-t;
        padding-bottom: $form-floating-input-padding-b;
      }
    
      > .form-control:focus,
      > .form-control:not(:placeholder-shown),
      > .form-control-plaintext,
      > .form-select {
        ~ label {
          opacity: $form-floating-label-opacity;
          transform: $form-floating-label-transform;
        }
      }
      // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
      > .form-control:-webkit-autofill {
        ~ label {
          opacity: $form-floating-label-opacity;
          transform: $form-floating-label-transform;
        }
      }
    
      > .form-control-plaintext {
        ~ label {
          border-width: $input-border-width 0; // Required to properly position label text - as explained above
        }
      }
    }
    ",
    "//
    // Base styles
    //
    
    .input-group {
      position: relative;
      display: flex;
      flex-wrap: wrap; // For form validation feedback
      align-items: stretch;
      width: 100%;
    
      > .form-control,
      > .form-select,
      > .form-floating {
        position: relative; // For focus state's z-index
        flex: 1 1 auto;
        width: 1%;
        min-width: 0; // https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
      }
    
      // Bring the "active" form control to the top of surrounding elements
      > .form-control:focus,
      > .form-select:focus,
      > .form-floating:focus-within {
        z-index: 3;
      }
    
      // Ensure buttons are always above inputs for more visually pleasing borders.
      // This isn't needed for `.input-group-text` since it shares the same border-color
      // as our inputs.
      .btn {
        position: relative;
        z-index: 2;
    
        &:focus {
          z-index: 3;
        }
      }
    }
    
    
    // Textual addons
    //
    // Serves as a catch-all element for any text or radio/checkbox input you wish
    // to prepend or append to an input.
    
    .input-group-text {
      display: flex;
      align-items: center;
      padding: $input-group-addon-padding-y $input-group-addon-padding-x;
      @include font-size($input-font-size); // Match inputs
      font-weight: $input-group-addon-font-weight;
      line-height: $input-line-height;
      color: $input-group-addon-color;
      text-align: center;
      white-space: nowrap;
      background-color: $input-group-addon-bg;
      border: $input-border-width solid $input-group-addon-border-color;
      @include border-radius($input-border-radius);
    }
    
    
    // Sizing
    //
    // Remix the default form control sizing classes into new ones for easier
    // manipulation.
    
    .input-group-lg > .form-control,
    .input-group-lg > .form-select,
    .input-group-lg > .input-group-text,
    .input-group-lg > .btn {
      padding: $input-padding-y-lg $input-padding-x-lg;
      @include font-size($input-font-size-lg);
      @include border-radius($input-border-radius-lg);
    }
    
    .input-group-sm > .form-control,
    .input-group-sm > .form-select,
    .input-group-sm > .input-group-text,
    .input-group-sm > .btn {
      padding: $input-padding-y-sm $input-padding-x-sm;
      @include font-size($input-font-size-sm);
      @include border-radius($input-border-radius-sm);
    }
    
    .input-group-lg > .form-select,
    .input-group-sm > .form-select {
      padding-right: $form-select-padding-x + $form-select-indicator-padding;
    }
    
    
    // Rounded corners
    //
    // These rulesets must come after the sizing ones to properly override sm and lg
    // border-radius values when extending. They're more specific than we'd like
    // with the `.input-group >` part, but without it, we cannot override the sizing.
    
    // stylelint-disable-next-line no-duplicate-selectors
    .input-group {
      &:not(.has-validation) {
        > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
        > .dropdown-toggle:nth-last-child(n + 3),
        > .form-floating:not(:last-child) > .form-control,
        > .form-floating:not(:last-child) > .form-select {
          @include border-end-radius(0);
        }
      }
    
      &.has-validation {
        > :nth-last-child(n + 3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
        > .dropdown-toggle:nth-last-child(n + 4),
        > .form-floating:nth-last-child(n + 3) > .form-control,
        > .form-floating:nth-last-child(n + 3) > .form-select {
          @include border-end-radius(0);
        }
      }
    
      $validation-messages: "";
      @each $state in map-keys($form-validation-states) {
        $validation-messages: $validation-messages + ":not(." + unquote($state) + "-tooltip)" + ":not(." + unquote($state) + "-feedback)";
      }
    
      > :not(:first-child):not(.dropdown-menu):not(.form-floating)#{$validation-messages},
      > .form-floating:not(:first-child) > .form-control,
      > .form-floating:not(:first-child) > .form-select {
        margin-left: -$input-border-width;
        @include border-start-radius(0);
      }
    }
    ",
    "// This mixin uses an `if()` technique to be compatible with Dart Sass
    // See https://github.com/sass/sass/issues/1873#issuecomment-152293725 for more details
    
    // scss-docs-start form-validation-mixins
    @mixin form-validation-state-selector($state) {
      @if ($state == "valid" or $state == "invalid") {
        .was-validated #{if(&, "&", "")}:#{$state},
        #{if(&, "&", "")}.is-#{$state} {
          @content;
        }
      } @else {
        #{if(&, "&", "")}.is-#{$state} {
          @content;
        }
      }
    }
    
    @mixin form-validation-state(
      $state,
      $color,
      $icon,
      $tooltip-color: color-contrast($color),
      $tooltip-bg-color: rgba($color, $form-feedback-tooltip-opacity),
      $focus-box-shadow: 0 0 $input-btn-focus-blur $input-focus-width rgba($color, $input-btn-focus-color-opacity)
    ) {
      .#{$state}-feedback {
        display: none;
        width: 100%;
        margin-top: $form-feedback-margin-top;
        @include font-size($form-feedback-font-size);
        font-style: $form-feedback-font-style;
        color: $color;
      }
    
      .#{$state}-tooltip {
        position: absolute;
        top: 100%;
        z-index: 5;
        display: none;
        max-width: 100%; // Contain to parent when possible
        padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
        margin-top: .1rem;
        @include font-size($form-feedback-tooltip-font-size);
        line-height: $form-feedback-tooltip-line-height;
        color: $tooltip-color;
        background-color: $tooltip-bg-color;
        @include border-radius($form-feedback-tooltip-border-radius);
      }
    
      @include form-validation-state-selector($state) {
        ~ .#{$state}-feedback,
        ~ .#{$state}-tooltip {
          display: block;
        }
      }
    
      .form-control {
        @include form-validation-state-selector($state) {
          border-color: $color;
    
          @if $enable-validation-icons {
            padding-right: $input-height-inner;
            background-image: escape-svg($icon);
            background-repeat: no-repeat;
            background-position: right $input-height-inner-quarter center;
            background-size: $input-height-inner-half $input-height-inner-half;
          }
    
          &:focus {
            border-color: $color;
            box-shadow: $focus-box-shadow;
          }
        }
      }
    
      // stylelint-disable-next-line selector-no-qualifying-type
      textarea.form-control {
        @include form-validation-state-selector($state) {
          @if $enable-validation-icons {
            padding-right: $input-height-inner;
            background-position: top $input-height-inner-quarter right $input-height-inner-quarter;
          }
        }
      }
    
      .form-select {
        @include form-validation-state-selector($state) {
          border-color: $color;
    
          @if $enable-validation-icons {
            &:not([multiple]):not([size]),
            &:not([multiple])[size="1"] {
              padding-right: $form-select-feedback-icon-padding-end;
              background-image: escape-svg($form-select-indicator), escape-svg($icon);
              background-position: $form-select-bg-position, $form-select-feedback-icon-position;
              background-size: $form-select-bg-size, $form-select-feedback-icon-size;
            }
          }
    
          &:focus {
            border-color: $color;
            box-shadow: $focus-box-shadow;
          }
        }
      }
    
      .form-control-color {
        @include form-validation-state-selector($state) {
          @if $enable-validation-icons {
            width: add($form-color-width, $input-height-inner);
          }
        }
      }
    
      .form-check-input {
        @include form-validation-state-selector($state) {
          border-color: $color;
    
          &:checked {
            background-color: $color;
          }
    
          &:focus {
            box-shadow: $focus-box-shadow;
          }
    
          ~ .form-check-label {
            color: $color;
          }
        }
      }
      .form-check-inline .form-check-input {
        ~ .#{$state}-feedback {
          margin-left: .5em;
        }
      }
    
      .input-group .form-control,
      .input-group .form-select {
        @include form-validation-state-selector($state) {
          @if $state == "valid" {
            z-index: 1;
          } @else if $state == "invalid" {
            z-index: 2;
          }
          &:focus {
            z-index: 3;
          }
        }
      }
    }
    // scss-docs-end form-validation-mixins
    ",
    "//
    // Base styles
    //
    
    .btn {
      // scss-docs-start btn-css-vars
      --#{$prefix}btn-padding-x: #{$btn-padding-x};
      --#{$prefix}btn-padding-y: #{$btn-padding-y};
      --#{$prefix}btn-font-family: #{$btn-font-family};
      @include rfs($btn-font-size, --#{$prefix}btn-font-size);
      --#{$prefix}btn-font-weight: #{$btn-font-weight};
      --#{$prefix}btn-line-height: #{$btn-line-height};
      --#{$prefix}btn-color: #{$body-color};
      --#{$prefix}btn-bg: transparent;
      --#{$prefix}btn-border-width: #{$btn-border-width};
      --#{$prefix}btn-border-color: transparent;
      --#{$prefix}btn-border-radius: #{$btn-border-radius};
      --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
      --#{$prefix}btn-disabled-opacity: #{$btn-disabled-opacity};
      --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), .5);
      // scss-docs-end btn-css-vars
    
      display: inline-block;
      padding: var(--#{$prefix}btn-padding-y) var(--#{$prefix}btn-padding-x);
      font-family: var(--#{$prefix}btn-font-family);
      @include font-size(var(--#{$prefix}btn-font-size));
      font-weight: var(--#{$prefix}btn-font-weight);
      line-height: var(--#{$prefix}btn-line-height);
      color: var(--#{$prefix}btn-color);
      text-align: center;
      text-decoration: if($link-decoration == none, null, none);
      white-space: $btn-white-space;
      vertical-align: middle;
      cursor: if($enable-button-pointers, pointer, null);
      user-select: none;
      border: var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);
      @include border-radius(var(--#{$prefix}btn-border-radius));
      @include gradient-bg(var(--#{$prefix}btn-bg));
      @include box-shadow(var(--#{$prefix}btn-box-shadow));
      @include transition($btn-transition);
    
      &:hover {
        color: var(--#{$prefix}btn-hover-color);
        text-decoration: if($link-hover-decoration == underline, none, null);
        background-color: var(--#{$prefix}btn-hover-bg);
        border-color: var(--#{$prefix}btn-hover-border-color);
      }
    
      .btn-check:focus + &,
      &:focus {
        color: var(--#{$prefix}btn-hover-color);
        @include gradient-bg(var(--#{$prefix}btn-hover-bg));
        border-color: var(--#{$prefix}btn-hover-border-color);
        outline: 0;
        // Avoid using mixin so we can pass custom focus shadow properly
        @if $enable-shadows {
          box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
        } @else {
          box-shadow: var(--#{$prefix}btn-focus-box-shadow);
        }
      }
    
      .btn-check:checked + &,
      .btn-check:active + &,
      &:active,
      &.active,
      &.show {
        color: var(--#{$prefix}btn-active-color);
        background-color: var(--#{$prefix}btn-active-bg);
        // Remove CSS gradients if they're enabled
        background-image: if($enable-gradients, none, null);
        border-color: var(--#{$prefix}btn-active-border-color);
        @include box-shadow(var(--#{$prefix}btn-active-shadow));
    
        &:focus {
          // Avoid using mixin so we can pass custom focus shadow properly
          @if $enable-shadows {
            box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
          } @else {
            box-shadow: var(--#{$prefix}btn-focus-box-shadow);
          }
        }
      }
    
      &:disabled,
      &.disabled,
      fieldset:disabled & {
        color: var(--#{$prefix}btn-disabled-color);
        pointer-events: none;
        background-color: var(--#{$prefix}btn-disabled-bg);
        background-image: if($enable-gradients, none, null);
        border-color: var(--#{$prefix}btn-disabled-border-color);
        opacity: var(--#{$prefix}btn-disabled-opacity);
        @include box-shadow(none);
      }
    }
    
    
    //
    // Alternate buttons
    //
    
    // scss-docs-start btn-variant-loops
    @each $color, $value in $theme-colors {
      .btn-#{$color} {
        @if $color == "light" {
          @include button-variant(
            $value,
            $value,
            $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
            $hover-border: shade-color($value, $btn-hover-border-shade-amount),
            $active-background: shade-color($value, $btn-active-bg-shade-amount),
            $active-border: shade-color($value, $btn-active-border-shade-amount)
          );
        } @else if $color == "dark" {
          @include button-variant(
            $value,
            $value,
            $hover-background: tint-color($value, $btn-hover-bg-tint-amount),
            $hover-border: tint-color($value, $btn-hover-border-tint-amount),
            $active-background: tint-color($value, $btn-active-bg-tint-amount),
            $active-border: tint-color($value, $btn-active-border-tint-amount)
          );
        } @else {
          @include button-variant($value, $value);
        }
      }
    }
    
    @each $color, $value in $theme-colors {
      .btn-outline-#{$color} {
        @include button-outline-variant($value);
      }
    }
    // scss-docs-end btn-variant-loops
    
    
    //
    // Link buttons
    //
    
    // Make a button look and behave like a link
    .btn-link {
      --#{$prefix}btn-font-weight: #{$font-weight-normal};
      --#{$prefix}btn-color: #{$btn-link-color};
      --#{$prefix}btn-bg: transparent;
      --#{$prefix}btn-border-color: transparent;
      --#{$prefix}btn-hover-color: #{$btn-link-hover-color};
      --#{$prefix}btn-hover-border-color: transparent;
      --#{$prefix}btn-active-color: #{$btn-link-hover-color};
      --#{$prefix}btn-active-border-color: transparent;
      --#{$prefix}btn-disabled-color: #{$btn-link-disabled-color};
      --#{$prefix}btn-disabled-border-color: transparent;
      --#{$prefix}btn-box-shadow: none;
      --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix(color-contrast($primary), $primary, 15%))};
    
      text-decoration: $link-decoration;
    
      &:hover,
      &:focus {
        text-decoration: $link-hover-decoration;
      }
    
      &:focus {
        color: var(--#{$prefix}btn-color);
      }
    
      &:hover {
        color: var(--#{$prefix}btn-hover-color);
      }
    
      // No need for an active state here
    }
    
    
    //
    // Button Sizes
    //
    
    .btn-lg {
      @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
    }
    
    .btn-sm {
      @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
    }
    ",
    "// Button variants
    //
    // Easily pump out default styles, as well as :hover, :focus, :active,
    // and disabled options for all buttons
    
    // scss-docs-start btn-variant-mixin
    @mixin button-variant(
      $background,
      $border,
      $color: color-contrast($background),
      $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount)),
      $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount)),
      $hover-color: color-contrast($hover-background),
      $active-background: if($color == $color-contrast-light, shade-color($background, $btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount)),
      $active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount)),
      $active-color: color-contrast($active-background),
      $disabled-background: $background,
      $disabled-border: $border,
      $disabled-color: color-contrast($disabled-background)
    ) {
      --#{$prefix}btn-color: #{$color};
      --#{$prefix}btn-bg: #{$background};
      --#{$prefix}btn-border-color: #{$border};
      --#{$prefix}btn-hover-color: #{$hover-color};
      --#{$prefix}btn-hover-bg: #{$hover-background};
      --#{$prefix}btn-hover-border-color: #{$hover-border};
      --#{$prefix}btn-focus-shadow-rgb: #{to-rgb(mix($color, $border, 15%))};
      --#{$prefix}btn-active-color: #{$active-color};
      --#{$prefix}btn-active-bg: #{$active-background};
      --#{$prefix}btn-active-border-color: #{$active-border};
      --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};
      --#{$prefix}btn-disabled-color: #{$disabled-color};
      --#{$prefix}btn-disabled-bg: #{$disabled-background};
      --#{$prefix}btn-disabled-border-color: #{$disabled-border};
    }
    // scss-docs-end btn-variant-mixin
    
    // scss-docs-start btn-outline-variant-mixin
    @mixin button-outline-variant(
      $color,
      $color-hover: color-contrast($color),
      $active-background: $color,
      $active-border: $color,
      $active-color: color-contrast($active-background)
    ) {
      --#{$prefix}btn-color: #{$color};
      --#{$prefix}btn-border-color: #{$color};
      --#{$prefix}btn-hover-color: #{$color-hover};
      --#{$prefix}btn-hover-bg: #{$active-background};
      --#{$prefix}btn-hover-border-color: #{$active-border};
      --#{$prefix}btn-focus-shadow-rgb: #{to-rgb($color)};
      --#{$prefix}btn-active-color: #{$active-color};
      --#{$prefix}btn-active-bg: #{$active-background};
      --#{$prefix}btn-active-border-color: #{$active-border};
      --#{$prefix}btn-active-shadow: #{$btn-active-box-shadow};
      --#{$prefix}btn-disabled-color: #{$color};
      --#{$prefix}btn-disabled-bg: transparent;
      --#{$prefix}btn-disabled-border-color: #{$color};
      --#{$prefix}gradient: none;
    }
    // scss-docs-end btn-outline-variant-mixin
    
    // scss-docs-start btn-size-mixin
    @mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
      --#{$prefix}btn-padding-y: #{$padding-y};
      --#{$prefix}btn-padding-x: #{$padding-x};
      @include rfs($font-size, --#{$prefix}btn-font-size);
      --#{$prefix}btn-border-radius: #{$border-radius};
    }
    // scss-docs-end btn-size-mixin
    ",
    ".fade {
      @include transition($transition-fade);
    
      &:not(.show) {
        opacity: 0;
      }
    }
    
    // scss-docs-start collapse-classes
    .collapse {
      &:not(.show) {
        display: none;
      }
    }
    
    .collapsing {
      height: 0;
      overflow: hidden;
      @include transition($transition-collapse);
    
      &.collapse-horizontal {
        width: 0;
        height: auto;
        @include transition($transition-collapse-width);
      }
    }
    // scss-docs-end collapse-classes
    ",
    "// The dropdown wrapper (`<div>`)
    .dropup,
    .dropend,
    .dropdown,
    .dropstart,
    .dropup-center,
    .dropdown-center {
      position: relative;
    }
    
    .dropdown-toggle {
      white-space: nowrap;
    
      // Generate the caret automatically
      @include caret();
    }
    
    // The dropdown menu
    .dropdown-menu {
      // scss-docs-start dropdown-css-vars
      --#{$prefix}dropdown-min-width: #{$dropdown-min-width};
      --#{$prefix}dropdown-padding-x: #{$dropdown-padding-x};
      --#{$prefix}dropdown-padding-y: #{$dropdown-padding-y};
      --#{$prefix}dropdown-spacer: #{$dropdown-spacer};
      @include rfs($dropdown-font-size, --#{$prefix}dropdown-font-size);
      --#{$prefix}dropdown-color: #{$dropdown-color};
      --#{$prefix}dropdown-bg: #{$dropdown-bg};
      --#{$prefix}dropdown-border-color: #{$dropdown-border-color};
      --#{$prefix}dropdown-border-radius: #{$dropdown-border-radius};
      --#{$prefix}dropdown-border-width: #{$dropdown-border-width};
      --#{$prefix}dropdown-inner-border-radius: #{$dropdown-inner-border-radius};
      --#{$prefix}dropdown-divider-bg: #{$dropdown-divider-bg};
      --#{$prefix}dropdown-divider-margin-y: #{$dropdown-divider-margin-y};
      --#{$prefix}dropdown-box-shadow: #{$dropdown-box-shadow};
      --#{$prefix}dropdown-link-color: #{$dropdown-link-color};
      --#{$prefix}dropdown-link-hover-color: #{$dropdown-link-hover-color};
      --#{$prefix}dropdown-link-hover-bg: #{$dropdown-link-hover-bg};
      --#{$prefix}dropdown-link-active-color: #{$dropdown-link-active-color};
      --#{$prefix}dropdown-link-active-bg: #{$dropdown-link-active-bg};
      --#{$prefix}dropdown-link-disabled-color: #{$dropdown-link-disabled-color};
      --#{$prefix}dropdown-item-padding-x: #{$dropdown-item-padding-x};
      --#{$prefix}dropdown-item-padding-y: #{$dropdown-item-padding-y};
      --#{$prefix}dropdown-header-color: #{$dropdown-header-color};
      --#{$prefix}dropdown-header-padding-x: #{$dropdown-header-padding-x};
      --#{$prefix}dropdown-header-padding-y: #{$dropdown-header-padding-y};
      // scss-docs-end dropdown-css-vars
    
      position: absolute;
      z-index: $zindex-dropdown;
      display: none; // none by default, but block on "open" of the menu
      min-width: var(--#{$prefix}dropdown-min-width);
      padding: var(--#{$prefix}dropdown-padding-y) var(--#{$prefix}dropdown-padding-x);
      margin: 0; // Override default margin of ul
      @include font-size(var(--#{$prefix}dropdown-font-size));
      color: var(--#{$prefix}dropdown-color);
      text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
      list-style: none;
      background-color: var(--#{$prefix}dropdown-bg);
      background-clip: padding-box;
      border: var(--#{$prefix}dropdown-border-width) solid var(--#{$prefix}dropdown-border-color);
      @include border-radius(var(--#{$prefix}dropdown-border-radius));
      @include box-shadow(var(--#{$prefix}dropdown-box-shadow));
    
      &[data-bs-popper] {
        top: 100%;
        left: 0;
        margin-top: var(--#{$prefix}dropdown-spacer);
      }
    
      @if $dropdown-padding-y == 0 {
        > .dropdown-item:first-child,
        > li:first-child .dropdown-item {
          @include border-top-radius(var(--#{$prefix}dropdown-inner-border-radius));
        }
        > .dropdown-item:last-child,
        > li:last-child .dropdown-item {
          @include border-bottom-radius(var(--#{$prefix}dropdown-inner-border-radius));
        }
    
      }
    }
    
    // scss-docs-start responsive-breakpoints
    // We deliberately hardcode the `bs-` prefix because we check
    // this custom property in JS to determine Popper's positioning
    
    @each $breakpoint in map-keys($grid-breakpoints) {
      @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    
        .dropdown-menu#{$infix}-start {
          --bs-position: start;
    
          &[data-bs-popper] {
            right: auto;
            left: 0;
          }
        }
    
        .dropdown-menu#{$infix}-end {
          --bs-position: end;
    
          &[data-bs-popper] {
            right: 0;
            left: auto;
          }
        }
      }
    }
    // scss-docs-end responsive-breakpoints
    
    // Allow for dropdowns to go bottom up (aka, dropup-menu)
    // Just add .dropup after the standard .dropdown class and you're set.
    .dropup {
      .dropdown-menu[data-bs-popper] {
        top: auto;
        bottom: 100%;
        margin-top: 0;
        margin-bottom: var(--#{$prefix}dropdown-spacer);
      }
    
      .dropdown-toggle {
        @include caret(up);
      }
    }
    
    .dropend {
      .dropdown-menu[data-bs-popper] {
        top: 0;
        right: auto;
        left: 100%;
        margin-top: 0;
        margin-left: var(--#{$prefix}dropdown-spacer);
      }
    
      .dropdown-toggle {
        @include caret(end);
        &::after {
          vertical-align: 0;
        }
      }
    }
    
    .dropstart {
      .dropdown-menu[data-bs-popper] {
        top: 0;
        right: 100%;
        left: auto;
        margin-top: 0;
        margin-right: var(--#{$prefix}dropdown-spacer);
      }
    
      .dropdown-toggle {
        @include caret(start);
        &::before {
          vertical-align: 0;
        }
      }
    }
    
    
    // Dividers (basically an `<hr>`) within the dropdown
    .dropdown-divider {
      height: 0;
      margin: var(--#{$prefix}dropdown-divider-margin-y) 0;
      overflow: hidden;
      border-top: 1px solid var(--#{$prefix}dropdown-divider-bg);
      opacity: 1; // Revisit in v6 to de-dupe styles that conflict with <hr> element
    }
    
    // Links, buttons, and more within the dropdown menu
    //
    // `<button>`-specific styles are denoted with `// For <button>s`
    .dropdown-item {
      display: block;
      width: 100%; // For `<button>`s
      padding: var(--#{$prefix}dropdown-item-padding-y) var(--#{$prefix}dropdown-item-padding-x);
      clear: both;
      font-weight: $font-weight-normal;
      color: var(--#{$prefix}dropdown-link-color);
      text-align: inherit; // For `<button>`s
      text-decoration: if($link-decoration == none, null, none);
      white-space: nowrap; // prevent links from randomly breaking onto new lines
      background-color: transparent; // For `<button>`s
      border: 0; // For `<button>`s
    
      &:hover,
      &:focus {
        color: var(--#{$prefix}dropdown-link-hover-color);
        text-decoration: if($link-hover-decoration == underline, none, null);
        @include gradient-bg(var(--#{$prefix}dropdown-link-hover-bg));
      }
    
      &.active,
      &:active {
        color: var(--#{$prefix}dropdown-link-active-color);
        text-decoration: none;
        @include gradient-bg(var(--#{$prefix}dropdown-link-active-bg));
      }
    
      &.disabled,
      &:disabled {
        color: var(--#{$prefix}dropdown-link-disabled-color);
        pointer-events: none;
        background-color: transparent;
        // Remove CSS gradients if they're enabled
        background-image: if($enable-gradients, none, null);
      }
    }
    
    .dropdown-menu.show {
      display: block;
    }
    
    // Dropdown section headers
    .dropdown-header {
      display: block;
      padding: var(--#{$prefix}dropdown-header-padding-y) var(--#{$prefix}dropdown-header-padding-x);
      margin-bottom: 0; // for use with heading elements
      @include font-size($font-size-sm);
      color: var(--#{$prefix}dropdown-header-color);
      white-space: nowrap; // as with > li > a
    }
    
    // Dropdown text
    .dropdown-item-text {
      display: block;
      padding: var(--#{$prefix}dropdown-item-padding-y) var(--#{$prefix}dropdown-item-padding-x);
      color: var(--#{$prefix}dropdown-link-color);
    }
    
    // Dark dropdowns
    .dropdown-menu-dark {
      // scss-docs-start dropdown-dark-css-vars
      --#{$prefix}dropdown-color: #{$dropdown-dark-color};
      --#{$prefix}dropdown-bg: #{$dropdown-dark-bg};
      --#{$prefix}dropdown-border-color: #{$dropdown-dark-border-color};
      --#{$prefix}dropdown-box-shadow: #{$dropdown-dark-box-shadow};
      --#{$prefix}dropdown-link-color: #{$dropdown-dark-link-color};
      --#{$prefix}dropdown-link-hover-color: #{$dropdown-dark-link-hover-color};
      --#{$prefix}dropdown-divider-bg: #{$dropdown-dark-divider-bg};
      --#{$prefix}dropdown-link-hover-bg: #{$dropdown-dark-link-hover-bg};
      --#{$prefix}dropdown-link-active-color: #{$dropdown-dark-link-active-color};
      --#{$prefix}dropdown-link-active-bg: #{$dropdown-dark-link-active-bg};
      --#{$prefix}dropdown-link-disabled-color: #{$dropdown-dark-link-disabled-color};
      --#{$prefix}dropdown-header-color: #{$dropdown-dark-header-color};
      // scss-docs-end dropdown-dark-css-vars
    }
    ",
    "// scss-docs-start caret-mixins
    @mixin caret-down {
      border-top: $caret-width solid;
      border-right: $caret-width solid transparent;
      border-bottom: 0;
      border-left: $caret-width solid transparent;
    }
    
    @mixin caret-up {
      border-top: 0;
      border-right: $caret-width solid transparent;
      border-bottom: $caret-width solid;
      border-left: $caret-width solid transparent;
    }
    
    @mixin caret-end {
      border-top: $caret-width solid transparent;
      border-right: 0;
      border-bottom: $caret-width solid transparent;
      border-left: $caret-width solid;
    }
    
    @mixin caret-start {
      border-top: $caret-width solid transparent;
      border-right: $caret-width solid;
      border-bottom: $caret-width solid transparent;
    }
    
    @mixin caret($direction: down) {
      @if $enable-caret {
        &::after {
          display: inline-block;
          margin-left: $caret-spacing;
          vertical-align: $caret-vertical-align;
          content: "";
          @if $direction == down {
            @include caret-down();
          } @else if $direction == up {
            @include caret-up();
          } @else if $direction == end {
            @include caret-end();
          }
        }
    
        @if $direction == start {
          &::after {
            display: none;
          }
    
          &::before {
            display: inline-block;
            margin-right: $caret-spacing;
            vertical-align: $caret-vertical-align;
            content: "";
            @include caret-start();
          }
        }
    
        &:empty::after {
          margin-left: 0;
        }
      }
    }
    // scss-docs-end caret-mixins
    ",
    "// Make the div behave like a button
    .btn-group,
    .btn-group-vertical {
      position: relative;
      display: inline-flex;
      vertical-align: middle; // match .btn alignment given font-size hack above
    
      > .btn {
        position: relative;
        flex: 1 1 auto;
      }
    
      // Bring the hover, focused, and "active" buttons to the front to overlay
      // the borders properly
      > .btn-check:checked + .btn,
      > .btn-check:focus + .btn,
      > .btn:hover,
      > .btn:focus,
      > .btn:active,
      > .btn.active {
        z-index: 1;
      }
    }
    
    // Optional: Group multiple button groups together for a toolbar
    .btn-toolbar {
      display: flex;
      flex-wrap: wrap;
      justify-content: flex-start;
    
      .input-group {
        width: auto;
      }
    }
    
    .btn-group {
      @include border-radius($btn-border-radius);
    
      // Prevent double borders when buttons are next to each other
      > .btn:not(:first-child),
      > .btn-group:not(:first-child) {
        margin-left: -$btn-border-width;
      }
    
      // Reset rounded corners
      > .btn:not(:last-child):not(.dropdown-toggle),
      > .btn.dropdown-toggle-split:first-child,
      > .btn-group:not(:last-child) > .btn {
        @include border-end-radius(0);
      }
    
      // The left radius should be 0 if the button is:
      // - the "third or more" child
      // - the second child and the previous element isn't `.btn-check` (making it the first child visually)
      // - part of a btn-group which isn't the first child
      > .btn:nth-child(n + 3),
      > :not(.btn-check) + .btn,
      > .btn-group:not(:first-child) > .btn {
        @include border-start-radius(0);
      }
    }
    
    // Sizing
    //
    // Remix the default button sizing classes into new ones for easier manipulation.
    
    .btn-group-sm > .btn { @extend .btn-sm; }
    .btn-group-lg > .btn { @extend .btn-lg; }
    
    
    //
    // Split button dropdowns
    //
    
    .dropdown-toggle-split {
      padding-right: $btn-padding-x * .75;
      padding-left: $btn-padding-x * .75;
    
      &::after,
      .dropup &::after,
      .dropend &::after {
        margin-left: 0;
      }
    
      .dropstart &::before {
        margin-right: 0;
      }
    }
    
    .btn-sm + .dropdown-toggle-split {
      padding-right: $btn-padding-x-sm * .75;
      padding-left: $btn-padding-x-sm * .75;
    }
    
    .btn-lg + .dropdown-toggle-split {
      padding-right: $btn-padding-x-lg * .75;
      padding-left: $btn-padding-x-lg * .75;
    }
    
    
    // The clickable button for toggling the menu
    // Set the same inset shadow as the :active state
    .btn-group.show .dropdown-toggle {
      @include box-shadow($btn-active-box-shadow);
    
      // Show no shadow for `.btn-link` since it has no other button styles.
      &.btn-link {
        @include box-shadow(none);
      }
    }
    
    
    //
    // Vertical button groups
    //
    
    .btn-group-vertical {
      flex-direction: column;
      align-items: flex-start;
      justify-content: center;
    
      > .btn,
      > .btn-group {
        width: 100%;
      }
    
      > .btn:not(:first-child),
      > .btn-group:not(:first-child) {
        margin-top: -$btn-border-width;
      }
    
      // Reset rounded corners
      > .btn:not(:last-child):not(.dropdown-toggle),
      > .btn-group:not(:last-child) > .btn {
        @include border-bottom-radius(0);
      }
    
      > .btn ~ .btn,
      > .btn-group:not(:first-child) > .btn {
        @include border-top-radius(0);
      }
    }
    ",
    "// Base class
    //
    // Kickstart any navigation component with a set of style resets. Works with
    // `<nav>`s, `<ul>`s or `<ol>`s.
    
    .nav {
      // scss-docs-start nav-css-vars
      --#{$prefix}nav-link-padding-x: #{$nav-link-padding-x};
      --#{$prefix}nav-link-padding-y: #{$nav-link-padding-y};
      @include rfs($nav-link-font-size, --#{$prefix}nav-link-font-size);
      --#{$prefix}nav-link-font-weight: #{$nav-link-font-weight};
      --#{$prefix}nav-link-color: #{$nav-link-color};
      --#{$prefix}nav-link-hover-color: #{$nav-link-hover-color};
      --#{$prefix}nav-link-disabled-color: #{$nav-link-disabled-color};
      // scss-docs-end nav-css-vars
    
      display: flex;
      flex-wrap: wrap;
      padding-left: 0;
      margin-bottom: 0;
      list-style: none;
    }
    
    .nav-link {
      display: block;
      padding: var(--#{$prefix}nav-link-padding-y) var(--#{$prefix}nav-link-padding-x);
      @include font-size(var(--#{$prefix}nav-link-font-size));
      font-weight: var(--#{$prefix}nav-link-font-weight);
      color: var(--#{$prefix}nav-link-color);
      text-decoration: if($link-decoration == none, null, none);
      @include transition($nav-link-transition);
    
      &:hover,
      &:focus {
        color: var(--#{$prefix}nav-link-hover-color);
        text-decoration: if($link-hover-decoration == underline, none, null);
      }
    
      // Disabled state lightens text
      &.disabled {
        color: var(--#{$prefix}nav-link-disabled-color);
        pointer-events: none;
        cursor: default;
      }
    }
    
    //
    // Tabs
    //
    
    .nav-tabs {
      // scss-docs-start nav-tabs-css-vars
      --#{$prefix}nav-tabs-border-width: #{$nav-tabs-border-width};
      --#{$prefix}nav-tabs-border-color: #{$nav-tabs-border-color};
      --#{$prefix}nav-tabs-border-radius: #{$nav-tabs-border-radius};
      --#{$prefix}nav-tabs-link-hover-border-color: #{$nav-tabs-link-hover-border-color};
      --#{$prefix}nav-tabs-link-active-color: #{$nav-tabs-link-active-color};
      --#{$prefix}nav-tabs-link-active-bg: #{$nav-tabs-link-active-bg};
      --#{$prefix}nav-tabs-link-active-border-color: #{$nav-tabs-link-active-border-color};
      // scss-docs-end nav-tabs-css-vars
    
      border-bottom: var(--#{$prefix}nav-tabs-border-width) solid var(--#{$prefix}nav-tabs-border-color);
    
      .nav-link {
        margin-bottom: calc(var(--#{$prefix}nav-tabs-border-width) * -1); // stylelint-disable-line function-disallowed-list
        background: none;
        border: var(--#{$prefix}nav-tabs-border-width) solid transparent;
        @include border-top-radius(var(--#{$prefix}nav-tabs-border-radius));
    
        &:hover,
        &:focus {
          // Prevents active .nav-link tab overlapping focus outline of previous/next .nav-link
          isolation: isolate;
          border-color: var(--#{$prefix}nav-tabs-link-hover-border-color);
        }
    
        &.disabled,
        &:disabled {
          color: var(--#{$prefix}nav-link-disabled-color);
          background-color: transparent;
          border-color: transparent;
        }
      }
    
      .nav-link.active,
      .nav-item.show .nav-link {
        color: var(--#{$prefix}nav-tabs-link-active-color);
        background-color: var(--#{$prefix}nav-tabs-link-active-bg);
        border-color: var(--#{$prefix}nav-tabs-link-active-border-color);
      }
    
      .dropdown-menu {
        // Make dropdown border overlap tab border
        margin-top: calc(var(--#{$prefix}nav-tabs-border-width) * -1); // stylelint-disable-line function-disallowed-list
        // Remove the top rounded corners here since there is a hard edge above the menu
        @include border-top-radius(0);
      }
    }
    
    
    //
    // Pills
    //
    
    .nav-pills {
      // scss-docs-start nav-pills-css-vars
      --#{$prefix}nav-pills-border-radius: #{$nav-pills-border-radius};
      --#{$prefix}nav-pills-link-active-color: #{$nav-pills-link-active-color};
      --#{$prefix}nav-pills-link-active-bg: #{$nav-pills-link-active-bg};
      // scss-docs-end nav-pills-css-vars
    
      .nav-link {
        background: none;
        border: 0;
        @include border-radius(var(--#{$prefix}nav-pills-border-radius));
    
        &:disabled {
          color: var(--#{$prefix}nav-link-disabled-color);
          background-color: transparent;
          border-color: transparent;
        }
      }
    
      .nav-link.active,
      .show > .nav-link {
        color: var(--#{$prefix}nav-pills-link-active-color);
        @include gradient-bg(var(--#{$prefix}nav-pills-link-active-bg));
      }
    }
    
    
    //
    // Justified variants
    //
    
    .nav-fill {
      > .nav-link,
      .nav-item {
        flex: 1 1 auto;
        text-align: center;
      }
    }
    
    .nav-justified {
      > .nav-link,
      .nav-item {
        flex-basis: 0;
        flex-grow: 1;
        text-align: center;
      }
    }
    
    .nav-fill,
    .nav-justified {
      .nav-item .nav-link {
        width: 100%; // Make sure button will grow
      }
    }
    
    
    // Tabbable tabs
    //
    // Hide tabbable panes to start, show them when `.active`
    
    .tab-content {
      > .tab-pane {
        display: none;
      }
      > .active {
        display: block;
      }
    }
    ",
    "// Navbar
    //
    // Provide a static navbar from which we expand to create full-width, fixed, and
    // other navbar variations.
    
    .navbar {
      // scss-docs-start navbar-css-vars
      --#{$prefix}navbar-padding-x: #{if($navbar-padding-x == null, 0, $navbar-padding-x)};
      --#{$prefix}navbar-padding-y: #{$navbar-padding-y};
      --#{$prefix}navbar-color: #{$navbar-light-color};
      --#{$prefix}navbar-hover-color: #{$navbar-light-hover-color};
      --#{$prefix}navbar-disabled-color: #{$navbar-light-disabled-color};
      --#{$prefix}navbar-active-color: #{$navbar-light-active-color};
      --#{$prefix}navbar-brand-padding-y: #{$navbar-brand-padding-y};
      --#{$prefix}navbar-brand-margin-end: #{$navbar-brand-margin-end};
      --#{$prefix}navbar-brand-font-size: #{$navbar-brand-font-size};
      --#{$prefix}navbar-brand-color: #{$navbar-light-brand-color};
      --#{$prefix}navbar-brand-hover-color: #{$navbar-light-brand-hover-color};
      --#{$prefix}navbar-nav-link-padding-x: #{$navbar-nav-link-padding-x};
      --#{$prefix}navbar-toggler-padding-y: #{$navbar-toggler-padding-y};
      --#{$prefix}navbar-toggler-padding-x: #{$navbar-toggler-padding-x};
      --#{$prefix}navbar-toggler-font-size: #{$navbar-toggler-font-size};
      --#{$prefix}navbar-toggler-icon-bg: #{escape-svg($navbar-light-toggler-icon-bg)};
      --#{$prefix}navbar-toggler-border-color: #{$navbar-light-toggler-border-color};
      --#{$prefix}navbar-toggler-border-radius: #{$navbar-toggler-border-radius};
      --#{$prefix}navbar-toggler-focus-width: #{$navbar-toggler-focus-width};
      --#{$prefix}navbar-toggler-transition: #{$navbar-toggler-transition};
      // scss-docs-end navbar-css-vars
    
      position: relative;
      display: flex;
      flex-wrap: wrap; // allow us to do the line break for collapsing content
      align-items: center;
      justify-content: space-between; // space out brand from logo
      padding: var(--#{$prefix}navbar-padding-y) var(--#{$prefix}navbar-padding-x);
      @include gradient-bg();
    
      // Because flex properties aren't inherited, we need to redeclare these first
      // few properties so that content nested within behave properly.
      // The `flex-wrap` property is inherited to simplify the expanded navbars
      %container-flex-properties {
        display: flex;
        flex-wrap: inherit;
        align-items: center;
        justify-content: space-between;
      }
    
      > .container,
      > .container-fluid {
        @extend %container-flex-properties;
      }
    
      @each $breakpoint, $container-max-width in $container-max-widths {
        > .container#{breakpoint-infix($breakpoint, $container-max-widths)} {
          @extend %container-flex-properties;
        }
      }
    }
    
    
    // Navbar brand
    //
    // Used for brand, project, or site names.
    
    .navbar-brand {
      padding-top: var(--#{$prefix}navbar-brand-padding-y);
      padding-bottom: var(--#{$prefix}navbar-brand-padding-y);
      margin-right: var(--#{$prefix}navbar-brand-margin-end);
      @include font-size(var(--#{$prefix}navbar-brand-font-size));
      color: var(--#{$prefix}navbar-brand-color);
      text-decoration: if($link-decoration == none, null, none);
      white-space: nowrap;
    
      &:hover,
      &:focus {
        color: var(--#{$prefix}navbar-brand-hover-color);
        text-decoration: if($link-hover-decoration == underline, none, null);
      }
    }
    
    
    // Navbar nav
    //
    // Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).
    
    .navbar-nav {
      // scss-docs-start navbar-nav-css-vars
      --#{$prefix}nav-link-padding-x: 0;
      --#{$prefix}nav-link-padding-y: #{$nav-link-padding-y};
      @include rfs($nav-link-font-size, --#{$prefix}nav-link-font-size);
      --#{$prefix}nav-link-font-weight: #{$nav-link-font-weight};
      --#{$prefix}nav-link-color: var(--#{$prefix}navbar-color);
      --#{$prefix}nav-link-hover-color: var(--#{$prefix}navbar-hover-color);
      --#{$prefix}nav-link-disabled-color: var(--#{$prefix}navbar-disabled-color);
      // scss-docs-end navbar-nav-css-vars
    
      display: flex;
      flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
      padding-left: 0;
      margin-bottom: 0;
      list-style: none;
    
      .show > .nav-link,
      .nav-link.active {
        color: var(--#{$prefix}navbar-active-color);
      }
    
      .dropdown-menu {
        position: static;
      }
    }
    
    
    // Navbar text
    //
    //
    
    .navbar-text {
      padding-top: $nav-link-padding-y;
      padding-bottom: $nav-link-padding-y;
      color: var(--#{$prefix}navbar-color);
    
      a,
      a:hover,
      a:focus  {
        color: var(--#{$prefix}navbar-active-color);
      }
    }
    
    
    // Responsive navbar
    //
    // Custom styles for responsive collapsing and toggling of navbar contents.
    // Powered by the collapse Bootstrap JavaScript plugin.
    
    // When collapsed, prevent the toggleable navbar contents from appearing in
    // the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
    // on the `.navbar` parent.
    .navbar-collapse {
      flex-basis: 100%;
      flex-grow: 1;
      // For always expanded or extra full navbars, ensure content aligns itself
      // properly vertically. Can be easily overridden with flex utilities.
      align-items: center;
    }
    
    // Button for toggling the navbar when in its collapsed state
    .navbar-toggler {
      padding: var(--#{$prefix}navbar-toggler-padding-y) var(--#{$prefix}navbar-toggler-padding-x);
      @include font-size(var(--#{$prefix}navbar-toggler-font-size));
      line-height: 1;
      color: var(--#{$prefix}navbar-color);
      background-color: transparent; // remove default button style
      border: var(--#{$prefix}border-width) solid var(--#{$prefix}navbar-toggler-border-color); // remove default button style
      @include border-radius(var(--#{$prefix}navbar-toggler-border-radius));
      @include transition(var(--#{$prefix}navbar-toggler-transition));
    
      &:hover {
        text-decoration: none;
      }
    
      &:focus {
        text-decoration: none;
        outline: 0;
        box-shadow: 0 0 0 var(--#{$prefix}navbar-toggler-focus-width);
      }
    }
    
    // Keep as a separate element so folks can easily override it with another icon
    // or image file as needed.
    .navbar-toggler-icon {
      display: inline-block;
      width: 1.5em;
      height: 1.5em;
      vertical-align: middle;
      background-image: var(--#{$prefix}navbar-toggler-icon-bg);
      background-repeat: no-repeat;
      background-position: center;
      background-size: 100%;
    }
    
    .navbar-nav-scroll {
      max-height: var(--#{$prefix}scroll-height, 75vh);
      overflow-y: auto;
    }
    
    // scss-docs-start navbar-expand-loop
    // Generate series of `.navbar-expand-*` responsive classes for configuring
    // where your navbar collapses.
    .navbar-expand {
      @each $breakpoint in map-keys($grid-breakpoints) {
        $next: breakpoint-next($breakpoint, $grid-breakpoints);
        $infix: breakpoint-infix($next, $grid-breakpoints);
    
        // stylelint-disable-next-line scss/selector-no-union-class-name
        &#{$infix} {
          @include media-breakpoint-up($next) {
            flex-wrap: nowrap;
            justify-content: flex-start;
    
            .navbar-nav {
              flex-direction: row;
    
              .dropdown-menu {
                position: absolute;
              }
    
              .nav-link {
                padding-right: var(--#{$prefix}navbar-nav-link-padding-x);
                padding-left: var(--#{$prefix}navbar-nav-link-padding-x);
              }
            }
    
            .navbar-nav-scroll {
              overflow: visible;
            }
    
            .navbar-collapse {
              display: flex !important; // stylelint-disable-line declaration-no-important
              flex-basis: auto;
            }
    
            .navbar-toggler {
              display: none;
            }
    
            .offcanvas {
              // stylelint-disable declaration-no-important
              position: static;
              z-index: auto;
              flex-grow: 1;
              width: auto !important;
              height: auto !important;
              visibility: visible !important;
              background-color: transparent !important;
              border: 0 !important;
              transform: none !important;
              @include box-shadow(none);
              @include transition(none);
              // stylelint-enable declaration-no-important
    
              .offcanvas-header {
                display: none;
              }
    
              .offcanvas-body {
                display: flex;
                flex-grow: 0;
                padding: 0;
                overflow-y: visible;
              }
            }
          }
        }
      }
    }
    // scss-docs-end navbar-expand-loop
    
    // Navbar themes
    //
    // Styles for switching between navbars with light or dark background.
    
    .navbar-light {
      @include deprecate("`.navbar-light`", "v5.2.0", "v6.0.0", true);
    }
    
    .navbar-dark {
      --#{$prefix}navbar-color: #{$navbar-dark-color};
      --#{$prefix}navbar-hover-color: #{$navbar-dark-hover-color};
      --#{$prefix}navbar-disabled-color: #{$navbar-dark-disabled-color};
      --#{$prefix}navbar-active-color: #{$navbar-dark-active-color};
      --#{$prefix}navbar-brand-color: #{$navbar-dark-brand-color};
      --#{$prefix}navbar-brand-hover-color: #{$navbar-dark-brand-hover-color};
      --#{$prefix}navbar-toggler-border-color: #{$navbar-dark-toggler-border-color};
      --#{$prefix}navbar-toggler-icon-bg: #{escape-svg($navbar-dark-toggler-icon-bg)};
    }
    ",
    "//
    // Base styles
    //
    
    .card {
      // scss-docs-start card-css-vars
      --#{$prefix}card-spacer-y: #{$card-spacer-y};
      --#{$prefix}card-spacer-x: #{$card-spacer-x};
      --#{$prefix}card-title-spacer-y: #{$card-title-spacer-y};
      --#{$prefix}card-border-width: #{$card-border-width};
      --#{$prefix}card-border-color: #{$card-border-color};
      --#{$prefix}card-border-radius: #{$card-border-radius};
      --#{$prefix}card-box-shadow: #{$card-box-shadow};
      --#{$prefix}card-inner-border-radius: #{$card-inner-border-radius};
      --#{$prefix}card-cap-padding-y: #{$card-cap-padding-y};
      --#{$prefix}card-cap-padding-x: #{$card-cap-padding-x};
      --#{$prefix}card-cap-bg: #{$card-cap-bg};
      --#{$prefix}card-cap-color: #{$card-cap-color};
      --#{$prefix}card-height: #{$card-height};
      --#{$prefix}card-color: #{$card-color};
      --#{$prefix}card-bg: #{$card-bg};
      --#{$prefix}card-img-overlay-padding: #{$card-img-overlay-padding};
      --#{$prefix}card-group-margin: #{$card-group-margin};
      // scss-docs-end card-css-vars
    
      position: relative;
      display: flex;
      flex-direction: column;
      min-width: 0; // See https://github.com/twbs/bootstrap/pull/22740#issuecomment-305868106
      height: var(--#{$prefix}card-height);
      word-wrap: break-word;
      background-color: var(--#{$prefix}card-bg);
      background-clip: border-box;
      border: var(--#{$prefix}card-border-width) solid var(--#{$prefix}card-border-color);
      @include border-radius(var(--#{$prefix}card-border-radius));
      @include box-shadow(var(--#{$prefix}card-box-shadow));
    
      > hr {
        margin-right: 0;
        margin-left: 0;
      }
    
      > .list-group {
        border-top: inherit;
        border-bottom: inherit;
    
        &:first-child {
          border-top-width: 0;
          @include border-top-radius(var(--#{$prefix}card-inner-border-radius));
        }
    
        &:last-child  {
          border-bottom-width: 0;
          @include border-bottom-radius(var(--#{$prefix}card-inner-border-radius));
        }
      }
    
      // Due to specificity of the above selector (`.card > .list-group`), we must
      // use a child selector here to prevent double borders.
      > .card-header + .list-group,
      > .list-group + .card-footer {
        border-top: 0;
      }
    }
    
    .card-body {
      // Enable `flex-grow: 1` for decks and groups so that card blocks take up
      // as much space as possible, ensuring footers are aligned to the bottom.
      flex: 1 1 auto;
      padding: var(--#{$prefix}card-spacer-y) var(--#{$prefix}card-spacer-x);
      color: var(--#{$prefix}card-color);
    }
    
    .card-title {
      margin-bottom: var(--#{$prefix}card-title-spacer-y);
    }
    
    .card-subtitle {
      margin-top: calc(-.5 * var(--#{$prefix}card-title-spacer-y)); // stylelint-disable-line function-disallowed-list
      margin-bottom: 0;
    }
    
    .card-text:last-child {
      margin-bottom: 0;
    }
    
    .card-link {
      &:hover {
        text-decoration: if($link-hover-decoration == underline, none, null);
      }
    
      + .card-link {
        margin-left: var(--#{$prefix}card-spacer-x);
      }
    }
    
    //
    // Optional textual caps
    //
    
    .card-header {
      padding: var(--#{$prefix}card-cap-padding-y) var(--#{$prefix}card-cap-padding-x);
      margin-bottom: 0; // Removes the default margin-bottom of <hN>
      color: var(--#{$prefix}card-cap-color);
      background-color: var(--#{$prefix}card-cap-bg);
      border-bottom: var(--#{$prefix}card-border-width) solid var(--#{$prefix}card-border-color);
    
      &:first-child {
        @include border-radius(var(--#{$prefix}card-inner-border-radius) var(--#{$prefix}card-inner-border-radius) 0 0);
      }
    }
    
    .card-footer {
      padding: var(--#{$prefix}card-cap-padding-y) var(--#{$prefix}card-cap-padding-x);
      color: var(--#{$prefix}card-cap-color);
      background-color: var(--#{$prefix}card-cap-bg);
      border-top: var(--#{$prefix}card-border-width) solid var(--#{$prefix}card-border-color);
    
      &:last-child {
        @include border-radius(0 0 var(--#{$prefix}card-inner-border-radius) var(--#{$prefix}card-inner-border-radius));
      }
    }
    
    
    //
    // Header navs
    //
    
    .card-header-tabs {
      margin-right: calc(-.5 * var(--#{$prefix}card-cap-padding-x)); // stylelint-disable-line function-disallowed-list
      margin-bottom: calc(-1 * var(--#{$prefix}card-cap-padding-y)); // stylelint-disable-line function-disallowed-list
      margin-left: calc(-.5 * var(--#{$prefix}card-cap-padding-x)); // stylelint-disable-line function-disallowed-list
      border-bottom: 0;
    
      .nav-link.active {
        background-color: var(--#{$prefix}card-bg);
        border-bottom-color: var(--#{$prefix}card-bg);
      }
    }
    
    .card-header-pills {
      margin-right: calc(-.5 * var(--#{$prefix}card-cap-padding-x)); // stylelint-disable-line function-disallowed-list
      margin-left: calc(-.5 * var(--#{$prefix}card-cap-padding-x)); // stylelint-disable-line function-disallowed-list
    }
    
    // Card image
    .card-img-overlay {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      padding: var(--#{$prefix}card-img-overlay-padding);
      @include border-radius(var(--#{$prefix}card-inner-border-radius));
    }
    
    .card-img,
    .card-img-top,
    .card-img-bottom {
      width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
    }
    
    .card-img,
    .card-img-top {
      @include border-top-radius(var(--#{$prefix}card-inner-border-radius));
    }
    
    .card-img,
    .card-img-bottom {
      @include border-bottom-radius(var(--#{$prefix}card-inner-border-radius));
    }
    
    
    //
    // Card groups
    //
    
    .card-group {
      // The child selector allows nested `.card` within `.card-group`
      // to display properly.
      > .card {
        margin-bottom: var(--#{$prefix}card-group-margin);
      }
    
      @include media-breakpoint-up(sm) {
        display: flex;
        flex-flow: row wrap;
        // The child selector allows nested `.card` within `.card-group`
        // to display properly.
        > .card {
          // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
          flex: 1 0 0%;
          margin-bottom: 0;
    
          + .card {
            margin-left: 0;
            border-left: 0;
          }
    
          // Handle rounded corners
          @if $enable-rounded {
            &:not(:last-child) {
              @include border-end-radius(0);
    
              .card-img-top,
              .card-header {
                // stylelint-disable-next-line property-disallowed-list
                border-top-right-radius: 0;
              }
              .card-img-bottom,
              .card-footer {
                // stylelint-disable-next-line property-disallowed-list
                border-bottom-right-radius: 0;
              }
            }
    
            &:not(:first-child) {
              @include border-start-radius(0);
    
              .card-img-top,
              .card-header {
                // stylelint-disable-next-line property-disallowed-list
                border-top-left-radius: 0;
              }
              .card-img-bottom,
              .card-footer {
                // stylelint-disable-next-line property-disallowed-list
                border-bottom-left-radius: 0;
              }
            }
          }
        }
      }
    }
    ",
    "//
    // Base styles
    //
    
    .accordion {
      // scss-docs-start accordion-css-vars
      --#{$prefix}accordion-color: #{color-contrast($accordion-bg)};
      --#{$prefix}accordion-bg: #{$accordion-bg};
      --#{$prefix}accordion-transition: #{$accordion-transition};
      --#{$prefix}accordion-border-color: #{$accordion-border-color};
      --#{$prefix}accordion-border-width: #{$accordion-border-width};
      --#{$prefix}accordion-border-radius: #{$accordion-border-radius};
      --#{$prefix}accordion-inner-border-radius: #{$accordion-inner-border-radius};
      --#{$prefix}accordion-btn-padding-x: #{$accordion-button-padding-x};
      --#{$prefix}accordion-btn-padding-y: #{$accordion-button-padding-y};
      --#{$prefix}accordion-btn-color: #{$accordion-color};
      --#{$prefix}accordion-btn-bg: #{$accordion-button-bg};
      --#{$prefix}accordion-btn-icon: #{escape-svg($accordion-button-icon)};
      --#{$prefix}accordion-btn-icon-width: #{$accordion-icon-width};
      --#{$prefix}accordion-btn-icon-transform: #{$accordion-icon-transform};
      --#{$prefix}accordion-btn-icon-transition: #{$accordion-icon-transition};
      --#{$prefix}accordion-btn-active-icon: #{escape-svg($accordion-button-active-icon)};
      --#{$prefix}accordion-btn-focus-border-color: #{$accordion-button-focus-border-color};
      --#{$prefix}accordion-btn-focus-box-shadow: #{$accordion-button-focus-box-shadow};
      --#{$prefix}accordion-body-padding-x: #{$accordion-body-padding-x};
      --#{$prefix}accordion-body-padding-y: #{$accordion-body-padding-y};
      --#{$prefix}accordion-active-color: #{$accordion-button-active-color};
      --#{$prefix}accordion-active-bg: #{$accordion-button-active-bg};
      // scss-docs-end accordion-css-vars
    }
    
    .accordion-button {
      position: relative;
      display: flex;
      align-items: center;
      width: 100%;
      padding: var(--#{$prefix}accordion-btn-padding-y) var(--#{$prefix}accordion-btn-padding-x);
      @include font-size($font-size-base);
      color: var(--#{$prefix}accordion-btn-color);
      text-align: left; // Reset button style
      background-color: var(--#{$prefix}accordion-btn-bg);
      border: 0;
      @include border-radius(0);
      overflow-anchor: none;
      @include transition(var(--#{$prefix}accordion-transition));
    
      &:not(.collapsed) {
        color: var(--#{$prefix}accordion-active-color);
        background-color: var(--#{$prefix}accordion-active-bg);
        box-shadow: inset 0 calc(var(--#{$prefix}accordion-border-width) * -1) 0 var(--#{$prefix}accordion-border-color); // stylelint-disable-line function-disallowed-list
    
        &::after {
          background-image: var(--#{$prefix}accordion-btn-active-icon);
          transform: var(--#{$prefix}accordion-btn-icon-transform);
        }
      }
    
      // Accordion icon
      &::after {
        flex-shrink: 0;
        width: var(--#{$prefix}accordion-btn-icon-width);
        height: var(--#{$prefix}accordion-btn-icon-width);
        margin-left: auto;
        content: "";
        background-image: var(--#{$prefix}accordion-btn-icon);
        background-repeat: no-repeat;
        background-size: var(--#{$prefix}accordion-btn-icon-width);
        @include transition(var(--#{$prefix}accordion-btn-icon-transition));
      }
    
      &:hover {
        z-index: 2;
      }
    
      &:focus {
        z-index: 3;
        border-color: var(--#{$prefix}accordion-btn-focus-border-color);
        outline: 0;
        box-shadow: var(--#{$prefix}accordion-btn-focus-box-shadow);
      }
    }
    
    .accordion-header {
      margin-bottom: 0;
    }
    
    .accordion-item {
      color: var(--#{$prefix}accordion-color);
      background-color: var(--#{$prefix}accordion-bg);
      border: var(--#{$prefix}accordion-border-width) solid var(--#{$prefix}accordion-border-color);
    
      &:first-of-type {
        @include border-top-radius(var(--#{$prefix}accordion-border-radius));
    
        .accordion-button {
          @include border-top-radius(var(--#{$prefix}accordion-inner-border-radius));
        }
      }
    
      &:not(:first-of-type) {
        border-top: 0;
      }
    
      // Only set a border-radius on the last item if the accordion is collapsed
      &:last-of-type {
        @include border-bottom-radius(var(--#{$prefix}accordion-border-radius));
    
        .accordion-button {
          &.collapsed {
            @include border-bottom-radius(var(--#{$prefix}accordion-inner-border-radius));
          }
        }
    
        .accordion-collapse {
          @include border-bottom-radius(var(--#{$prefix}accordion-border-radius));
        }
      }
    }
    
    .accordion-body {
      padding: var(--#{$prefix}accordion-body-padding-y) var(--#{$prefix}accordion-body-padding-x);
    }
    
    
    // Flush accordion items
    //
    // Remove borders and border-radius to keep accordion items edge-to-edge.
    
    .accordion-flush {
      .accordion-collapse {
        border-width: 0;
      }
    
      .accordion-item {
        border-right: 0;
        border-left: 0;
        @include border-radius(0);
    
        &:first-child { border-top: 0; }
        &:last-child { border-bottom: 0; }
    
        .accordion-button {
          @include border-radius(0);
        }
      }
    }
    ",
    ".breadcrumb {
      // scss-docs-start breadcrumb-css-vars
      --#{$prefix}breadcrumb-padding-x: #{$breadcrumb-padding-x};
      --#{$prefix}breadcrumb-padding-y: #{$breadcrumb-padding-y};
      --#{$prefix}breadcrumb-margin-bottom: #{$breadcrumb-margin-bottom};
      @include rfs($breadcrumb-font-size, --#{$prefix}breadcrumb-font-size);
      --#{$prefix}breadcrumb-bg: #{$breadcrumb-bg};
      --#{$prefix}breadcrumb-border-radius: #{$breadcrumb-border-radius};
      --#{$prefix}breadcrumb-divider-color: #{$breadcrumb-divider-color};
      --#{$prefix}breadcrumb-item-padding-x: #{$breadcrumb-item-padding-x};
      --#{$prefix}breadcrumb-item-active-color: #{$breadcrumb-active-color};
      // scss-docs-end breadcrumb-css-vars
    
      display: flex;
      flex-wrap: wrap;
      padding: var(--#{$prefix}breadcrumb-padding-y) var(--#{$prefix}breadcrumb-padding-x);
      margin-bottom: var(--#{$prefix}breadcrumb-margin-bottom);
      @include font-size(var(--#{$prefix}breadcrumb-font-size));
      list-style: none;
      background-color: var(--#{$prefix}breadcrumb-bg);
      @include border-radius(var(--#{$prefix}breadcrumb-border-radius));
    }
    
    .breadcrumb-item {
      // The separator between breadcrumbs (by default, a forward-slash: "/")
      + .breadcrumb-item {
        padding-left: var(--#{$prefix}breadcrumb-item-padding-x);
    
        &::before {
          float: left; // Suppress inline spacings and underlining of the separator
          padding-right: var(--#{$prefix}breadcrumb-item-padding-x);
          color: var(--#{$prefix}breadcrumb-divider-color);
          content: var(--#{$prefix}breadcrumb-divider, escape-svg($breadcrumb-divider)) #{"/* rtl:"} var(--#{$prefix}breadcrumb-divider, escape-svg($breadcrumb-divider-flipped)) #{"*/"};
        }
      }
    
      &.active {
        color: var(--#{$prefix}breadcrumb-item-active-color);
      }
    }
    ",
    ".pagination {
      // scss-docs-start pagination-css-vars
      --#{$prefix}pagination-padding-x: #{$pagination-padding-x};
      --#{$prefix}pagination-padding-y: #{$pagination-padding-y};
      @include rfs($pagination-font-size, --#{$prefix}pagination-font-size);
      --#{$prefix}pagination-color: #{$pagination-color};
      --#{$prefix}pagination-bg: #{$pagination-bg};
      --#{$prefix}pagination-border-width: #{$pagination-border-width};
      --#{$prefix}pagination-border-color: #{$pagination-border-color};
      --#{$prefix}pagination-border-radius: #{$pagination-border-radius};
      --#{$prefix}pagination-hover-color: #{$pagination-hover-color};
      --#{$prefix}pagination-hover-bg: #{$pagination-hover-bg};
      --#{$prefix}pagination-hover-border-color: #{$pagination-hover-border-color};
      --#{$prefix}pagination-focus-color: #{$pagination-focus-color};
      --#{$prefix}pagination-focus-bg: #{$pagination-focus-bg};
      --#{$prefix}pagination-focus-box-shadow: #{$pagination-focus-box-shadow};
      --#{$prefix}pagination-active-color: #{$pagination-active-color};
      --#{$prefix}pagination-active-bg: #{$pagination-active-bg};
      --#{$prefix}pagination-active-border-color: #{$pagination-active-border-color};
      --#{$prefix}pagination-disabled-color: #{$pagination-disabled-color};
      --#{$prefix}pagination-disabled-bg: #{$pagination-disabled-bg};
      --#{$prefix}pagination-disabled-border-color: #{$pagination-disabled-border-color};
      // scss-docs-end pagination-css-vars
    
      display: flex;
      @include list-unstyled();
    }
    
    .page-link {
      position: relative;
      display: block;
      padding: var(--#{$prefix}pagination-padding-y) var(--#{$prefix}pagination-padding-x);
      @include font-size(var(--#{$prefix}pagination-font-size));
      color: var(--#{$prefix}pagination-color);
      text-decoration: if($link-decoration == none, null, none);
      background-color: var(--#{$prefix}pagination-bg);
      border: var(--#{$prefix}pagination-border-width) solid var(--#{$prefix}pagination-border-color);
      @include transition($pagination-transition);
    
      &:hover {
        z-index: 2;
        color: var(--#{$prefix}pagination-hover-color);
        text-decoration: if($link-hover-decoration == underline, none, null);
        background-color: var(--#{$prefix}pagination-hover-bg);
        border-color: var(--#{$prefix}pagination-hover-border-color);
      }
    
      &:focus {
        z-index: 3;
        color: var(--#{$prefix}pagination-focus-color);
        background-color: var(--#{$prefix}pagination-focus-bg);
        outline: $pagination-focus-outline;
        box-shadow: var(--#{$prefix}pagination-focus-box-shadow);
      }
    
      &.active,
      .active > & {
        z-index: 3;
        color: var(--#{$prefix}pagination-active-color);
        @include gradient-bg(var(--#{$prefix}pagination-active-bg));
        border-color: var(--#{$prefix}pagination-active-border-color);
      }
    
      &.disabled,
      .disabled > & {
        color: var(--#{$prefix}pagination-disabled-color);
        pointer-events: none;
        background-color: var(--#{$prefix}pagination-disabled-bg);
        border-color: var(--#{$prefix}pagination-disabled-border-color);
      }
    }
    
    .page-item {
      &:not(:first-child) .page-link {
        margin-left: $pagination-margin-start;
      }
    
      @if $pagination-margin-start == (calc($pagination-border-width * -1)) {
        &:first-child {
          .page-link {
            @include border-start-radius(var(--#{$prefix}pagination-border-radius));
          }
        }
    
        &:last-child {
          .page-link {
            @include border-end-radius(var(--#{$prefix}pagination-border-radius));
          }
        }
      } @else {
        // Add border-radius to all pageLinks in case they have left margin
        .page-link {
          @include border-radius(var(--#{$prefix}pagination-border-radius));
        }
      }
    }
    
    
    //
    // Sizing
    //
    
    .pagination-lg {
      @include pagination-size($pagination-padding-y-lg, $pagination-padding-x-lg, $font-size-lg, $pagination-border-radius-lg);
    }
    
    .pagination-sm {
      @include pagination-size($pagination-padding-y-sm, $pagination-padding-x-sm, $font-size-sm, $pagination-border-radius-sm);
    }
    ",
    "// Pagination
    
    // scss-docs-start pagination-mixin
    @mixin pagination-size($padding-y, $padding-x, $font-size, $border-radius) {
      --#{$prefix}pagination-padding-x: #{$padding-x};
      --#{$prefix}pagination-padding-y: #{$padding-y};
      @include rfs($font-size, --#{$prefix}pagination-font-size);
      --#{$prefix}pagination-border-radius: #{$border-radius};
    }
    // scss-docs-end pagination-mixin
    ",
    "// Base class
    //
    // Requires one of the contextual, color modifier classes for `color` and
    // `background-color`.
    
    .badge {
      // scss-docs-start badge-css-vars
      --#{$prefix}badge-padding-x: #{$badge-padding-x};
      --#{$prefix}badge-padding-y: #{$badge-padding-y};
      @include rfs($badge-font-size, --#{$prefix}badge-font-size);
      --#{$prefix}badge-font-weight: #{$badge-font-weight};
      --#{$prefix}badge-color: #{$badge-color};
      --#{$prefix}badge-border-radius: #{$badge-border-radius};
      // scss-docs-end badge-css-vars
    
      display: inline-block;
      padding: var(--#{$prefix}badge-padding-y) var(--#{$prefix}badge-padding-x);
      @include font-size(var(--#{$prefix}badge-font-size));
      font-weight: var(--#{$prefix}badge-font-weight);
      line-height: 1;
      color: var(--#{$prefix}badge-color);
      text-align: center;
      white-space: nowrap;
      vertical-align: baseline;
      @include border-radius(var(--#{$prefix}badge-border-radius));
      @include gradient-bg();
    
      // Empty badges collapse automatically
      &:empty {
        display: none;
      }
    }
    
    // Quick fix for badges in buttons
    .btn .badge {
      position: relative;
      top: -1px;
    }
    ",
    "//
    // Base styles
    //
    
    .alert {
      // scss-docs-start alert-css-vars
      --#{$prefix}alert-bg: transparent;
      --#{$prefix}alert-padding-x: #{$alert-padding-x};
      --#{$prefix}alert-padding-y: #{$alert-padding-y};
      --#{$prefix}alert-margin-bottom: #{$alert-margin-bottom};
      --#{$prefix}alert-color: inherit;
      --#{$prefix}alert-border-color: transparent;
      --#{$prefix}alert-border: #{$alert-border-width} solid var(--#{$prefix}alert-border-color);
      --#{$prefix}alert-border-radius: #{$alert-border-radius};
      // scss-docs-end alert-css-vars
    
      position: relative;
      padding: var(--#{$prefix}alert-padding-y) var(--#{$prefix}alert-padding-x);
      margin-bottom: var(--#{$prefix}alert-margin-bottom);
      color: var(--#{$prefix}alert-color);
      background-color: var(--#{$prefix}alert-bg);
      border: var(--#{$prefix}alert-border);
      @include border-radius(var(--#{$prefix}alert-border-radius));
    }
    
    // Headings for larger alerts
    .alert-heading {
      // Specified to prevent conflicts of changing $headings-color
      color: inherit;
    }
    
    // Provide class for links that match alerts
    .alert-link {
      font-weight: $alert-link-font-weight;
    }
    
    
    // Dismissible alerts
    //
    // Expand the right padding and account for the close button's positioning.
    
    .alert-dismissible {
      padding-right: $alert-dismissible-padding-r;
    
      // Adjust close link position
      .btn-close {
        position: absolute;
        top: 0;
        right: 0;
        z-index: $stretched-link-z-index + 1;
        padding: $alert-padding-y * 1.25 $alert-padding-x;
      }
    }
    
    
    // scss-docs-start alert-modifiers
    // Generate contextual modifier classes for colorizing the alert.
    
    @each $state, $value in $theme-colors {
      $alert-background: shift-color($value, $alert-bg-scale);
      $alert-border: shift-color($value, $alert-border-scale);
      $alert-color: shift-color($value, $alert-color-scale);
    
      @if (contrast-ratio($alert-background, $alert-color) < $min-contrast-ratio) {
        $alert-color: mix($value, color-contrast($alert-background), abs($alert-color-scale));
      }
      .alert-#{$state} {
        @include alert-variant($alert-background, $alert-border, $alert-color);
      }
    }
    // scss-docs-end alert-modifiers
    ",
    "// scss-docs-start alert-variant-mixin
    @mixin alert-variant($background, $border, $color) {
      --#{$prefix}alert-color: #{$color};
      --#{$prefix}alert-bg: #{$background};
      --#{$prefix}alert-border-color: #{$border};
    
      @if $enable-gradients {
        background-image: var(--#{$prefix}gradient);
      }
    
      .alert-link {
        color: shade-color($color, 20%);
      }
    }
    // scss-docs-end alert-variant-mixin
    ",
    "// Disable animation if transitions are disabled
    
    // scss-docs-start progress-keyframes
    @if $enable-transitions {
      @keyframes progress-bar-stripes {
        0% { background-position-x: $progress-height; }
      }
    }
    // scss-docs-end progress-keyframes
    
    .progress {
      // scss-docs-start progress-css-vars
      --#{$prefix}progress-height: #{$progress-height};
      @include rfs($progress-font-size, --#{$prefix}progress-font-size);
      --#{$prefix}progress-bg: #{$progress-bg};
      --#{$prefix}progress-border-radius: #{$progress-border-radius};
      --#{$prefix}progress-box-shadow: #{$progress-box-shadow};
      --#{$prefix}progress-bar-color: #{$progress-bar-color};
      --#{$prefix}progress-bar-bg: #{$progress-bar-bg};
      --#{$prefix}progress-bar-transition: #{$progress-bar-transition};
      // scss-docs-end progress-css-vars
    
      display: flex;
      height: var(--#{$prefix}progress-height);
      overflow: hidden; // force rounded corners by cropping it
      @include font-size(var(--#{$prefix}progress-font-size));
      background-color: var(--#{$prefix}progress-bg);
      @include border-radius(var(--#{$prefix}progress-border-radius));
      @include box-shadow(var(--#{$prefix}progress-box-shadow));
    }
    
    .progress-bar {
      display: flex;
      flex-direction: column;
      justify-content: center;
      overflow: hidden;
      color: var(--#{$prefix}progress-bar-color);
      text-align: center;
      white-space: nowrap;
      background-color: var(--#{$prefix}progress-bar-bg);
      @include transition(var(--#{$prefix}progress-bar-transition));
    }
    
    .progress-bar-striped {
      @include gradient-striped();
      background-size: var(--#{$prefix}progress-height) var(--#{$prefix}progress-height);
    }
    
    @if $enable-transitions {
      .progress-bar-animated {
        animation: $progress-bar-animation-timing progress-bar-stripes;
    
        @if $enable-reduced-motion {
          @media (prefers-reduced-motion: reduce) {
            animation: none;
          }
        }
      }
    }
    ",
    "// Base class
    //
    // Easily usable on <ul>, <ol>, or <div>.
    
    .list-group {
      // scss-docs-start list-group-css-vars
      --#{$prefix}list-group-color: #{$list-group-color};
      --#{$prefix}list-group-bg: #{$list-group-bg};
      --#{$prefix}list-group-border-color: #{$list-group-border-color};
      --#{$prefix}list-group-border-width: #{$list-group-border-width};
      --#{$prefix}list-group-border-radius: #{$list-group-border-radius};
      --#{$prefix}list-group-item-padding-x: #{$list-group-item-padding-x};
      --#{$prefix}list-group-item-padding-y: #{$list-group-item-padding-y};
      --#{$prefix}list-group-action-color: #{$list-group-action-color};
      --#{$prefix}list-group-action-hover-color: #{$list-group-action-hover-color};
      --#{$prefix}list-group-action-hover-bg: #{$list-group-hover-bg};
      --#{$prefix}list-group-action-active-color: #{$list-group-action-active-color};
      --#{$prefix}list-group-action-active-bg: #{$list-group-action-active-bg};
      --#{$prefix}list-group-disabled-color: #{$list-group-disabled-color};
      --#{$prefix}list-group-disabled-bg: #{$list-group-disabled-bg};
      --#{$prefix}list-group-active-color: #{$list-group-active-color};
      --#{$prefix}list-group-active-bg: #{$list-group-active-bg};
      --#{$prefix}list-group-active-border-color: #{$list-group-active-border-color};
      // scss-docs-end list-group-css-vars
    
      display: flex;
      flex-direction: column;
    
      // No need to set list-style: none; since .list-group-item is block level
      padding-left: 0; // reset padding because ul and ol
      margin-bottom: 0;
      @include border-radius(var(--#{$prefix}list-group-border-radius));
    }
    
    .list-group-numbered {
      list-style-type: none;
      counter-reset: section;
    
      > .list-group-item::before {
        // Increments only this instance of the section counter
        content: counters(section, ".") ". ";
        counter-increment: section;
      }
    }
    
    // Interactive list items
    //
    // Use anchor or button elements instead of `li`s or `div`s to create interactive
    // list items. Includes an extra `.active` modifier class for selected items.
    
    .list-group-item-action {
      width: 100%; // For `<button>`s (anchors become 100% by default though)
      color: var(--#{$prefix}list-group-action-color);
      text-align: inherit; // For `<button>`s (anchors inherit)
    
      // Hover state
      &:hover,
      &:focus {
        z-index: 1; // Place hover/focus items above their siblings for proper border styling
        color: var(--#{$prefix}list-group-action-hover-color);
        text-decoration: none;
        background-color: var(--#{$prefix}list-group-action-hover-bg);
      }
    
      &:active {
        color: var(--#{$prefix}list-group-action-active-color);
        background-color: var(--#{$prefix}list-group-action-active-bg);
      }
    }
    
    // Individual list items
    //
    // Use on `li`s or `div`s within the `.list-group` parent.
    
    .list-group-item {
      position: relative;
      display: block;
      padding: var(--#{$prefix}list-group-item-padding-y) var(--#{$prefix}list-group-item-padding-x);
      color: var(--#{$prefix}list-group-color);
      text-decoration: if($link-decoration == none, null, none);
      background-color: var(--#{$prefix}list-group-bg);
      border: var(--#{$prefix}list-group-border-width) solid var(--#{$prefix}list-group-border-color);
    
      &:first-child {
        @include border-top-radius(inherit);
      }
    
      &:last-child {
        @include border-bottom-radius(inherit);
      }
    
      &.disabled,
      &:disabled {
        color: var(--#{$prefix}list-group-disabled-color);
        pointer-events: none;
        background-color: var(--#{$prefix}list-group-disabled-bg);
      }
    
      // Include both here for `<a>`s and `<button>`s
      &.active {
        z-index: 2; // Place active items above their siblings for proper border styling
        color: var(--#{$prefix}list-group-active-color);
        background-color: var(--#{$prefix}list-group-active-bg);
        border-color: var(--#{$prefix}list-group-active-border-color);
      }
    
      & + & {
        border-top-width: 0;
    
        &.active {
          margin-top: calc(var(--#{$prefix}list-group-border-width) * -1); // stylelint-disable-line function-disallowed-list
          border-top-width: var(--#{$prefix}list-group-border-width);
        }
      }
    }
    
    // Horizontal
    //
    // Change the layout of list group items from vertical (default) to horizontal.
    
    @each $breakpoint in map-keys($grid-breakpoints) {
      @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    
        .list-group-horizontal#{$infix} {
          flex-direction: row;
    
          > .list-group-item {
            &:first-child {
              @include border-bottom-start-radius(var(--#{$prefix}list-group-border-radius));
              @include border-top-end-radius(0);
            }
    
            &:last-child {
              @include border-top-end-radius(var(--#{$prefix}list-group-border-radius));
              @include border-bottom-start-radius(0);
            }
    
            &.active {
              margin-top: 0;
            }
    
            + .list-group-item {
              border-top-width: var(--#{$prefix}list-group-border-width);
              border-left-width: 0;
    
              &.active {
                margin-left: calc(var(--#{$prefix}list-group-border-width) * -1); // stylelint-disable-line function-disallowed-list
                border-left-width: var(--#{$prefix}list-group-border-width);
              }
            }
          }
        }
      }
    }
    
    
    // Flush list items
    //
    // Remove borders and border-radius to keep list group items edge-to-edge. Most
    // useful within other components (e.g., cards).
    
    .list-group-flush {
      @include border-radius(0);
    
      > .list-group-item {
        border-width: 0 0 var(--#{$prefix}list-group-border-width);
    
        &:last-child {
          border-bottom-width: 0;
        }
      }
    }
    
    
    // scss-docs-start list-group-modifiers
    // List group contextual variants
    //
    // Add modifier classes to change text and background color on individual items.
    // Organizationally, this must come after the `:hover` states.
    
    @each $state, $value in $theme-colors {
      $list-group-variant-bg: shift-color($value, $list-group-item-bg-scale);
      $list-group-variant-color: shift-color($value, $list-group-item-color-scale);
      @if (contrast-ratio($list-group-variant-bg, $list-group-variant-color) < $min-contrast-ratio) {
        $list-group-variant-color: mix($value, color-contrast($list-group-variant-bg), abs($list-group-item-color-scale));
      }
    
      @include list-group-item-variant($state, $list-group-variant-bg, $list-group-variant-color);
    }
    // scss-docs-end list-group-modifiers
    ",
    "// List Groups
    
    // scss-docs-start list-group-mixin
    @mixin list-group-item-variant($state, $background, $color) {
      .list-group-item-#{$state} {
        color: $color;
        background-color: $background;
    
        &.list-group-item-action {
          &:hover,
          &:focus {
            color: $color;
            background-color: shade-color($background, 10%);
          }
    
          &.active {
            color: $white;
            background-color: $color;
            border-color: $color;
          }
        }
      }
    }
    // scss-docs-end list-group-mixin
    ",
    "// Transparent background and border properties included for button version.
    // iOS requires the button element instead of an anchor tag.
    // If you want the anchor version, it requires `href="#"`.
    // See https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile
    
    .btn-close {
      box-sizing: content-box;
      width: $btn-close-width;
      height: $btn-close-height;
      padding: $btn-close-padding-y $btn-close-padding-x;
      color: $btn-close-color;
      background: transparent escape-svg($btn-close-bg) center / $btn-close-width auto no-repeat; // include transparent for button elements
      border: 0; // for button elements
      @include border-radius();
      opacity: $btn-close-opacity;
    
      // Override <a>'s hover style
      &:hover {
        color: $btn-close-color;
        text-decoration: none;
        opacity: $btn-close-hover-opacity;
      }
    
      &:focus {
        outline: 0;
        box-shadow: $btn-close-focus-shadow;
        opacity: $btn-close-focus-opacity;
      }
    
      &:disabled,
      &.disabled {
        pointer-events: none;
        user-select: none;
        opacity: $btn-close-disabled-opacity;
      }
    }
    
    .btn-close-white {
      filter: $btn-close-white-filter;
    }
    ",
    ".toast {
      // scss-docs-start toast-css-vars
      --#{$prefix}toast-padding-x: #{$toast-padding-x};
      --#{$prefix}toast-padding-y: #{$toast-padding-y};
      --#{$prefix}toast-spacing: #{$toast-spacing};
      --#{$prefix}toast-max-width: #{$toast-max-width};
      @include rfs($toast-font-size, --#{$prefix}toast-font-size);
      --#{$prefix}toast-color: #{$toast-color};
      --#{$prefix}toast-bg: #{$toast-background-color};
      --#{$prefix}toast-border-width: #{$toast-border-width};
      --#{$prefix}toast-border-color: #{$toast-border-color};
      --#{$prefix}toast-border-radius: #{$toast-border-radius};
      --#{$prefix}toast-box-shadow: #{$toast-box-shadow};
      --#{$prefix}toast-header-color: #{$toast-header-color};
      --#{$prefix}toast-header-bg: #{$toast-header-background-color};
      --#{$prefix}toast-header-border-color: #{$toast-header-border-color};
      // scss-docs-end toast-css-vars
    
      width: var(--#{$prefix}toast-max-width);
      max-width: 100%;
      @include font-size(var(--#{$prefix}toast-font-size));
      color: var(--#{$prefix}toast-color);
      pointer-events: auto;
      background-color: var(--#{$prefix}toast-bg);
      background-clip: padding-box;
      border: var(--#{$prefix}toast-border-width) solid var(--#{$prefix}toast-border-color);
      box-shadow: var(--#{$prefix}toast-box-shadow);
      @include border-radius(var(--#{$prefix}toast-border-radius));
    
      &.showing {
        opacity: 0;
      }
    
      &:not(.show) {
        display: none;
      }
    }
    
    .toast-container {
      position: absolute;
      z-index: $zindex-toast;
      width: max-content;
      max-width: 100%;
      pointer-events: none;
    
      > :not(:last-child) {
        margin-bottom: var(--#{$prefix}toast-spacing);
      }
    }
    
    .toast-header {
      display: flex;
      align-items: center;
      padding: var(--#{$prefix}toast-padding-y) var(--#{$prefix}toast-padding-x);
      color: var(--#{$prefix}toast-header-color);
      background-color: var(--#{$prefix}toast-header-bg);
      background-clip: padding-box;
      border-bottom: var(--#{$prefix}toast-border-width) solid var(--#{$prefix}toast-header-border-color);
      @include border-top-radius(calc(var(--#{$prefix}toast-border-radius) - var(--#{$prefix}toast-border-width)));
    
      .btn-close {
        margin-right: calc(var(--#{$prefix}toast-padding-x) * -.5); // stylelint-disable-line function-disallowed-list
        margin-left: var(--#{$prefix}toast-padding-x);
      }
    }
    
    .toast-body {
      padding: var(--#{$prefix}toast-padding-x);
      word-wrap: break-word;
    }
    ",
    "// stylelint-disable function-disallowed-list
    
    // .modal-open      - body class for killing the scroll
    // .modal           - container to scroll within
    // .modal-dialog    - positioning shell for the actual modal
    // .modal-content   - actual modal w/ bg and corners and stuff
    
    
    // Container that the modal scrolls within
    .modal {
      // scss-docs-start modal-css-vars
      --#{$prefix}modal-zindex: #{$zindex-modal};
      --#{$prefix}modal-width: #{$modal-md};
      --#{$prefix}modal-padding: #{$modal-inner-padding};
      --#{$prefix}modal-margin: #{$modal-dialog-margin};
      --#{$prefix}modal-color: #{$modal-content-color};
      --#{$prefix}modal-bg: #{$modal-content-bg};
      --#{$prefix}modal-border-color: #{$modal-content-border-color};
      --#{$prefix}modal-border-width: #{$modal-content-border-width};
      --#{$prefix}modal-border-radius: #{$modal-content-border-radius};
      --#{$prefix}modal-box-shadow: #{$modal-content-box-shadow-xs};
      --#{$prefix}modal-inner-border-radius: #{$modal-content-inner-border-radius};
      --#{$prefix}modal-header-padding-x: #{$modal-header-padding-x};
      --#{$prefix}modal-header-padding-y: #{$modal-header-padding-y};
      --#{$prefix}modal-header-padding: #{$modal-header-padding}; // Todo in v6: Split this padding into x and y
      --#{$prefix}modal-header-border-color: #{$modal-header-border-color};
      --#{$prefix}modal-header-border-width: #{$modal-header-border-width};
      --#{$prefix}modal-title-line-height: #{$modal-title-line-height};
      --#{$prefix}modal-footer-gap: #{$modal-footer-margin-between};
      --#{$prefix}modal-footer-bg: #{$modal-footer-bg};
      --#{$prefix}modal-footer-border-color: #{$modal-footer-border-color};
      --#{$prefix}modal-footer-border-width: #{$modal-footer-border-width};
      // scss-docs-end modal-css-vars
    
      position: fixed;
      top: 0;
      left: 0;
      z-index: var(--#{$prefix}modal-zindex);
      display: none;
      width: 100%;
      height: 100%;
      overflow-x: hidden;
      overflow-y: auto;
      // Prevent Chrome on Windows from adding a focus outline. For details, see
      // https://github.com/twbs/bootstrap/pull/10951.
      outline: 0;
      // We deliberately don't use `-webkit-overflow-scrolling: touch;` due to a
      // gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342
      // See also https://github.com/twbs/bootstrap/issues/17695
    }
    
    // Shell div to position the modal with bottom padding
    .modal-dialog {
      position: relative;
      width: auto;
      margin: var(--#{$prefix}modal-margin);
      // allow clicks to pass through for custom click handling to close modal
      pointer-events: none;
    
      // When fading in the modal, animate it to slide down
      .modal.fade & {
        @include transition($modal-transition);
        transform: $modal-fade-transform;
      }
      .modal.show & {
        transform: $modal-show-transform;
      }
    
      // When trying to close, animate focus to scale
      .modal.modal-static & {
        transform: $modal-scale-transform;
      }
    }
    
    .modal-dialog-scrollable {
      height: calc(100% - var(--#{$prefix}modal-margin) * 2);
    
      .modal-content {
        max-height: 100%;
        overflow: hidden;
      }
    
      .modal-body {
        overflow-y: auto;
      }
    }
    
    .modal-dialog-centered {
      display: flex;
      align-items: center;
      min-height: calc(100% - var(--#{$prefix}modal-margin) * 2);
    }
    
    // Actual modal
    .modal-content {
      position: relative;
      display: flex;
      flex-direction: column;
      width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
      // counteract the pointer-events: none; in the .modal-dialog
      color: var(--#{$prefix}modal-color);
      pointer-events: auto;
      background-color: var(--#{$prefix}modal-bg);
      background-clip: padding-box;
      border: var(--#{$prefix}modal-border-width) solid var(--#{$prefix}modal-border-color);
      @include border-radius(var(--#{$prefix}modal-border-radius));
      @include box-shadow(var(--#{$prefix}modal-box-shadow));
      // Remove focus outline from opened modal
      outline: 0;
    }
    
    // Modal background
    .modal-backdrop {
      // scss-docs-start modal-backdrop-css-vars
      --#{$prefix}backdrop-zindex: #{$zindex-modal-backdrop};
      --#{$prefix}backdrop-bg: #{$modal-backdrop-bg};
      --#{$prefix}backdrop-opacity: #{$modal-backdrop-opacity};
      // scss-docs-end modal-backdrop-css-vars
    
      @include overlay-backdrop(var(--#{$prefix}backdrop-zindex), var(--#{$prefix}backdrop-bg), var(--#{$prefix}backdrop-opacity));
    }
    
    // Modal header
    // Top section of the modal w/ title and dismiss
    .modal-header {
      display: flex;
      flex-shrink: 0;
      align-items: center;
      justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
      padding: var(--#{$prefix}modal-header-padding);
      border-bottom: var(--#{$prefix}modal-header-border-width) solid var(--#{$prefix}modal-header-border-color);
      @include border-top-radius(var(--#{$prefix}modal-inner-border-radius));
    
      .btn-close {
        padding: calc(var(--#{$prefix}modal-header-padding-y) * .5) calc(var(--#{$prefix}modal-header-padding-x) * .5);
        margin: calc(var(--#{$prefix}modal-header-padding-y) * -.5) calc(var(--#{$prefix}modal-header-padding-x) * -.5) calc(var(--#{$prefix}modal-header-padding-y) * -.5) auto;
      }
    }
    
    // Title text within header
    .modal-title {
      margin-bottom: 0;
      line-height: var(--#{$prefix}modal-title-line-height);
    }
    
    // Modal body
    // Where all modal content resides (sibling of .modal-header and .modal-footer)
    .modal-body {
      position: relative;
      // Enable `flex-grow: 1` so that the body take up as much space as possible
      // when there should be a fixed height on `.modal-dialog`.
      flex: 1 1 auto;
      padding: var(--#{$prefix}modal-padding);
    }
    
    // Footer (for actions)
    .modal-footer {
      display: flex;
      flex-shrink: 0;
      flex-wrap: wrap;
      align-items: center; // vertically center
      justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
      padding: calc(var(--#{$prefix}modal-padding) - var(--#{$prefix}modal-footer-gap) * .5);
      background-color: var(--#{$prefix}modal-footer-bg);
      border-top: var(--#{$prefix}modal-footer-border-width) solid var(--#{$prefix}modal-footer-border-color);
      @include border-bottom-radius(var(--#{$prefix}modal-inner-border-radius));
    
      // Place margin between footer elements
      // This solution is far from ideal because of the universal selector usage,
      // but is needed to fix https://github.com/twbs/bootstrap/issues/24800
      > * {
        margin: calc(var(--#{$prefix}modal-footer-gap) * .5); // Todo in v6: replace with gap on parent class
      }
    }
    
    // Scale up the modal
    @include media-breakpoint-up(sm) {
      .modal {
        --#{$prefix}modal-margin: #{$modal-dialog-margin-y-sm-up};
        --#{$prefix}modal-box-shadow: #{$modal-content-box-shadow-sm-up};
      }
    
      // Automatically set modal's width for larger viewports
      .modal-dialog {
        max-width: var(--#{$prefix}modal-width);
        margin-right: auto;
        margin-left: auto;
      }
    
      .modal-sm {
        --#{$prefix}modal-width: #{$modal-sm};
      }
    }
    
    @include media-breakpoint-up(lg) {
      .modal-lg,
      .modal-xl {
        --#{$prefix}modal-width: #{$modal-lg};
      }
    }
    
    @include media-breakpoint-up(xl) {
      .modal-xl {
        --#{$prefix}modal-width: #{$modal-xl};
      }
    }
    
    // scss-docs-start modal-fullscreen-loop
    @each $breakpoint in map-keys($grid-breakpoints) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
      $postfix: if($infix != "", $infix + "-down", "");
    
      @include media-breakpoint-down($breakpoint) {
        .modal-fullscreen#{$postfix} {
          width: 100vw;
          max-width: none;
          height: 100%;
          margin: 0;
    
          .modal-content {
            height: 100%;
            border: 0;
            @include border-radius(0);
          }
    
          .modal-header,
          .modal-footer {
            @include border-radius(0);
          }
    
          .modal-body {
            overflow-y: auto;
          }
        }
      }
    }
    // scss-docs-end modal-fullscreen-loop
    ",
    "// Shared between modals and offcanvases
    @mixin overlay-backdrop($zindex, $backdrop-bg, $backdrop-opacity) {
      position: fixed;
      top: 0;
      left: 0;
      z-index: $zindex;
      width: 100vw;
      height: 100vh;
      background-color: $backdrop-bg;
    
      // Fade for backdrop
      &.fade { opacity: 0; }
      &.show { opacity: $backdrop-opacity; }
    }
    ",
    "// Base class
    .tooltip {
      // scss-docs-start tooltip-css-vars
      --#{$prefix}tooltip-zindex: #{$zindex-tooltip};
      --#{$prefix}tooltip-max-width: #{$tooltip-max-width};
      --#{$prefix}tooltip-padding-x: #{$tooltip-padding-x};
      --#{$prefix}tooltip-padding-y: #{$tooltip-padding-y};
      --#{$prefix}tooltip-margin: #{$tooltip-margin};
      @include rfs($tooltip-font-size, --#{$prefix}tooltip-font-size);
      --#{$prefix}tooltip-color: #{$tooltip-color};
      --#{$prefix}tooltip-bg: #{$tooltip-bg};
      --#{$prefix}tooltip-border-radius: #{$tooltip-border-radius};
      --#{$prefix}tooltip-opacity: #{$tooltip-opacity};
      --#{$prefix}tooltip-arrow-width: #{$tooltip-arrow-width};
      --#{$prefix}tooltip-arrow-height: #{$tooltip-arrow-height};
      // scss-docs-end tooltip-css-vars
    
      z-index: var(--#{$prefix}tooltip-zindex);
      display: block;
      padding: var(--#{$prefix}tooltip-arrow-height);
      margin: var(--#{$prefix}tooltip-margin);
      @include deprecate("`$tooltip-margin`", "v5", "v5.x", true);
      // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
      // So reset our font and text properties to avoid inheriting weird values.
      @include reset-text();
      @include font-size(var(--#{$prefix}tooltip-font-size));
      // Allow breaking very long words so they don't overflow the tooltip's bounds
      word-wrap: break-word;
      opacity: 0;
    
      &.show { opacity: var(--#{$prefix}tooltip-opacity); }
    
      .tooltip-arrow {
        display: block;
        width: var(--#{$prefix}tooltip-arrow-width);
        height: var(--#{$prefix}tooltip-arrow-height);
    
        &::before {
          position: absolute;
          content: "";
          border-color: transparent;
          border-style: solid;
        }
      }
    }
    
    .bs-tooltip-top .tooltip-arrow {
      bottom: 0;
    
      &::before {
        top: -1px;
        border-width: var(--#{$prefix}tooltip-arrow-height) calc(var(--#{$prefix}tooltip-arrow-width) * .5) 0; // stylelint-disable-line function-disallowed-list
        border-top-color: var(--#{$prefix}tooltip-bg);
      }
    }
    
    /* rtl:begin:ignore */
    .bs-tooltip-end .tooltip-arrow {
      left: 0;
      width: var(--#{$prefix}tooltip-arrow-height);
      height: var(--#{$prefix}tooltip-arrow-width);
    
      &::before {
        right: -1px;
        border-width: calc(var(--#{$prefix}tooltip-arrow-width) * .5) var(--#{$prefix}tooltip-arrow-height) calc(var(--#{$prefix}tooltip-arrow-width) * .5) 0; // stylelint-disable-line function-disallowed-list
        border-right-color: var(--#{$prefix}tooltip-bg);
      }
    }
    
    /* rtl:end:ignore */
    
    .bs-tooltip-bottom .tooltip-arrow {
      top: 0;
    
      &::before {
        bottom: -1px;
        border-width: 0 calc(var(--#{$prefix}tooltip-arrow-width) * .5) var(--#{$prefix}tooltip-arrow-height); // stylelint-disable-line function-disallowed-list
        border-bottom-color: var(--#{$prefix}tooltip-bg);
      }
    }
    
    /* rtl:begin:ignore */
    .bs-tooltip-start .tooltip-arrow {
      right: 0;
      width: var(--#{$prefix}tooltip-arrow-height);
      height: var(--#{$prefix}tooltip-arrow-width);
    
      &::before {
        left: -1px;
        border-width: calc(var(--#{$prefix}tooltip-arrow-width) * .5) 0 calc(var(--#{$prefix}tooltip-arrow-width) * .5) var(--#{$prefix}tooltip-arrow-height); // stylelint-disable-line function-disallowed-list
        border-left-color: var(--#{$prefix}tooltip-bg);
      }
    }
    
    /* rtl:end:ignore */
    
    .bs-tooltip-auto {
      &[data-popper-placement^="top"] {
        @extend .bs-tooltip-top;
      }
      &[data-popper-placement^="right"] {
        @extend .bs-tooltip-end;
      }
      &[data-popper-placement^="bottom"] {
        @extend .bs-tooltip-bottom;
      }
      &[data-popper-placement^="left"] {
        @extend .bs-tooltip-start;
      }
    }
    
    // Wrapper for the tooltip content
    .tooltip-inner {
      max-width: var(--#{$prefix}tooltip-max-width);
      padding: var(--#{$prefix}tooltip-padding-y) var(--#{$prefix}tooltip-padding-x);
      color: var(--#{$prefix}tooltip-color);
      text-align: center;
      background-color: var(--#{$prefix}tooltip-bg);
      @include border-radius(var(--#{$prefix}tooltip-border-radius));
    }
    ",
    "@mixin reset-text {
      font-family: $font-family-base;
      // We deliberately do NOT reset font-size or overflow-wrap / word-wrap.
      font-style: normal;
      font-weight: $font-weight-normal;
      line-height: $line-height-base;
      text-align: left; // Fallback for where `start` is not supported
      text-align: start;
      text-decoration: none;
      text-shadow: none;
      text-transform: none;
      letter-spacing: normal;
      word-break: normal;
      white-space: normal;
      word-spacing: normal;
      line-break: auto;
    }
    ",
    ".popover {
      // scss-docs-start popover-css-vars
      --#{$prefix}popover-zindex: #{$zindex-popover};
      --#{$prefix}popover-max-width: #{$popover-max-width};
      @include rfs($popover-font-size, --#{$prefix}popover-font-size);
      --#{$prefix}popover-bg: #{$popover-bg};
      --#{$prefix}popover-border-width: #{$popover-border-width};
      --#{$prefix}popover-border-color: #{$popover-border-color};
      --#{$prefix}popover-border-radius: #{$popover-border-radius};
      --#{$prefix}popover-inner-border-radius: #{$popover-inner-border-radius};
      --#{$prefix}popover-box-shadow: #{$popover-box-shadow};
      --#{$prefix}popover-header-padding-x: #{$popover-header-padding-x};
      --#{$prefix}popover-header-padding-y: #{$popover-header-padding-y};
      @include rfs($popover-header-font-size, --#{$prefix}popover-header-font-size);
      --#{$prefix}popover-header-color: #{$popover-header-color};
      --#{$prefix}popover-header-bg: #{$popover-header-bg};
      --#{$prefix}popover-body-padding-x: #{$popover-body-padding-x};
      --#{$prefix}popover-body-padding-y: #{$popover-body-padding-y};
      --#{$prefix}popover-body-color: #{$popover-body-color};
      --#{$prefix}popover-arrow-width: #{$popover-arrow-width};
      --#{$prefix}popover-arrow-height: #{$popover-arrow-height};
      --#{$prefix}popover-arrow-border: var(--#{$prefix}popover-border-color);
      // scss-docs-end popover-css-vars
    
      z-index: var(--#{$prefix}popover-zindex);
      display: block;
      max-width: var(--#{$prefix}popover-max-width);
      // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
      // So reset our font and text properties to avoid inheriting weird values.
      @include reset-text();
      @include font-size(var(--#{$prefix}popover-font-size));
      // Allow breaking very long words so they don't overflow the popover's bounds
      word-wrap: break-word;
      background-color: var(--#{$prefix}popover-bg);
      background-clip: padding-box;
      border: var(--#{$prefix}popover-border-width) solid var(--#{$prefix}popover-border-color);
      @include border-radius(var(--#{$prefix}popover-border-radius));
      @include box-shadow(var(--#{$prefix}popover-box-shadow));
    
      .popover-arrow {
        display: block;
        width: var(--#{$prefix}popover-arrow-width);
        height: var(--#{$prefix}popover-arrow-height);
    
        &::before,
        &::after {
          position: absolute;
          display: block;
          content: "";
          border-color: transparent;
          border-style: solid;
          border-width: 0;
        }
      }
    }
    
    .bs-popover-top {
      > .popover-arrow {
        bottom: calc((var(--#{$prefix}popover-arrow-height) * -1) - var(--#{$prefix}popover-border-width)); // stylelint-disable-line function-disallowed-list
    
        &::before,
        &::after {
          border-width: var(--#{$prefix}popover-arrow-height) calc(var(--#{$prefix}popover-arrow-width) * .5) 0; // stylelint-disable-line function-disallowed-list
        }
    
        &::before {
          bottom: 0;
          border-top-color: var(--#{$prefix}popover-arrow-border);
        }
    
        &::after {
          bottom: var(--#{$prefix}popover-border-width);
          border-top-color: var(--#{$prefix}popover-bg);
        }
      }
    }
    
    /* rtl:begin:ignore */
    .bs-popover-end {
      > .popover-arrow {
        left: calc((var(--#{$prefix}popover-arrow-height) * -1) - var(--#{$prefix}popover-border-width)); // stylelint-disable-line function-disallowed-list
        width: var(--#{$prefix}popover-arrow-height);
        height: var(--#{$prefix}popover-arrow-width);
    
        &::before,
        &::after {
          border-width: calc(var(--#{$prefix}popover-arrow-width) * .5) var(--#{$prefix}popover-arrow-height) calc(var(--#{$prefix}popover-arrow-width) * .5) 0; // stylelint-disable-line function-disallowed-list
        }
    
        &::before {
          left: 0;
          border-right-color: var(--#{$prefix}popover-arrow-border);
        }
    
        &::after {
          left: var(--#{$prefix}popover-border-width);
          border-right-color: var(--#{$prefix}popover-bg);
        }
      }
    }
    
    /* rtl:end:ignore */
    
    .bs-popover-bottom {
      > .popover-arrow {
        top: calc((var(--#{$prefix}popover-arrow-height) * -1) - var(--#{$prefix}popover-border-width)); // stylelint-disable-line function-disallowed-list
    
        &::before,
        &::after {
          border-width: 0 calc(var(--#{$prefix}popover-arrow-width) * .5) var(--#{$prefix}popover-arrow-height); // stylelint-disable-line function-disallowed-list
        }
    
        &::before {
          top: 0;
          border-bottom-color: var(--#{$prefix}popover-arrow-border);
        }
    
        &::after {
          top: var(--#{$prefix}popover-border-width);
          border-bottom-color: var(--#{$prefix}popover-bg);
        }
      }
    
      // This will remove the popover-header's border just below the arrow
      .popover-header::before {
        position: absolute;
        top: 0;
        left: 50%;
        display: block;
        width: var(--#{$prefix}popover-arrow-width);
        margin-left: calc(var(--#{$prefix}popover-arrow-width) * -.5); // stylelint-disable-line function-disallowed-list
        content: "";
        border-bottom: var(--#{$prefix}popover-border-width) solid var(--#{$prefix}popover-header-bg);
      }
    }
    
    /* rtl:begin:ignore */
    .bs-popover-start {
      > .popover-arrow {
        right: calc((var(--#{$prefix}popover-arrow-height) * -1) - var(--#{$prefix}popover-border-width)); // stylelint-disable-line function-disallowed-list
        width: var(--#{$prefix}popover-arrow-height);
        height: var(--#{$prefix}popover-arrow-width);
    
        &::before,
        &::after {
          border-width: calc(var(--#{$prefix}popover-arrow-width) * .5) 0 calc(var(--#{$prefix}popover-arrow-width) * .5) var(--#{$prefix}popover-arrow-height); // stylelint-disable-line function-disallowed-list
        }
    
        &::before {
          right: 0;
          border-left-color: var(--#{$prefix}popover-arrow-border);
        }
    
        &::after {
          right: var(--#{$prefix}popover-border-width);
          border-left-color: var(--#{$prefix}popover-bg);
        }
      }
    }
    
    /* rtl:end:ignore */
    
    .bs-popover-auto {
      &[data-popper-placement^="top"] {
        @extend .bs-popover-top;
      }
      &[data-popper-placement^="right"] {
        @extend .bs-popover-end;
      }
      &[data-popper-placement^="bottom"] {
        @extend .bs-popover-bottom;
      }
      &[data-popper-placement^="left"] {
        @extend .bs-popover-start;
      }
    }
    
    // Offset the popover to account for the popover arrow
    .popover-header {
      padding: var(--#{$prefix}popover-header-padding-y) var(--#{$prefix}popover-header-padding-x);
      margin-bottom: 0; // Reset the default from Reboot
      @include font-size(var(--#{$prefix}popover-header-font-size));
      color: var(--#{$prefix}popover-header-color);
      background-color: var(--#{$prefix}popover-header-bg);
      border-bottom: var(--#{$prefix}popover-border-width) solid var(--#{$prefix}popover-border-color);
      @include border-top-radius(var(--#{$prefix}popover-inner-border-radius));
    
      &:empty {
        display: none;
      }
    }
    
    .popover-body {
      padding: var(--#{$prefix}popover-body-padding-y) var(--#{$prefix}popover-body-padding-x);
      color: var(--#{$prefix}popover-body-color);
    }
    ",
    "// Notes on the classes:
    //
    // 1. .carousel.pointer-event should ideally be pan-y (to allow for users to scroll vertically)
    //    even when their scroll action started on a carousel, but for compatibility (with Firefox)
    //    we're preventing all actions instead
    // 2. The .carousel-item-start and .carousel-item-end is used to indicate where
    //    the active slide is heading.
    // 3. .active.carousel-item is the current slide.
    // 4. .active.carousel-item-start and .active.carousel-item-end is the current
    //    slide in its in-transition state. Only one of these occurs at a time.
    // 5. .carousel-item-next.carousel-item-start and .carousel-item-prev.carousel-item-end
    //    is the upcoming slide in transition.
    
    .carousel {
      position: relative;
    }
    
    .carousel.pointer-event {
      touch-action: pan-y;
    }
    
    .carousel-inner {
      position: relative;
      width: 100%;
      overflow: hidden;
      @include clearfix();
    }
    
    .carousel-item {
      position: relative;
      display: none;
      float: left;
      width: 100%;
      margin-right: -100%;
      backface-visibility: hidden;
      @include transition($carousel-transition);
    }
    
    .carousel-item.active,
    .carousel-item-next,
    .carousel-item-prev {
      display: block;
    }
    
    /* rtl:begin:ignore */
    .carousel-item-next:not(.carousel-item-start),
    .active.carousel-item-end {
      transform: translateX(100%);
    }
    
    .carousel-item-prev:not(.carousel-item-end),
    .active.carousel-item-start {
      transform: translateX(-100%);
    }
    
    /* rtl:end:ignore */
    
    
    //
    // Alternate transitions
    //
    
    .carousel-fade {
      .carousel-item {
        opacity: 0;
        transition-property: opacity;
        transform: none;
      }
    
      .carousel-item.active,
      .carousel-item-next.carousel-item-start,
      .carousel-item-prev.carousel-item-end {
        z-index: 1;
        opacity: 1;
      }
    
      .active.carousel-item-start,
      .active.carousel-item-end {
        z-index: 0;
        opacity: 0;
        @include transition(opacity 0s $carousel-transition-duration);
      }
    }
    
    
    //
    // Left/right controls for nav
    //
    
    .carousel-control-prev,
    .carousel-control-next {
      position: absolute;
      top: 0;
      bottom: 0;
      z-index: 1;
      // Use flex for alignment (1-3)
      display: flex; // 1. allow flex styles
      align-items: center; // 2. vertically center contents
      justify-content: center; // 3. horizontally center contents
      width: $carousel-control-width;
      padding: 0;
      color: $carousel-control-color;
      text-align: center;
      background: none;
      border: 0;
      opacity: $carousel-control-opacity;
      @include transition($carousel-control-transition);
    
      // Hover/focus state
      &:hover,
      &:focus {
        color: $carousel-control-color;
        text-decoration: none;
        outline: 0;
        opacity: $carousel-control-hover-opacity;
      }
    }
    .carousel-control-prev {
      left: 0;
      background-image: if($enable-gradients, linear-gradient(90deg, rgba($black, .25), rgba($black, .001)), null);
    }
    .carousel-control-next {
      right: 0;
      background-image: if($enable-gradients, linear-gradient(270deg, rgba($black, .25), rgba($black, .001)), null);
    }
    
    // Icons for within
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
      display: inline-block;
      width: $carousel-control-icon-width;
      height: $carousel-control-icon-width;
      background-repeat: no-repeat;
      background-position: 50%;
      background-size: 100% 100%;
    }
    
    /* rtl:options: {
      "autoRename": true,
      "stringMap":[ {
        "name"    : "prev-next",
        "search"  : "prev",
        "replace" : "next"
      } ]
    } */
    .carousel-control-prev-icon {
      background-image: escape-svg($carousel-control-prev-icon-bg);
    }
    .carousel-control-next-icon {
      background-image: escape-svg($carousel-control-next-icon-bg);
    }
    
    // Optional indicator pips/controls
    //
    // Add a container (such as a list) with the following class and add an item (ideally a focusable control,
    // like a button) with data-bs-target for each slide your carousel holds.
    
    .carousel-indicators {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 2;
      display: flex;
      justify-content: center;
      padding: 0;
      // Use the .carousel-control's width as margin so we don't overlay those
      margin-right: $carousel-control-width;
      margin-bottom: 1rem;
      margin-left: $carousel-control-width;
      list-style: none;
    
      [data-bs-target] {
        box-sizing: content-box;
        flex: 0 1 auto;
        width: $carousel-indicator-width;
        height: $carousel-indicator-height;
        padding: 0;
        margin-right: $carousel-indicator-spacer;
        margin-left: $carousel-indicator-spacer;
        text-indent: -999px;
        cursor: pointer;
        background-color: $carousel-indicator-active-bg;
        background-clip: padding-box;
        border: 0;
        // Use transparent borders to increase the hit area by 10px on top and bottom.
        border-top: $carousel-indicator-hit-area-height solid transparent;
        border-bottom: $carousel-indicator-hit-area-height solid transparent;
        opacity: $carousel-indicator-opacity;
        @include transition($carousel-indicator-transition);
      }
    
      .active {
        opacity: $carousel-indicator-active-opacity;
      }
    }
    
    
    // Optional captions
    //
    //
    
    .carousel-caption {
      position: absolute;
      right: (100% - $carousel-caption-width) * .5;
      bottom: $carousel-caption-spacer;
      left: (100% - $carousel-caption-width) * .5;
      padding-top: $carousel-caption-padding-y;
      padding-bottom: $carousel-caption-padding-y;
      color: $carousel-caption-color;
      text-align: center;
    }
    
    // Dark mode carousel
    
    .carousel-dark {
      .carousel-control-prev-icon,
      .carousel-control-next-icon {
        filter: $carousel-dark-control-icon-filter;
      }
    
      .carousel-indicators [data-bs-target] {
        background-color: $carousel-dark-indicator-active-bg;
      }
    
      .carousel-caption {
        color: $carousel-dark-caption-color;
      }
    }
    ",
    "// scss-docs-start clearfix
    @mixin clearfix() {
      &::after {
        display: block;
        clear: both;
        content: "";
      }
    }
    // scss-docs-end clearfix
    ",
    "//
    // Rotating border
    //
    
    .spinner-grow,
    .spinner-border {
      display: inline-block;
      width: var(--#{$prefix}spinner-width);
      height: var(--#{$prefix}spinner-height);
      vertical-align: var(--#{$prefix}spinner-vertical-align);
      // stylelint-disable-next-line property-disallowed-list
      border-radius: 50%;
      animation: var(--#{$prefix}spinner-animation-speed) linear infinite var(--#{$prefix}spinner-animation-name);
    }
    
    // scss-docs-start spinner-border-keyframes
    @keyframes spinner-border {
      to { transform: rotate(360deg) #{"/* rtl:ignore */"}; }
    }
    // scss-docs-end spinner-border-keyframes
    
    .spinner-border {
      // scss-docs-start spinner-border-css-vars
      --#{$prefix}spinner-width: #{$spinner-width};
      --#{$prefix}spinner-height: #{$spinner-height};
      --#{$prefix}spinner-vertical-align: #{$spinner-vertical-align};
      --#{$prefix}spinner-border-width: #{$spinner-border-width};
      --#{$prefix}spinner-animation-speed: #{$spinner-animation-speed};
      --#{$prefix}spinner-animation-name: spinner-border;
      // scss-docs-end spinner-border-css-vars
    
      border: var(--#{$prefix}spinner-border-width) solid currentcolor;
      border-right-color: transparent;
    }
    
    .spinner-border-sm {
      // scss-docs-start spinner-border-sm-css-vars
      --#{$prefix}spinner-width: #{$spinner-width-sm};
      --#{$prefix}spinner-height: #{$spinner-height-sm};
      --#{$prefix}spinner-border-width: #{$spinner-border-width-sm};
      // scss-docs-end spinner-border-sm-css-vars
    }
    
    //
    // Growing circle
    //
    
    // scss-docs-start spinner-grow-keyframes
    @keyframes spinner-grow {
      0% {
        transform: scale(0);
      }
      50% {
        opacity: 1;
        transform: none;
      }
    }
    // scss-docs-end spinner-grow-keyframes
    
    .spinner-grow {
      // scss-docs-start spinner-grow-css-vars
      --#{$prefix}spinner-width: #{$spinner-width};
      --#{$prefix}spinner-height: #{$spinner-height};
      --#{$prefix}spinner-vertical-align: #{$spinner-vertical-align};
      --#{$prefix}spinner-animation-speed: #{$spinner-animation-speed};
      --#{$prefix}spinner-animation-name: spinner-grow;
      // scss-docs-end spinner-grow-css-vars
    
      background-color: currentcolor;
      opacity: 0;
    }
    
    .spinner-grow-sm {
      --#{$prefix}spinner-width: #{$spinner-width-sm};
      --#{$prefix}spinner-height: #{$spinner-height-sm};
    }
    
    @if $enable-reduced-motion {
      @media (prefers-reduced-motion: reduce) {
        .spinner-border,
        .spinner-grow {
          --#{$prefix}spinner-animation-speed: #{$spinner-animation-speed * 2};
        }
      }
    }
    ",
    "// stylelint-disable function-disallowed-list
    
    %offcanvas-css-vars {
      // scss-docs-start offcanvas-css-vars
      --#{$prefix}offcanvas-width: #{$offcanvas-horizontal-width};
      --#{$prefix}offcanvas-height: #{$offcanvas-vertical-height};
      --#{$prefix}offcanvas-padding-x: #{$offcanvas-padding-x};
      --#{$prefix}offcanvas-padding-y: #{$offcanvas-padding-y};
      --#{$prefix}offcanvas-color: #{$offcanvas-color};
      --#{$prefix}offcanvas-bg: #{$offcanvas-bg-color};
      --#{$prefix}offcanvas-border-width: #{$offcanvas-border-width};
      --#{$prefix}offcanvas-border-color: #{$offcanvas-border-color};
      --#{$prefix}offcanvas-box-shadow: #{$offcanvas-box-shadow};
      // scss-docs-end offcanvas-css-vars
    }
    
    @each $breakpoint in map-keys($grid-breakpoints) {
      $next: breakpoint-next($breakpoint, $grid-breakpoints);
      $infix: breakpoint-infix($next, $grid-breakpoints);
    
      .offcanvas#{$infix} {
        @extend %offcanvas-css-vars;
      }
    }
    
    @each $breakpoint in map-keys($grid-breakpoints) {
      $next: breakpoint-next($breakpoint, $grid-breakpoints);
      $infix: breakpoint-infix($next, $grid-breakpoints);
    
      .offcanvas#{$infix} {
        @include media-breakpoint-down($next) {
          position: fixed;
          bottom: 0;
          z-index: $zindex-offcanvas;
          display: flex;
          flex-direction: column;
          max-width: 100%;
          color: var(--#{$prefix}offcanvas-color);
          visibility: hidden;
          background-color: var(--#{$prefix}offcanvas-bg);
          background-clip: padding-box;
          outline: 0;
          @include box-shadow(var(--#{$prefix}offcanvas-box-shadow));
          @include transition(transform $offcanvas-transition-duration ease-in-out);
    
          &.offcanvas-start {
            top: 0;
            left: 0;
            width: var(--#{$prefix}offcanvas-width);
            border-right: var(--#{$prefix}offcanvas-border-width) solid var(--#{$prefix}offcanvas-border-color);
            transform: translateX(-100%);
          }
    
          &.offcanvas-end {
            top: 0;
            right: 0;
            width: var(--#{$prefix}offcanvas-width);
            border-left: var(--#{$prefix}offcanvas-border-width) solid var(--#{$prefix}offcanvas-border-color);
            transform: translateX(100%);
          }
    
          &.offcanvas-top {
            top: 0;
            right: 0;
            left: 0;
            height: var(--#{$prefix}offcanvas-height);
            max-height: 100%;
            border-bottom: var(--#{$prefix}offcanvas-border-width) solid var(--#{$prefix}offcanvas-border-color);
            transform: translateY(-100%);
          }
    
          &.offcanvas-bottom {
            right: 0;
            left: 0;
            height: var(--#{$prefix}offcanvas-height);
            max-height: 100%;
            border-top: var(--#{$prefix}offcanvas-border-width) solid var(--#{$prefix}offcanvas-border-color);
            transform: translateY(100%);
          }
    
          &.showing,
          &.show:not(.hiding) {
            transform: none;
          }
    
          &.showing,
          &.hiding,
          &.show {
            visibility: visible;
          }
        }
    
        @if not ($infix == "") {
          @include media-breakpoint-up($next) {
            --#{$prefix}offcanvas-height: auto;
            --#{$prefix}offcanvas-border-width: 0;
            background-color: transparent !important; // stylelint-disable-line declaration-no-important
    
            .offcanvas-header {
              display: none;
            }
    
            .offcanvas-body {
              display: flex;
              flex-grow: 0;
              padding: 0;
              overflow-y: visible;
              // Reset `background-color` in case `.bg-*` classes are used in offcanvas
              background-color: transparent !important; // stylelint-disable-line declaration-no-important
            }
          }
        }
      }
    }
    
    .offcanvas-backdrop {
      @include overlay-backdrop($zindex-offcanvas-backdrop, $offcanvas-backdrop-bg, $offcanvas-backdrop-opacity);
    }
    
    .offcanvas-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: var(--#{$prefix}offcanvas-padding-y) var(--#{$prefix}offcanvas-padding-x);
    
      .btn-close {
        padding: calc(var(--#{$prefix}offcanvas-padding-y) * .5) calc(var(--#{$prefix}offcanvas-padding-x) * .5);
        margin-top: calc(var(--#{$prefix}offcanvas-padding-y) * -.5);
        margin-right: calc(var(--#{$prefix}offcanvas-padding-x) * -.5);
        margin-bottom: calc(var(--#{$prefix}offcanvas-padding-y) * -.5);
      }
    }
    
    .offcanvas-title {
      margin-bottom: 0;
      line-height: $offcanvas-title-line-height;
    }
    
    .offcanvas-body {
      flex-grow: 1;
      padding: var(--#{$prefix}offcanvas-padding-y) var(--#{$prefix}offcanvas-padding-x);
      overflow-y: auto;
    }
    ",
    ".placeholder {
      display: inline-block;
      min-height: 1em;
      vertical-align: middle;
      cursor: wait;
      background-color: currentcolor;
      opacity: $placeholder-opacity-max;
    
      &.btn::before {
        display: inline-block;
        content: "";
      }
    }
    
    // Sizing
    .placeholder-xs {
      min-height: .6em;
    }
    
    .placeholder-sm {
      min-height: .8em;
    }
    
    .placeholder-lg {
      min-height: 1.2em;
    }
    
    // Animation
    .placeholder-glow {
      .placeholder {
        animation: placeholder-glow 2s ease-in-out infinite;
      }
    }
    
    @keyframes placeholder-glow {
      50% {
        opacity: $placeholder-opacity-min;
      }
    }
    
    .placeholder-wave {
      mask-image: linear-gradient(130deg, $black 55%, rgba(0, 0, 0, (1 - $placeholder-opacity-min)) 75%, $black 95%);
      mask-size: 200% 100%;
      animation: placeholder-wave 2s linear infinite;
    }
    
    @keyframes placeholder-wave {
      100% {
        mask-position: -200% 0%;
      }
    }
    ",
    "// stylelint-disable function-name-case
    
    // All-caps `RGBA()` function used because of this Sass bug: https://github.com/sass/node-sass/issues/2251
    @each $color, $value in $theme-colors {
      $color-rgb: to-rgb($value);
      .text-bg-#{$color} {
        color: color-contrast($value) if($enable-important-utilities, !important, null);
        background-color: RGBA($color-rgb, var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
      }
    }
    ",
    "@each $color, $value in $theme-colors {
      .link-#{$color} {
        color: $value !important; // stylelint-disable-line declaration-no-important
    
        @if $link-shade-percentage != 0 {
          &:hover,
          &:focus {
            color: if(color-contrast($value) == $color-contrast-light, shade-color($value, $link-shade-percentage), tint-color($value, $link-shade-percentage)) !important; // stylelint-disable-line declaration-no-important
          }
        }
      }
    }
    ",
    "// Credit: Nicolas Gallagher and SUIT CSS.
    
    .ratio {
      position: relative;
      width: 100%;
    
      &::before {
        display: block;
        padding-top: var(--#{$prefix}aspect-ratio);
        content: "";
      }
    
      > * {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
    }
    
    @each $key, $ratio in $aspect-ratios {
      .ratio-#{$key} {
        --#{$prefix}aspect-ratio: #{$ratio};
      }
    }
    ",
    "// Shorthand
    
    .fixed-top {
      position: fixed;
      top: 0;
      right: 0;
      left: 0;
      z-index: $zindex-fixed;
    }
    
    .fixed-bottom {
      position: fixed;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: $zindex-fixed;
    }
    
    // Responsive sticky top and bottom
    @each $breakpoint in map-keys($grid-breakpoints) {
      @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    
        .sticky#{$infix}-top {
          position: sticky;
          top: 0;
          z-index: $zindex-sticky;
        }
    
        .sticky#{$infix}-bottom {
          position: sticky;
          bottom: 0;
          z-index: $zindex-sticky;
        }
      }
    }
    ",
    "// scss-docs-start stacks
    .hstack {
      display: flex;
      flex-direction: row;
      align-items: center;
      align-self: stretch;
    }
    
    .vstack {
      display: flex;
      flex: 1 1 auto;
      flex-direction: column;
      align-self: stretch;
    }
    // scss-docs-end stacks
    ",
    "//
    // Visually hidden
    //
    
    .visually-hidden,
    .visually-hidden-focusable:not(:focus):not(:focus-within) {
      @include visually-hidden();
    }
    ",
    "// stylelint-disable declaration-no-important
    
    // Hide content visually while keeping it accessible to assistive technologies
    //
    // See: https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/
    // See: https://kittygiraudel.com/2016/10/13/css-hide-and-seek/
    
    @mixin visually-hidden() {
      position: absolute !important;
      width: 1px !important;
      height: 1px !important;
      padding: 0 !important;
      margin: -1px !important; // Fix for https://github.com/twbs/bootstrap/issues/25686
      overflow: hidden !important;
      clip: rect(0, 0, 0, 0) !important;
      white-space: nowrap !important;
      border: 0 !important;
    }
    
    // Use to only display content when it's focused, or one of its child elements is focused
    // (i.e. when focus is within the element/container that the class was applied to)
    //
    // Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
    
    @mixin visually-hidden-focusable() {
      &:not(:focus):not(:focus-within) {
        @include visually-hidden();
      }
    }
    ",
    "//
    // Stretched link
    //
    
    .stretched-link {
      &::#{$stretched-link-pseudo-element} {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: $stretched-link-z-index;
        content: "";
      }
    }
    ",
    "//
    // Text truncation
    //
    
    .text-truncate {
      @include text-truncate();
    }
    ",
    "// Text truncate
    // Requires inline-block or block for proper styling
    
    @mixin text-truncate() {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    ",
    ".vr {
      display: inline-block;
      align-self: stretch;
      width: 1px;
      min-height: 1em;
      background-color: currentcolor;
      opacity: $hr-opacity;
    }
    ",
    "// Utility generator
    // Used to generate utilities & print utilities
    @mixin generate-utility($utility, $infix, $is-rfs-media-query: false) {
      $values: map-get($utility, values);
    
      // If the values are a list or string, convert it into a map
      @if type-of($values) == "string" or type-of(nth($values, 1)) != "list" {
        $values: zip($values, $values);
      }
    
      @each $key, $value in $values {
        $properties: map-get($utility, property);
    
        // Multiple properties are possible, for example with vertical or horizontal margins or paddings
        @if type-of($properties) == "string" {
          $properties: append((), $properties);
        }
    
        // Use custom class if present
        $property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));
        $property-class: if($property-class == null, "", $property-class);
    
        // Use custom CSS variable name if present, otherwise default to `class`
        $css-variable-name: if(map-has-key($utility, css-variable-name), map-get($utility, css-variable-name), map-get($utility, class));
    
        // State params to generate pseudo-classes
        $state: if(map-has-key($utility, state), map-get($utility, state), ());
    
        $infix: if($property-class == "" and str-slice($infix, 1, 1) == "-", str-slice($infix, 2), $infix);
    
        // Don't prefix if value key is null (eg. with shadow class)
        $property-class-modifier: if($key, if($property-class == "" and $infix == "", "", "-") + $key, "");
    
        @if map-get($utility, rfs) {
          // Inside the media query
          @if $is-rfs-media-query {
            $val: rfs-value($value);
    
            // Do not render anything if fluid and non fluid values are the same
            $value: if($val == rfs-fluid-value($value), null, $val);
          }
          @else {
            $value: rfs-fluid-value($value);
          }
        }
    
        $is-css-var: map-get($utility, css-var);
        $is-local-vars: map-get($utility, local-vars);
        $is-rtl: map-get($utility, rtl);
    
        @if $value != null {
          @if $is-rtl == false {
            /* rtl:begin:remove */
          }
    
          @if $is-css-var {
            .#{$property-class + $infix + $property-class-modifier} {
              --#{$prefix}#{$css-variable-name}: #{$value};
            }
    
            @each $pseudo in $state {
              .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {
                --#{$prefix}#{$css-variable-name}: #{$value};
              }
            }
          } @else {
            .#{$property-class + $infix + $property-class-modifier} {
              @each $property in $properties {
                @if $is-local-vars {
                  @each $local-var, $variable in $is-local-vars {
                    --#{$prefix}#{$local-var}: #{$variable};
                  }
                }
                #{$property}: $value if($enable-important-utilities, !important, null);
              }
            }
    
            @each $pseudo in $state {
              .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {
                @each $property in $properties {
                  @if $is-local-vars {
                    @each $local-var, $variable in $is-local-vars {
                      --#{$prefix}#{$local-var}: #{$variable};
                    }
                  }
                  #{$property}: $value if($enable-important-utilities, !important, null);
                }
              }
            }
          }
    
          @if $is-rtl == false {
            /* rtl:end:remove */
          }
        }
      }
    }
    ",
    "// Loop over each breakpoint
    @each $breakpoint in map-keys($grid-breakpoints) {
    
      // Generate media query if needed
      @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    
        // Loop over each utility property
        @each $key, $utility in $utilities {
          // The utility can be disabled with `false`, thus check if the utility is a map first
          // Only proceed if responsive media queries are enabled or if it's the base media query
          @if type-of($utility) == "map" and (map-get($utility, responsive) or $infix == "") {
            @include generate-utility($utility, $infix);
          }
        }
      }
    }
    
    // RFS rescaling
    @media (min-width: $rfs-mq-value) {
      @each $breakpoint in map-keys($grid-breakpoints) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    
        @if (map-get($grid-breakpoints, $breakpoint) < $rfs-breakpoint) {
          // Loop over each utility property
          @each $key, $utility in $utilities {
            // The utility can be disabled with `false`, thus check if the utility is a map first
            // Only proceed if responsive media queries are enabled or if it's the base media query
            @if type-of($utility) == "map" and map-get($utility, rfs) and (map-get($utility, responsive) or $infix == "") {
              @include generate-utility($utility, $infix, true);
            }
          }
        }
      }
    }
    
    
    // Print utilities
    @media print {
      @each $key, $utility in $utilities {
        // The utility can be disabled with `false`, thus check if the utility is a map first
        // Then check if the utility needs print styles
        @if type-of($utility) == "map" and map-get($utility, print) == true {
          @include generate-utility($utility, "-print");
        }
      }
    }
    "
    ]
    }